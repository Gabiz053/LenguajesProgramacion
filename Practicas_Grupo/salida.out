Grammar:

Rule 0     S' -> program
Rule 1     program -> clases
Rule 2     clases -> clases clase ;
Rule 3     clases -> clase ;
Rule 4     clase -> CLASS TYPEID INHERITS TYPEID { error }
Rule 5     clase -> CLASS TYPEID { error }
Rule 6     clase -> CLASS TYPEID INHERITS TYPEID { caracteristicas }
Rule 7     clase -> CLASS TYPEID { caracteristicas }
Rule 8     clase -> CLASS TYPEID INHERITS TYPEID { }
Rule 9     clase -> CLASS TYPEID { }
Rule 10    caracteristicas -> caracteristicas caracteristica ;
Rule 11    caracteristicas -> caracteristica ;
Rule 12    caracteristica -> OBJECTID ( formales ) : TYPEID { expression }
Rule 13    caracteristica -> OBJECTID ( ) : TYPEID { expression }
Rule 14    caracteristica -> OBJECTID : TYPEID ASSIGN expression  [precedence=right, level=8]
Rule 15    caracteristica -> OBJECTID : TYPEID
Rule 16    formal -> OBJECTID : TYPEID
Rule 17    formales -> formales , formal
Rule 18    formales -> formal
Rule 19    expression -> CASE expression OF darrowlist ESAC
Rule 20    expression -> WHILE expression LOOP expression POOL
Rule 21    expression -> LET let_list IN expression
Rule 22    expression -> IF expression THEN expression ELSE expression FI
Rule 23    expression -> { expressions }
Rule 24    expression -> BOOL_CONST
Rule 25    expression -> STR_CONST
Rule 26    expression -> INT_CONST
Rule 27    expression -> OBJECTID
Rule 28    expression -> OBJECTID ( parametros )
Rule 29    expression -> OBJECTID ( )
Rule 30    expression -> expression . OBJECTID ( parametros )
Rule 31    expression -> expression . OBJECTID ( )
Rule 32    expression -> expression @ TYPEID . OBJECTID ( parametros )
Rule 33    expression -> expression @ TYPEID . OBJECTID ( )
Rule 34    expression -> ~ expression
Rule 35    expression -> NEW TYPEID
Rule 36    expression -> ISVOID expression  [precedence=left, level=3]
Rule 37    expression -> NOT expression  [precedence=left, level=7]
Rule 38    expression -> ( expression )
Rule 39    expression -> expression = expression  [precedence=nonassoc, level=6]
Rule 40    expression -> expression LE expression  [precedence=nonassoc, level=6]
Rule 41    expression -> expression < expression  [precedence=nonassoc, level=6]
Rule 42    expression -> expression / expression  [precedence=left, level=4]
Rule 43    expression -> expression * expression  [precedence=left, level=4]
Rule 44    expression -> expression - expression  [precedence=left, level=5]
Rule 45    expression -> expression + expression  [precedence=left, level=5]
Rule 46    expression -> OBJECTID ASSIGN expression  [precedence=right, level=8]
Rule 47    expressions -> expressions expression ;
Rule 48    expressions -> expression ;
Rule 49    parametros -> parametros , expression
Rule 50    parametros -> expression
Rule 51    let_list -> let_decl
Rule 52    let_list -> let_list , let_decl
Rule 53    let_decl -> OBJECTID : TYPEID ASSIGN expression  [precedence=right, level=8]
Rule 54    let_decl -> OBJECTID : TYPEID
Rule 55    darrowlist -> darrowlist OBJECTID : TYPEID DARROW expression ;
Rule 56    darrowlist -> OBJECTID : TYPEID DARROW expression ;

Unused terminals:

    ERROR

Terminals, with rules where they appear:

(                    : 12 13 28 29 30 31 32 33 38
)                    : 12 13 28 29 30 31 32 33 38
*                    : 43
+                    : 45
,                    : 17 49 52
-                    : 44
.                    : 30 31 32 33
/                    : 42
:                    : 12 13 14 15 16 53 54 55 56
;                    : 2 3 10 11 47 48 55 56
<                    : 41
=                    : 39
@                    : 32 33
ASSIGN               : 14 46 53
BOOL_CONST           : 24
CASE                 : 19
CLASS                : 4 5 6 7 8 9
DARROW               : 55 56
ELSE                 : 22
ERROR                : 
ESAC                 : 19
FI                   : 22
IF                   : 22
IN                   : 21
INHERITS             : 4 6 8
INT_CONST            : 26
ISVOID               : 36
LE                   : 40
LET                  : 21
LOOP                 : 20
NEW                  : 35
NOT                  : 37
OBJECTID             : 12 13 14 15 16 27 28 29 30 31 32 33 46 53 54 55 56
OF                   : 19
POOL                 : 20
STR_CONST            : 25
THEN                 : 22
TYPEID               : 4 4 5 6 6 7 8 8 9 12 13 14 15 16 32 33 35 53 54 55 56
WHILE                : 20
error                : 4 5
{                    : 4 5 6 7 8 9 12 13 23
}                    : 4 5 6 7 8 9 12 13 23
~                    : 34

Nonterminals, with rules where they appear:

caracteristica       : 10 11
caracteristicas      : 6 7 10
clase                : 2 3
clases               : 1 2
darrowlist           : 19 55
expression           : 12 13 14 19 20 20 21 22 22 22 30 31 32 33 34 36 37 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 47 48 49 50 53 55 56
expressions          : 23 47
formal               : 17 18
formales             : 12 17
let_decl             : 51 52
let_list             : 21 52
parametros           : 28 30 32 49
program              : 0


state 0

    (0) S' -> . program
    (1) program -> . clases
    (2) clases -> . clases clase ;
    (3) clases -> . clase ;
    (4) clase -> . CLASS TYPEID INHERITS TYPEID { error }
    (5) clase -> . CLASS TYPEID { error }
    (6) clase -> . CLASS TYPEID INHERITS TYPEID { caracteristicas }
    (7) clase -> . CLASS TYPEID { caracteristicas }
    (8) clase -> . CLASS TYPEID INHERITS TYPEID { }
    (9) clase -> . CLASS TYPEID { }
    CLASS           shift and go to state 4

    program                        shift and go to state 1
    clases                         shift and go to state 2
    clase                          shift and go to state 3

state 1

    (0) S' -> program .


state 2

    (1) program -> clases .
    (2) clases -> clases . clase ;
    (4) clase -> . CLASS TYPEID INHERITS TYPEID { error }
    (5) clase -> . CLASS TYPEID { error }
    (6) clase -> . CLASS TYPEID INHERITS TYPEID { caracteristicas }
    (7) clase -> . CLASS TYPEID { caracteristicas }
    (8) clase -> . CLASS TYPEID INHERITS TYPEID { }
    (9) clase -> . CLASS TYPEID { }
    $end            reduce using rule 1 (program -> clases .)
    CLASS           shift and go to state 4

    clase                          shift and go to state 5

state 3

    (3) clases -> clase . ;
    ;               shift and go to state 6


state 4

    (4) clase -> CLASS . TYPEID INHERITS TYPEID { error }
    (5) clase -> CLASS . TYPEID { error }
    (6) clase -> CLASS . TYPEID INHERITS TYPEID { caracteristicas }
    (7) clase -> CLASS . TYPEID { caracteristicas }
    (8) clase -> CLASS . TYPEID INHERITS TYPEID { }
    (9) clase -> CLASS . TYPEID { }
    TYPEID          shift and go to state 7


state 5

    (2) clases -> clases clase . ;
    ;               shift and go to state 8


state 6

    (3) clases -> clase ; .
    CLASS           reduce using rule 3 (clases -> clase ; .)
    $end            reduce using rule 3 (clases -> clase ; .)


state 7

    (4) clase -> CLASS TYPEID . INHERITS TYPEID { error }
    (5) clase -> CLASS TYPEID . { error }
    (6) clase -> CLASS TYPEID . INHERITS TYPEID { caracteristicas }
    (7) clase -> CLASS TYPEID . { caracteristicas }
    (8) clase -> CLASS TYPEID . INHERITS TYPEID { }
    (9) clase -> CLASS TYPEID . { }
    INHERITS        shift and go to state 9
    {               shift and go to state 10


state 8

    (2) clases -> clases clase ; .
    CLASS           reduce using rule 2 (clases -> clases clase ; .)
    $end            reduce using rule 2 (clases -> clases clase ; .)


state 9

    (4) clase -> CLASS TYPEID INHERITS . TYPEID { error }
    (6) clase -> CLASS TYPEID INHERITS . TYPEID { caracteristicas }
    (8) clase -> CLASS TYPEID INHERITS . TYPEID { }
    TYPEID          shift and go to state 11


state 10

    (5) clase -> CLASS TYPEID { . error }
    (7) clase -> CLASS TYPEID { . caracteristicas }
    (9) clase -> CLASS TYPEID { . }
    (10) caracteristicas -> . caracteristicas caracteristica ;
    (11) caracteristicas -> . caracteristica ;
    (12) caracteristica -> . OBJECTID ( formales ) : TYPEID { expression }
    (13) caracteristica -> . OBJECTID ( ) : TYPEID { expression }
    (14) caracteristica -> . OBJECTID : TYPEID ASSIGN expression
    (15) caracteristica -> . OBJECTID : TYPEID
    error           shift and go to state 12
    }               shift and go to state 13
    OBJECTID        shift and go to state 16

    caracteristicas                shift and go to state 14
    caracteristica                 shift and go to state 15

state 11

    (4) clase -> CLASS TYPEID INHERITS TYPEID . { error }
    (6) clase -> CLASS TYPEID INHERITS TYPEID . { caracteristicas }
    (8) clase -> CLASS TYPEID INHERITS TYPEID . { }
    {               shift and go to state 17


state 12

    (5) clase -> CLASS TYPEID { error . }
    }               shift and go to state 18


state 13

    (9) clase -> CLASS TYPEID { } .
    ;               reduce using rule 9 (clase -> CLASS TYPEID { } .)


state 14

    (7) clase -> CLASS TYPEID { caracteristicas . }
    (10) caracteristicas -> caracteristicas . caracteristica ;
    (12) caracteristica -> . OBJECTID ( formales ) : TYPEID { expression }
    (13) caracteristica -> . OBJECTID ( ) : TYPEID { expression }
    (14) caracteristica -> . OBJECTID : TYPEID ASSIGN expression
    (15) caracteristica -> . OBJECTID : TYPEID
    }               shift and go to state 19
    OBJECTID        shift and go to state 16

    caracteristica                 shift and go to state 20

state 15

    (11) caracteristicas -> caracteristica . ;
    ;               shift and go to state 21


state 16

    (12) caracteristica -> OBJECTID . ( formales ) : TYPEID { expression }
    (13) caracteristica -> OBJECTID . ( ) : TYPEID { expression }
    (14) caracteristica -> OBJECTID . : TYPEID ASSIGN expression
    (15) caracteristica -> OBJECTID . : TYPEID
    (               shift and go to state 22
    :               shift and go to state 23


state 17

    (4) clase -> CLASS TYPEID INHERITS TYPEID { . error }
    (6) clase -> CLASS TYPEID INHERITS TYPEID { . caracteristicas }
    (8) clase -> CLASS TYPEID INHERITS TYPEID { . }
    (10) caracteristicas -> . caracteristicas caracteristica ;
    (11) caracteristicas -> . caracteristica ;
    (12) caracteristica -> . OBJECTID ( formales ) : TYPEID { expression }
    (13) caracteristica -> . OBJECTID ( ) : TYPEID { expression }
    (14) caracteristica -> . OBJECTID : TYPEID ASSIGN expression
    (15) caracteristica -> . OBJECTID : TYPEID
    error           shift and go to state 24
    }               shift and go to state 25
    OBJECTID        shift and go to state 16

    caracteristicas                shift and go to state 26
    caracteristica                 shift and go to state 15

state 18

    (5) clase -> CLASS TYPEID { error } .
    ;               reduce using rule 5 (clase -> CLASS TYPEID { error } .)


state 19

    (7) clase -> CLASS TYPEID { caracteristicas } .
    ;               reduce using rule 7 (clase -> CLASS TYPEID { caracteristicas } .)


state 20

    (10) caracteristicas -> caracteristicas caracteristica . ;
    ;               shift and go to state 27


state 21

    (11) caracteristicas -> caracteristica ; .
    }               reduce using rule 11 (caracteristicas -> caracteristica ; .)
    OBJECTID        reduce using rule 11 (caracteristicas -> caracteristica ; .)


state 22

    (12) caracteristica -> OBJECTID ( . formales ) : TYPEID { expression }
    (13) caracteristica -> OBJECTID ( . ) : TYPEID { expression }
    (17) formales -> . formales , formal
    (18) formales -> . formal
    (16) formal -> . OBJECTID : TYPEID
    )               shift and go to state 30
    OBJECTID        shift and go to state 28

    formales                       shift and go to state 29
    formal                         shift and go to state 31

state 23

    (14) caracteristica -> OBJECTID : . TYPEID ASSIGN expression
    (15) caracteristica -> OBJECTID : . TYPEID
    TYPEID          shift and go to state 32


state 24

    (4) clase -> CLASS TYPEID INHERITS TYPEID { error . }
    }               shift and go to state 33


state 25

    (8) clase -> CLASS TYPEID INHERITS TYPEID { } .
    ;               reduce using rule 8 (clase -> CLASS TYPEID INHERITS TYPEID { } .)


state 26

    (6) clase -> CLASS TYPEID INHERITS TYPEID { caracteristicas . }
    (10) caracteristicas -> caracteristicas . caracteristica ;
    (12) caracteristica -> . OBJECTID ( formales ) : TYPEID { expression }
    (13) caracteristica -> . OBJECTID ( ) : TYPEID { expression }
    (14) caracteristica -> . OBJECTID : TYPEID ASSIGN expression
    (15) caracteristica -> . OBJECTID : TYPEID
    }               shift and go to state 34
    OBJECTID        shift and go to state 16

    caracteristica                 shift and go to state 20

state 27

    (10) caracteristicas -> caracteristicas caracteristica ; .
    }               reduce using rule 10 (caracteristicas -> caracteristicas caracteristica ; .)
    OBJECTID        reduce using rule 10 (caracteristicas -> caracteristicas caracteristica ; .)


state 28

    (16) formal -> OBJECTID . : TYPEID
    :               shift and go to state 35


state 29

    (12) caracteristica -> OBJECTID ( formales . ) : TYPEID { expression }
    (17) formales -> formales . , formal
    )               shift and go to state 36
    ,               shift and go to state 37


state 30

    (13) caracteristica -> OBJECTID ( ) . : TYPEID { expression }
    :               shift and go to state 38


state 31

    (18) formales -> formal .
    )               reduce using rule 18 (formales -> formal .)
    ,               reduce using rule 18 (formales -> formal .)


state 32

    (14) caracteristica -> OBJECTID : TYPEID . ASSIGN expression
    (15) caracteristica -> OBJECTID : TYPEID .
    ASSIGN          shift and go to state 39
    ;               reduce using rule 15 (caracteristica -> OBJECTID : TYPEID .)


state 33

    (4) clase -> CLASS TYPEID INHERITS TYPEID { error } .
    ;               reduce using rule 4 (clase -> CLASS TYPEID INHERITS TYPEID { error } .)


state 34

    (6) clase -> CLASS TYPEID INHERITS TYPEID { caracteristicas } .
    ;               reduce using rule 6 (clase -> CLASS TYPEID INHERITS TYPEID { caracteristicas } .)


state 35

    (16) formal -> OBJECTID : . TYPEID
    TYPEID          shift and go to state 40


state 36

    (12) caracteristica -> OBJECTID ( formales ) . : TYPEID { expression }
    :               shift and go to state 41


state 37

    (17) formales -> formales , . formal
    (16) formal -> . OBJECTID : TYPEID
    OBJECTID        shift and go to state 28

    formal                         shift and go to state 42

state 38

    (13) caracteristica -> OBJECTID ( ) : . TYPEID { expression }
    TYPEID          shift and go to state 43


state 39

    (14) caracteristica -> OBJECTID : TYPEID ASSIGN . expression
    (19) expression -> . CASE expression OF darrowlist ESAC
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LET let_list IN expression
    (22) expression -> . IF expression THEN expression ELSE expression FI
    (23) expression -> . { expressions }
    (24) expression -> . BOOL_CONST
    (25) expression -> . STR_CONST
    (26) expression -> . INT_CONST
    (27) expression -> . OBJECTID
    (28) expression -> . OBJECTID ( parametros )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( parametros )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . NEW TYPEID
    (36) expression -> . ISVOID expression
    (37) expression -> . NOT expression
    (38) expression -> . ( expression )
    (39) expression -> . expression = expression
    (40) expression -> . expression LE expression
    (41) expression -> . expression < expression
    (42) expression -> . expression / expression
    (43) expression -> . expression * expression
    (44) expression -> . expression - expression
    (45) expression -> . expression + expression
    (46) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 46
    WHILE           shift and go to state 47
    LET             shift and go to state 48
    IF              shift and go to state 49
    {               shift and go to state 50
    BOOL_CONST      shift and go to state 51
    STR_CONST       shift and go to state 52
    INT_CONST       shift and go to state 53
    OBJECTID        shift and go to state 44
    ~               shift and go to state 55
    NEW             shift and go to state 56
    ISVOID          shift and go to state 57
    NOT             shift and go to state 58
    (               shift and go to state 54

    expression                     shift and go to state 45

state 40

    (16) formal -> OBJECTID : TYPEID .
    )               reduce using rule 16 (formal -> OBJECTID : TYPEID .)
    ,               reduce using rule 16 (formal -> OBJECTID : TYPEID .)


state 41

    (12) caracteristica -> OBJECTID ( formales ) : . TYPEID { expression }
    TYPEID          shift and go to state 59


state 42

    (17) formales -> formales , formal .
    )               reduce using rule 17 (formales -> formales , formal .)
    ,               reduce using rule 17 (formales -> formales , formal .)


state 43

    (13) caracteristica -> OBJECTID ( ) : TYPEID . { expression }
    {               shift and go to state 60


state 44

    (27) expression -> OBJECTID .
    (28) expression -> OBJECTID . ( parametros )
    (29) expression -> OBJECTID . ( )
    (46) expression -> OBJECTID . ASSIGN expression
    .               reduce using rule 27 (expression -> OBJECTID .)
    @               reduce using rule 27 (expression -> OBJECTID .)
    =               reduce using rule 27 (expression -> OBJECTID .)
    LE              reduce using rule 27 (expression -> OBJECTID .)
    <               reduce using rule 27 (expression -> OBJECTID .)
    /               reduce using rule 27 (expression -> OBJECTID .)
    *               reduce using rule 27 (expression -> OBJECTID .)
    -               reduce using rule 27 (expression -> OBJECTID .)
    +               reduce using rule 27 (expression -> OBJECTID .)
    ;               reduce using rule 27 (expression -> OBJECTID .)
    OF              reduce using rule 27 (expression -> OBJECTID .)
    LOOP            reduce using rule 27 (expression -> OBJECTID .)
    THEN            reduce using rule 27 (expression -> OBJECTID .)
    )               reduce using rule 27 (expression -> OBJECTID .)
    }               reduce using rule 27 (expression -> OBJECTID .)
    ,               reduce using rule 27 (expression -> OBJECTID .)
    POOL            reduce using rule 27 (expression -> OBJECTID .)
    ELSE            reduce using rule 27 (expression -> OBJECTID .)
    IN              reduce using rule 27 (expression -> OBJECTID .)
    FI              reduce using rule 27 (expression -> OBJECTID .)
    (               shift and go to state 61
    ASSIGN          shift and go to state 62


state 45

    (14) caracteristica -> OBJECTID : TYPEID ASSIGN expression .
    (30) expression -> expression . . OBJECTID ( parametros )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (39) expression -> expression . = expression
    (40) expression -> expression . LE expression
    (41) expression -> expression . < expression
    (42) expression -> expression . / expression
    (43) expression -> expression . * expression
    (44) expression -> expression . - expression
    (45) expression -> expression . + expression
    ;               reduce using rule 14 (caracteristica -> OBJECTID : TYPEID ASSIGN expression .)
    .               shift and go to state 63
    @               shift and go to state 64
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 46

    (19) expression -> CASE . expression OF darrowlist ESAC
    (19) expression -> . CASE expression OF darrowlist ESAC
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LET let_list IN expression
    (22) expression -> . IF expression THEN expression ELSE expression FI
    (23) expression -> . { expressions }
    (24) expression -> . BOOL_CONST
    (25) expression -> . STR_CONST
    (26) expression -> . INT_CONST
    (27) expression -> . OBJECTID
    (28) expression -> . OBJECTID ( parametros )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( parametros )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . NEW TYPEID
    (36) expression -> . ISVOID expression
    (37) expression -> . NOT expression
    (38) expression -> . ( expression )
    (39) expression -> . expression = expression
    (40) expression -> . expression LE expression
    (41) expression -> . expression < expression
    (42) expression -> . expression / expression
    (43) expression -> . expression * expression
    (44) expression -> . expression - expression
    (45) expression -> . expression + expression
    (46) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 46
    WHILE           shift and go to state 47
    LET             shift and go to state 48
    IF              shift and go to state 49
    {               shift and go to state 50
    BOOL_CONST      shift and go to state 51
    STR_CONST       shift and go to state 52
    INT_CONST       shift and go to state 53
    OBJECTID        shift and go to state 44
    ~               shift and go to state 55
    NEW             shift and go to state 56
    ISVOID          shift and go to state 57
    NOT             shift and go to state 58
    (               shift and go to state 54

    expression                     shift and go to state 72

state 47

    (20) expression -> WHILE . expression LOOP expression POOL
    (19) expression -> . CASE expression OF darrowlist ESAC
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LET let_list IN expression
    (22) expression -> . IF expression THEN expression ELSE expression FI
    (23) expression -> . { expressions }
    (24) expression -> . BOOL_CONST
    (25) expression -> . STR_CONST
    (26) expression -> . INT_CONST
    (27) expression -> . OBJECTID
    (28) expression -> . OBJECTID ( parametros )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( parametros )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . NEW TYPEID
    (36) expression -> . ISVOID expression
    (37) expression -> . NOT expression
    (38) expression -> . ( expression )
    (39) expression -> . expression = expression
    (40) expression -> . expression LE expression
    (41) expression -> . expression < expression
    (42) expression -> . expression / expression
    (43) expression -> . expression * expression
    (44) expression -> . expression - expression
    (45) expression -> . expression + expression
    (46) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 46
    WHILE           shift and go to state 47
    LET             shift and go to state 48
    IF              shift and go to state 49
    {               shift and go to state 50
    BOOL_CONST      shift and go to state 51
    STR_CONST       shift and go to state 52
    INT_CONST       shift and go to state 53
    OBJECTID        shift and go to state 44
    ~               shift and go to state 55
    NEW             shift and go to state 56
    ISVOID          shift and go to state 57
    NOT             shift and go to state 58
    (               shift and go to state 54

    expression                     shift and go to state 73

state 48

    (21) expression -> LET . let_list IN expression
    (51) let_list -> . let_decl
    (52) let_list -> . let_list , let_decl
    (53) let_decl -> . OBJECTID : TYPEID ASSIGN expression
    (54) let_decl -> . OBJECTID : TYPEID
    OBJECTID        shift and go to state 76

    let_list                       shift and go to state 74
    let_decl                       shift and go to state 75

state 49

    (22) expression -> IF . expression THEN expression ELSE expression FI
    (19) expression -> . CASE expression OF darrowlist ESAC
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LET let_list IN expression
    (22) expression -> . IF expression THEN expression ELSE expression FI
    (23) expression -> . { expressions }
    (24) expression -> . BOOL_CONST
    (25) expression -> . STR_CONST
    (26) expression -> . INT_CONST
    (27) expression -> . OBJECTID
    (28) expression -> . OBJECTID ( parametros )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( parametros )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . NEW TYPEID
    (36) expression -> . ISVOID expression
    (37) expression -> . NOT expression
    (38) expression -> . ( expression )
    (39) expression -> . expression = expression
    (40) expression -> . expression LE expression
    (41) expression -> . expression < expression
    (42) expression -> . expression / expression
    (43) expression -> . expression * expression
    (44) expression -> . expression - expression
    (45) expression -> . expression + expression
    (46) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 46
    WHILE           shift and go to state 47
    LET             shift and go to state 48
    IF              shift and go to state 49
    {               shift and go to state 50
    BOOL_CONST      shift and go to state 51
    STR_CONST       shift and go to state 52
    INT_CONST       shift and go to state 53
    OBJECTID        shift and go to state 44
    ~               shift and go to state 55
    NEW             shift and go to state 56
    ISVOID          shift and go to state 57
    NOT             shift and go to state 58
    (               shift and go to state 54

    expression                     shift and go to state 77

state 50

    (23) expression -> { . expressions }
    (47) expressions -> . expressions expression ;
    (48) expressions -> . expression ;
    (19) expression -> . CASE expression OF darrowlist ESAC
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LET let_list IN expression
    (22) expression -> . IF expression THEN expression ELSE expression FI
    (23) expression -> . { expressions }
    (24) expression -> . BOOL_CONST
    (25) expression -> . STR_CONST
    (26) expression -> . INT_CONST
    (27) expression -> . OBJECTID
    (28) expression -> . OBJECTID ( parametros )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( parametros )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . NEW TYPEID
    (36) expression -> . ISVOID expression
    (37) expression -> . NOT expression
    (38) expression -> . ( expression )
    (39) expression -> . expression = expression
    (40) expression -> . expression LE expression
    (41) expression -> . expression < expression
    (42) expression -> . expression / expression
    (43) expression -> . expression * expression
    (44) expression -> . expression - expression
    (45) expression -> . expression + expression
    (46) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 46
    WHILE           shift and go to state 47
    LET             shift and go to state 48
    IF              shift and go to state 49
    {               shift and go to state 50
    BOOL_CONST      shift and go to state 51
    STR_CONST       shift and go to state 52
    INT_CONST       shift and go to state 53
    OBJECTID        shift and go to state 44
    ~               shift and go to state 55
    NEW             shift and go to state 56
    ISVOID          shift and go to state 57
    NOT             shift and go to state 58
    (               shift and go to state 54

    expressions                    shift and go to state 78
    expression                     shift and go to state 79

state 51

    (24) expression -> BOOL_CONST .
    .               reduce using rule 24 (expression -> BOOL_CONST .)
    @               reduce using rule 24 (expression -> BOOL_CONST .)
    =               reduce using rule 24 (expression -> BOOL_CONST .)
    LE              reduce using rule 24 (expression -> BOOL_CONST .)
    <               reduce using rule 24 (expression -> BOOL_CONST .)
    /               reduce using rule 24 (expression -> BOOL_CONST .)
    *               reduce using rule 24 (expression -> BOOL_CONST .)
    -               reduce using rule 24 (expression -> BOOL_CONST .)
    +               reduce using rule 24 (expression -> BOOL_CONST .)
    ;               reduce using rule 24 (expression -> BOOL_CONST .)
    OF              reduce using rule 24 (expression -> BOOL_CONST .)
    LOOP            reduce using rule 24 (expression -> BOOL_CONST .)
    THEN            reduce using rule 24 (expression -> BOOL_CONST .)
    )               reduce using rule 24 (expression -> BOOL_CONST .)
    }               reduce using rule 24 (expression -> BOOL_CONST .)
    ,               reduce using rule 24 (expression -> BOOL_CONST .)
    POOL            reduce using rule 24 (expression -> BOOL_CONST .)
    ELSE            reduce using rule 24 (expression -> BOOL_CONST .)
    IN              reduce using rule 24 (expression -> BOOL_CONST .)
    FI              reduce using rule 24 (expression -> BOOL_CONST .)


state 52

    (25) expression -> STR_CONST .
    .               reduce using rule 25 (expression -> STR_CONST .)
    @               reduce using rule 25 (expression -> STR_CONST .)
    =               reduce using rule 25 (expression -> STR_CONST .)
    LE              reduce using rule 25 (expression -> STR_CONST .)
    <               reduce using rule 25 (expression -> STR_CONST .)
    /               reduce using rule 25 (expression -> STR_CONST .)
    *               reduce using rule 25 (expression -> STR_CONST .)
    -               reduce using rule 25 (expression -> STR_CONST .)
    +               reduce using rule 25 (expression -> STR_CONST .)
    ;               reduce using rule 25 (expression -> STR_CONST .)
    OF              reduce using rule 25 (expression -> STR_CONST .)
    LOOP            reduce using rule 25 (expression -> STR_CONST .)
    THEN            reduce using rule 25 (expression -> STR_CONST .)
    )               reduce using rule 25 (expression -> STR_CONST .)
    }               reduce using rule 25 (expression -> STR_CONST .)
    ,               reduce using rule 25 (expression -> STR_CONST .)
    POOL            reduce using rule 25 (expression -> STR_CONST .)
    ELSE            reduce using rule 25 (expression -> STR_CONST .)
    IN              reduce using rule 25 (expression -> STR_CONST .)
    FI              reduce using rule 25 (expression -> STR_CONST .)


state 53

    (26) expression -> INT_CONST .
    .               reduce using rule 26 (expression -> INT_CONST .)
    @               reduce using rule 26 (expression -> INT_CONST .)
    =               reduce using rule 26 (expression -> INT_CONST .)
    LE              reduce using rule 26 (expression -> INT_CONST .)
    <               reduce using rule 26 (expression -> INT_CONST .)
    /               reduce using rule 26 (expression -> INT_CONST .)
    *               reduce using rule 26 (expression -> INT_CONST .)
    -               reduce using rule 26 (expression -> INT_CONST .)
    +               reduce using rule 26 (expression -> INT_CONST .)
    ;               reduce using rule 26 (expression -> INT_CONST .)
    OF              reduce using rule 26 (expression -> INT_CONST .)
    LOOP            reduce using rule 26 (expression -> INT_CONST .)
    THEN            reduce using rule 26 (expression -> INT_CONST .)
    )               reduce using rule 26 (expression -> INT_CONST .)
    }               reduce using rule 26 (expression -> INT_CONST .)
    ,               reduce using rule 26 (expression -> INT_CONST .)
    POOL            reduce using rule 26 (expression -> INT_CONST .)
    ELSE            reduce using rule 26 (expression -> INT_CONST .)
    IN              reduce using rule 26 (expression -> INT_CONST .)
    FI              reduce using rule 26 (expression -> INT_CONST .)


state 54

    (38) expression -> ( . expression )
    (19) expression -> . CASE expression OF darrowlist ESAC
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LET let_list IN expression
    (22) expression -> . IF expression THEN expression ELSE expression FI
    (23) expression -> . { expressions }
    (24) expression -> . BOOL_CONST
    (25) expression -> . STR_CONST
    (26) expression -> . INT_CONST
    (27) expression -> . OBJECTID
    (28) expression -> . OBJECTID ( parametros )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( parametros )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . NEW TYPEID
    (36) expression -> . ISVOID expression
    (37) expression -> . NOT expression
    (38) expression -> . ( expression )
    (39) expression -> . expression = expression
    (40) expression -> . expression LE expression
    (41) expression -> . expression < expression
    (42) expression -> . expression / expression
    (43) expression -> . expression * expression
    (44) expression -> . expression - expression
    (45) expression -> . expression + expression
    (46) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 46
    WHILE           shift and go to state 47
    LET             shift and go to state 48
    IF              shift and go to state 49
    {               shift and go to state 50
    BOOL_CONST      shift and go to state 51
    STR_CONST       shift and go to state 52
    INT_CONST       shift and go to state 53
    OBJECTID        shift and go to state 44
    ~               shift and go to state 55
    NEW             shift and go to state 56
    ISVOID          shift and go to state 57
    NOT             shift and go to state 58
    (               shift and go to state 54

    expression                     shift and go to state 80

state 55

    (34) expression -> ~ . expression
    (19) expression -> . CASE expression OF darrowlist ESAC
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LET let_list IN expression
    (22) expression -> . IF expression THEN expression ELSE expression FI
    (23) expression -> . { expressions }
    (24) expression -> . BOOL_CONST
    (25) expression -> . STR_CONST
    (26) expression -> . INT_CONST
    (27) expression -> . OBJECTID
    (28) expression -> . OBJECTID ( parametros )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( parametros )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . NEW TYPEID
    (36) expression -> . ISVOID expression
    (37) expression -> . NOT expression
    (38) expression -> . ( expression )
    (39) expression -> . expression = expression
    (40) expression -> . expression LE expression
    (41) expression -> . expression < expression
    (42) expression -> . expression / expression
    (43) expression -> . expression * expression
    (44) expression -> . expression - expression
    (45) expression -> . expression + expression
    (46) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 46
    WHILE           shift and go to state 47
    LET             shift and go to state 48
    IF              shift and go to state 49
    {               shift and go to state 50
    BOOL_CONST      shift and go to state 51
    STR_CONST       shift and go to state 52
    INT_CONST       shift and go to state 53
    OBJECTID        shift and go to state 44
    ~               shift and go to state 55
    NEW             shift and go to state 56
    ISVOID          shift and go to state 57
    NOT             shift and go to state 58
    (               shift and go to state 54

    expression                     shift and go to state 81

state 56

    (35) expression -> NEW . TYPEID
    TYPEID          shift and go to state 82


state 57

    (36) expression -> ISVOID . expression
    (19) expression -> . CASE expression OF darrowlist ESAC
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LET let_list IN expression
    (22) expression -> . IF expression THEN expression ELSE expression FI
    (23) expression -> . { expressions }
    (24) expression -> . BOOL_CONST
    (25) expression -> . STR_CONST
    (26) expression -> . INT_CONST
    (27) expression -> . OBJECTID
    (28) expression -> . OBJECTID ( parametros )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( parametros )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . NEW TYPEID
    (36) expression -> . ISVOID expression
    (37) expression -> . NOT expression
    (38) expression -> . ( expression )
    (39) expression -> . expression = expression
    (40) expression -> . expression LE expression
    (41) expression -> . expression < expression
    (42) expression -> . expression / expression
    (43) expression -> . expression * expression
    (44) expression -> . expression - expression
    (45) expression -> . expression + expression
    (46) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 46
    WHILE           shift and go to state 47
    LET             shift and go to state 48
    IF              shift and go to state 49
    {               shift and go to state 50
    BOOL_CONST      shift and go to state 51
    STR_CONST       shift and go to state 52
    INT_CONST       shift and go to state 53
    OBJECTID        shift and go to state 44
    ~               shift and go to state 55
    NEW             shift and go to state 56
    ISVOID          shift and go to state 57
    NOT             shift and go to state 58
    (               shift and go to state 54

    expression                     shift and go to state 83

state 58

    (37) expression -> NOT . expression
    (19) expression -> . CASE expression OF darrowlist ESAC
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LET let_list IN expression
    (22) expression -> . IF expression THEN expression ELSE expression FI
    (23) expression -> . { expressions }
    (24) expression -> . BOOL_CONST
    (25) expression -> . STR_CONST
    (26) expression -> . INT_CONST
    (27) expression -> . OBJECTID
    (28) expression -> . OBJECTID ( parametros )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( parametros )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . NEW TYPEID
    (36) expression -> . ISVOID expression
    (37) expression -> . NOT expression
    (38) expression -> . ( expression )
    (39) expression -> . expression = expression
    (40) expression -> . expression LE expression
    (41) expression -> . expression < expression
    (42) expression -> . expression / expression
    (43) expression -> . expression * expression
    (44) expression -> . expression - expression
    (45) expression -> . expression + expression
    (46) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 46
    WHILE           shift and go to state 47
    LET             shift and go to state 48
    IF              shift and go to state 49
    {               shift and go to state 50
    BOOL_CONST      shift and go to state 51
    STR_CONST       shift and go to state 52
    INT_CONST       shift and go to state 53
    OBJECTID        shift and go to state 44
    ~               shift and go to state 55
    NEW             shift and go to state 56
    ISVOID          shift and go to state 57
    NOT             shift and go to state 58
    (               shift and go to state 54

    expression                     shift and go to state 84

state 59

    (12) caracteristica -> OBJECTID ( formales ) : TYPEID . { expression }
    {               shift and go to state 85


state 60

    (13) caracteristica -> OBJECTID ( ) : TYPEID { . expression }
    (19) expression -> . CASE expression OF darrowlist ESAC
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LET let_list IN expression
    (22) expression -> . IF expression THEN expression ELSE expression FI
    (23) expression -> . { expressions }
    (24) expression -> . BOOL_CONST
    (25) expression -> . STR_CONST
    (26) expression -> . INT_CONST
    (27) expression -> . OBJECTID
    (28) expression -> . OBJECTID ( parametros )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( parametros )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . NEW TYPEID
    (36) expression -> . ISVOID expression
    (37) expression -> . NOT expression
    (38) expression -> . ( expression )
    (39) expression -> . expression = expression
    (40) expression -> . expression LE expression
    (41) expression -> . expression < expression
    (42) expression -> . expression / expression
    (43) expression -> . expression * expression
    (44) expression -> . expression - expression
    (45) expression -> . expression + expression
    (46) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 46
    WHILE           shift and go to state 47
    LET             shift and go to state 48
    IF              shift and go to state 49
    {               shift and go to state 50
    BOOL_CONST      shift and go to state 51
    STR_CONST       shift and go to state 52
    INT_CONST       shift and go to state 53
    OBJECTID        shift and go to state 44
    ~               shift and go to state 55
    NEW             shift and go to state 56
    ISVOID          shift and go to state 57
    NOT             shift and go to state 58
    (               shift and go to state 54

    expression                     shift and go to state 86

state 61

    (28) expression -> OBJECTID ( . parametros )
    (29) expression -> OBJECTID ( . )
    (49) parametros -> . parametros , expression
    (50) parametros -> . expression
    (19) expression -> . CASE expression OF darrowlist ESAC
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LET let_list IN expression
    (22) expression -> . IF expression THEN expression ELSE expression FI
    (23) expression -> . { expressions }
    (24) expression -> . BOOL_CONST
    (25) expression -> . STR_CONST
    (26) expression -> . INT_CONST
    (27) expression -> . OBJECTID
    (28) expression -> . OBJECTID ( parametros )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( parametros )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . NEW TYPEID
    (36) expression -> . ISVOID expression
    (37) expression -> . NOT expression
    (38) expression -> . ( expression )
    (39) expression -> . expression = expression
    (40) expression -> . expression LE expression
    (41) expression -> . expression < expression
    (42) expression -> . expression / expression
    (43) expression -> . expression * expression
    (44) expression -> . expression - expression
    (45) expression -> . expression + expression
    (46) expression -> . OBJECTID ASSIGN expression
    )               shift and go to state 88
    CASE            shift and go to state 46
    WHILE           shift and go to state 47
    LET             shift and go to state 48
    IF              shift and go to state 49
    {               shift and go to state 50
    BOOL_CONST      shift and go to state 51
    STR_CONST       shift and go to state 52
    INT_CONST       shift and go to state 53
    OBJECTID        shift and go to state 44
    ~               shift and go to state 55
    NEW             shift and go to state 56
    ISVOID          shift and go to state 57
    NOT             shift and go to state 58
    (               shift and go to state 54

    parametros                     shift and go to state 87
    expression                     shift and go to state 89

state 62

    (46) expression -> OBJECTID ASSIGN . expression
    (19) expression -> . CASE expression OF darrowlist ESAC
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LET let_list IN expression
    (22) expression -> . IF expression THEN expression ELSE expression FI
    (23) expression -> . { expressions }
    (24) expression -> . BOOL_CONST
    (25) expression -> . STR_CONST
    (26) expression -> . INT_CONST
    (27) expression -> . OBJECTID
    (28) expression -> . OBJECTID ( parametros )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( parametros )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . NEW TYPEID
    (36) expression -> . ISVOID expression
    (37) expression -> . NOT expression
    (38) expression -> . ( expression )
    (39) expression -> . expression = expression
    (40) expression -> . expression LE expression
    (41) expression -> . expression < expression
    (42) expression -> . expression / expression
    (43) expression -> . expression * expression
    (44) expression -> . expression - expression
    (45) expression -> . expression + expression
    (46) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 46
    WHILE           shift and go to state 47
    LET             shift and go to state 48
    IF              shift and go to state 49
    {               shift and go to state 50
    BOOL_CONST      shift and go to state 51
    STR_CONST       shift and go to state 52
    INT_CONST       shift and go to state 53
    OBJECTID        shift and go to state 44
    ~               shift and go to state 55
    NEW             shift and go to state 56
    ISVOID          shift and go to state 57
    NOT             shift and go to state 58
    (               shift and go to state 54

    expression                     shift and go to state 90

state 63

    (30) expression -> expression . . OBJECTID ( parametros )
    (31) expression -> expression . . OBJECTID ( )
    OBJECTID        shift and go to state 91


state 64

    (32) expression -> expression @ . TYPEID . OBJECTID ( parametros )
    (33) expression -> expression @ . TYPEID . OBJECTID ( )
    TYPEID          shift and go to state 92


state 65

    (39) expression -> expression = . expression
    (19) expression -> . CASE expression OF darrowlist ESAC
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LET let_list IN expression
    (22) expression -> . IF expression THEN expression ELSE expression FI
    (23) expression -> . { expressions }
    (24) expression -> . BOOL_CONST
    (25) expression -> . STR_CONST
    (26) expression -> . INT_CONST
    (27) expression -> . OBJECTID
    (28) expression -> . OBJECTID ( parametros )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( parametros )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . NEW TYPEID
    (36) expression -> . ISVOID expression
    (37) expression -> . NOT expression
    (38) expression -> . ( expression )
    (39) expression -> . expression = expression
    (40) expression -> . expression LE expression
    (41) expression -> . expression < expression
    (42) expression -> . expression / expression
    (43) expression -> . expression * expression
    (44) expression -> . expression - expression
    (45) expression -> . expression + expression
    (46) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 46
    WHILE           shift and go to state 47
    LET             shift and go to state 48
    IF              shift and go to state 49
    {               shift and go to state 50
    BOOL_CONST      shift and go to state 51
    STR_CONST       shift and go to state 52
    INT_CONST       shift and go to state 53
    OBJECTID        shift and go to state 44
    ~               shift and go to state 55
    NEW             shift and go to state 56
    ISVOID          shift and go to state 57
    NOT             shift and go to state 58
    (               shift and go to state 54

    expression                     shift and go to state 93

state 66

    (40) expression -> expression LE . expression
    (19) expression -> . CASE expression OF darrowlist ESAC
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LET let_list IN expression
    (22) expression -> . IF expression THEN expression ELSE expression FI
    (23) expression -> . { expressions }
    (24) expression -> . BOOL_CONST
    (25) expression -> . STR_CONST
    (26) expression -> . INT_CONST
    (27) expression -> . OBJECTID
    (28) expression -> . OBJECTID ( parametros )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( parametros )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . NEW TYPEID
    (36) expression -> . ISVOID expression
    (37) expression -> . NOT expression
    (38) expression -> . ( expression )
    (39) expression -> . expression = expression
    (40) expression -> . expression LE expression
    (41) expression -> . expression < expression
    (42) expression -> . expression / expression
    (43) expression -> . expression * expression
    (44) expression -> . expression - expression
    (45) expression -> . expression + expression
    (46) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 46
    WHILE           shift and go to state 47
    LET             shift and go to state 48
    IF              shift and go to state 49
    {               shift and go to state 50
    BOOL_CONST      shift and go to state 51
    STR_CONST       shift and go to state 52
    INT_CONST       shift and go to state 53
    OBJECTID        shift and go to state 44
    ~               shift and go to state 55
    NEW             shift and go to state 56
    ISVOID          shift and go to state 57
    NOT             shift and go to state 58
    (               shift and go to state 54

    expression                     shift and go to state 94

state 67

    (41) expression -> expression < . expression
    (19) expression -> . CASE expression OF darrowlist ESAC
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LET let_list IN expression
    (22) expression -> . IF expression THEN expression ELSE expression FI
    (23) expression -> . { expressions }
    (24) expression -> . BOOL_CONST
    (25) expression -> . STR_CONST
    (26) expression -> . INT_CONST
    (27) expression -> . OBJECTID
    (28) expression -> . OBJECTID ( parametros )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( parametros )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . NEW TYPEID
    (36) expression -> . ISVOID expression
    (37) expression -> . NOT expression
    (38) expression -> . ( expression )
    (39) expression -> . expression = expression
    (40) expression -> . expression LE expression
    (41) expression -> . expression < expression
    (42) expression -> . expression / expression
    (43) expression -> . expression * expression
    (44) expression -> . expression - expression
    (45) expression -> . expression + expression
    (46) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 46
    WHILE           shift and go to state 47
    LET             shift and go to state 48
    IF              shift and go to state 49
    {               shift and go to state 50
    BOOL_CONST      shift and go to state 51
    STR_CONST       shift and go to state 52
    INT_CONST       shift and go to state 53
    OBJECTID        shift and go to state 44
    ~               shift and go to state 55
    NEW             shift and go to state 56
    ISVOID          shift and go to state 57
    NOT             shift and go to state 58
    (               shift and go to state 54

    expression                     shift and go to state 95

state 68

    (42) expression -> expression / . expression
    (19) expression -> . CASE expression OF darrowlist ESAC
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LET let_list IN expression
    (22) expression -> . IF expression THEN expression ELSE expression FI
    (23) expression -> . { expressions }
    (24) expression -> . BOOL_CONST
    (25) expression -> . STR_CONST
    (26) expression -> . INT_CONST
    (27) expression -> . OBJECTID
    (28) expression -> . OBJECTID ( parametros )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( parametros )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . NEW TYPEID
    (36) expression -> . ISVOID expression
    (37) expression -> . NOT expression
    (38) expression -> . ( expression )
    (39) expression -> . expression = expression
    (40) expression -> . expression LE expression
    (41) expression -> . expression < expression
    (42) expression -> . expression / expression
    (43) expression -> . expression * expression
    (44) expression -> . expression - expression
    (45) expression -> . expression + expression
    (46) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 46
    WHILE           shift and go to state 47
    LET             shift and go to state 48
    IF              shift and go to state 49
    {               shift and go to state 50
    BOOL_CONST      shift and go to state 51
    STR_CONST       shift and go to state 52
    INT_CONST       shift and go to state 53
    OBJECTID        shift and go to state 44
    ~               shift and go to state 55
    NEW             shift and go to state 56
    ISVOID          shift and go to state 57
    NOT             shift and go to state 58
    (               shift and go to state 54

    expression                     shift and go to state 96

state 69

    (43) expression -> expression * . expression
    (19) expression -> . CASE expression OF darrowlist ESAC
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LET let_list IN expression
    (22) expression -> . IF expression THEN expression ELSE expression FI
    (23) expression -> . { expressions }
    (24) expression -> . BOOL_CONST
    (25) expression -> . STR_CONST
    (26) expression -> . INT_CONST
    (27) expression -> . OBJECTID
    (28) expression -> . OBJECTID ( parametros )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( parametros )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . NEW TYPEID
    (36) expression -> . ISVOID expression
    (37) expression -> . NOT expression
    (38) expression -> . ( expression )
    (39) expression -> . expression = expression
    (40) expression -> . expression LE expression
    (41) expression -> . expression < expression
    (42) expression -> . expression / expression
    (43) expression -> . expression * expression
    (44) expression -> . expression - expression
    (45) expression -> . expression + expression
    (46) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 46
    WHILE           shift and go to state 47
    LET             shift and go to state 48
    IF              shift and go to state 49
    {               shift and go to state 50
    BOOL_CONST      shift and go to state 51
    STR_CONST       shift and go to state 52
    INT_CONST       shift and go to state 53
    OBJECTID        shift and go to state 44
    ~               shift and go to state 55
    NEW             shift and go to state 56
    ISVOID          shift and go to state 57
    NOT             shift and go to state 58
    (               shift and go to state 54

    expression                     shift and go to state 97

state 70

    (44) expression -> expression - . expression
    (19) expression -> . CASE expression OF darrowlist ESAC
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LET let_list IN expression
    (22) expression -> . IF expression THEN expression ELSE expression FI
    (23) expression -> . { expressions }
    (24) expression -> . BOOL_CONST
    (25) expression -> . STR_CONST
    (26) expression -> . INT_CONST
    (27) expression -> . OBJECTID
    (28) expression -> . OBJECTID ( parametros )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( parametros )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . NEW TYPEID
    (36) expression -> . ISVOID expression
    (37) expression -> . NOT expression
    (38) expression -> . ( expression )
    (39) expression -> . expression = expression
    (40) expression -> . expression LE expression
    (41) expression -> . expression < expression
    (42) expression -> . expression / expression
    (43) expression -> . expression * expression
    (44) expression -> . expression - expression
    (45) expression -> . expression + expression
    (46) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 46
    WHILE           shift and go to state 47
    LET             shift and go to state 48
    IF              shift and go to state 49
    {               shift and go to state 50
    BOOL_CONST      shift and go to state 51
    STR_CONST       shift and go to state 52
    INT_CONST       shift and go to state 53
    OBJECTID        shift and go to state 44
    ~               shift and go to state 55
    NEW             shift and go to state 56
    ISVOID          shift and go to state 57
    NOT             shift and go to state 58
    (               shift and go to state 54

    expression                     shift and go to state 98

state 71

    (45) expression -> expression + . expression
    (19) expression -> . CASE expression OF darrowlist ESAC
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LET let_list IN expression
    (22) expression -> . IF expression THEN expression ELSE expression FI
    (23) expression -> . { expressions }
    (24) expression -> . BOOL_CONST
    (25) expression -> . STR_CONST
    (26) expression -> . INT_CONST
    (27) expression -> . OBJECTID
    (28) expression -> . OBJECTID ( parametros )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( parametros )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . NEW TYPEID
    (36) expression -> . ISVOID expression
    (37) expression -> . NOT expression
    (38) expression -> . ( expression )
    (39) expression -> . expression = expression
    (40) expression -> . expression LE expression
    (41) expression -> . expression < expression
    (42) expression -> . expression / expression
    (43) expression -> . expression * expression
    (44) expression -> . expression - expression
    (45) expression -> . expression + expression
    (46) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 46
    WHILE           shift and go to state 47
    LET             shift and go to state 48
    IF              shift and go to state 49
    {               shift and go to state 50
    BOOL_CONST      shift and go to state 51
    STR_CONST       shift and go to state 52
    INT_CONST       shift and go to state 53
    OBJECTID        shift and go to state 44
    ~               shift and go to state 55
    NEW             shift and go to state 56
    ISVOID          shift and go to state 57
    NOT             shift and go to state 58
    (               shift and go to state 54

    expression                     shift and go to state 99

state 72

    (19) expression -> CASE expression . OF darrowlist ESAC
    (30) expression -> expression . . OBJECTID ( parametros )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (39) expression -> expression . = expression
    (40) expression -> expression . LE expression
    (41) expression -> expression . < expression
    (42) expression -> expression . / expression
    (43) expression -> expression . * expression
    (44) expression -> expression . - expression
    (45) expression -> expression . + expression
    OF              shift and go to state 100
    .               shift and go to state 63
    @               shift and go to state 64
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 73

    (20) expression -> WHILE expression . LOOP expression POOL
    (30) expression -> expression . . OBJECTID ( parametros )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (39) expression -> expression . = expression
    (40) expression -> expression . LE expression
    (41) expression -> expression . < expression
    (42) expression -> expression . / expression
    (43) expression -> expression . * expression
    (44) expression -> expression . - expression
    (45) expression -> expression . + expression
    LOOP            shift and go to state 101
    .               shift and go to state 63
    @               shift and go to state 64
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 74

    (21) expression -> LET let_list . IN expression
    (52) let_list -> let_list . , let_decl
    IN              shift and go to state 102
    ,               shift and go to state 103


state 75

    (51) let_list -> let_decl .
    IN              reduce using rule 51 (let_list -> let_decl .)
    ,               reduce using rule 51 (let_list -> let_decl .)


state 76

    (53) let_decl -> OBJECTID . : TYPEID ASSIGN expression
    (54) let_decl -> OBJECTID . : TYPEID
    :               shift and go to state 104


state 77

    (22) expression -> IF expression . THEN expression ELSE expression FI
    (30) expression -> expression . . OBJECTID ( parametros )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (39) expression -> expression . = expression
    (40) expression -> expression . LE expression
    (41) expression -> expression . < expression
    (42) expression -> expression . / expression
    (43) expression -> expression . * expression
    (44) expression -> expression . - expression
    (45) expression -> expression . + expression
    THEN            shift and go to state 105
    .               shift and go to state 63
    @               shift and go to state 64
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 78

    (23) expression -> { expressions . }
    (47) expressions -> expressions . expression ;
    (19) expression -> . CASE expression OF darrowlist ESAC
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LET let_list IN expression
    (22) expression -> . IF expression THEN expression ELSE expression FI
    (23) expression -> . { expressions }
    (24) expression -> . BOOL_CONST
    (25) expression -> . STR_CONST
    (26) expression -> . INT_CONST
    (27) expression -> . OBJECTID
    (28) expression -> . OBJECTID ( parametros )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( parametros )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . NEW TYPEID
    (36) expression -> . ISVOID expression
    (37) expression -> . NOT expression
    (38) expression -> . ( expression )
    (39) expression -> . expression = expression
    (40) expression -> . expression LE expression
    (41) expression -> . expression < expression
    (42) expression -> . expression / expression
    (43) expression -> . expression * expression
    (44) expression -> . expression - expression
    (45) expression -> . expression + expression
    (46) expression -> . OBJECTID ASSIGN expression
    }               shift and go to state 106
    CASE            shift and go to state 46
    WHILE           shift and go to state 47
    LET             shift and go to state 48
    IF              shift and go to state 49
    {               shift and go to state 50
    BOOL_CONST      shift and go to state 51
    STR_CONST       shift and go to state 52
    INT_CONST       shift and go to state 53
    OBJECTID        shift and go to state 44
    ~               shift and go to state 55
    NEW             shift and go to state 56
    ISVOID          shift and go to state 57
    NOT             shift and go to state 58
    (               shift and go to state 54

    expression                     shift and go to state 107

state 79

    (48) expressions -> expression . ;
    (30) expression -> expression . . OBJECTID ( parametros )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (39) expression -> expression . = expression
    (40) expression -> expression . LE expression
    (41) expression -> expression . < expression
    (42) expression -> expression . / expression
    (43) expression -> expression . * expression
    (44) expression -> expression . - expression
    (45) expression -> expression . + expression
    ;               shift and go to state 108
    .               shift and go to state 63
    @               shift and go to state 64
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 80

    (38) expression -> ( expression . )
    (30) expression -> expression . . OBJECTID ( parametros )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (39) expression -> expression . = expression
    (40) expression -> expression . LE expression
    (41) expression -> expression . < expression
    (42) expression -> expression . / expression
    (43) expression -> expression . * expression
    (44) expression -> expression . - expression
    (45) expression -> expression . + expression
    )               shift and go to state 109
    .               shift and go to state 63
    @               shift and go to state 64
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 81

    (34) expression -> ~ expression .
    (30) expression -> expression . . OBJECTID ( parametros )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (39) expression -> expression . = expression
    (40) expression -> expression . LE expression
    (41) expression -> expression . < expression
    (42) expression -> expression . / expression
    (43) expression -> expression . * expression
    (44) expression -> expression . - expression
    (45) expression -> expression . + expression
  ! shift/reduce conflict for . resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    ;               reduce using rule 34 (expression -> ~ expression .)
    OF              reduce using rule 34 (expression -> ~ expression .)
    LOOP            reduce using rule 34 (expression -> ~ expression .)
    THEN            reduce using rule 34 (expression -> ~ expression .)
    )               reduce using rule 34 (expression -> ~ expression .)
    }               reduce using rule 34 (expression -> ~ expression .)
    ,               reduce using rule 34 (expression -> ~ expression .)
    POOL            reduce using rule 34 (expression -> ~ expression .)
    ELSE            reduce using rule 34 (expression -> ~ expression .)
    IN              reduce using rule 34 (expression -> ~ expression .)
    FI              reduce using rule 34 (expression -> ~ expression .)
    .               shift and go to state 63
    @               shift and go to state 64
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 82

    (35) expression -> NEW TYPEID .
    .               reduce using rule 35 (expression -> NEW TYPEID .)
    @               reduce using rule 35 (expression -> NEW TYPEID .)
    =               reduce using rule 35 (expression -> NEW TYPEID .)
    LE              reduce using rule 35 (expression -> NEW TYPEID .)
    <               reduce using rule 35 (expression -> NEW TYPEID .)
    /               reduce using rule 35 (expression -> NEW TYPEID .)
    *               reduce using rule 35 (expression -> NEW TYPEID .)
    -               reduce using rule 35 (expression -> NEW TYPEID .)
    +               reduce using rule 35 (expression -> NEW TYPEID .)
    ;               reduce using rule 35 (expression -> NEW TYPEID .)
    OF              reduce using rule 35 (expression -> NEW TYPEID .)
    LOOP            reduce using rule 35 (expression -> NEW TYPEID .)
    THEN            reduce using rule 35 (expression -> NEW TYPEID .)
    )               reduce using rule 35 (expression -> NEW TYPEID .)
    }               reduce using rule 35 (expression -> NEW TYPEID .)
    ,               reduce using rule 35 (expression -> NEW TYPEID .)
    POOL            reduce using rule 35 (expression -> NEW TYPEID .)
    ELSE            reduce using rule 35 (expression -> NEW TYPEID .)
    IN              reduce using rule 35 (expression -> NEW TYPEID .)
    FI              reduce using rule 35 (expression -> NEW TYPEID .)


state 83

    (36) expression -> ISVOID expression .
    (30) expression -> expression . . OBJECTID ( parametros )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (39) expression -> expression . = expression
    (40) expression -> expression . LE expression
    (41) expression -> expression . < expression
    (42) expression -> expression . / expression
    (43) expression -> expression . * expression
    (44) expression -> expression . - expression
    (45) expression -> expression . + expression
    .               reduce using rule 36 (expression -> ISVOID expression .)
    @               reduce using rule 36 (expression -> ISVOID expression .)
    ;               reduce using rule 36 (expression -> ISVOID expression .)
    OF              reduce using rule 36 (expression -> ISVOID expression .)
    LOOP            reduce using rule 36 (expression -> ISVOID expression .)
    THEN            reduce using rule 36 (expression -> ISVOID expression .)
    )               reduce using rule 36 (expression -> ISVOID expression .)
    }               reduce using rule 36 (expression -> ISVOID expression .)
    ,               reduce using rule 36 (expression -> ISVOID expression .)
    POOL            reduce using rule 36 (expression -> ISVOID expression .)
    ELSE            reduce using rule 36 (expression -> ISVOID expression .)
    IN              reduce using rule 36 (expression -> ISVOID expression .)
    FI              reduce using rule 36 (expression -> ISVOID expression .)
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 84

    (37) expression -> NOT expression .
    (30) expression -> expression . . OBJECTID ( parametros )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (39) expression -> expression . = expression
    (40) expression -> expression . LE expression
    (41) expression -> expression . < expression
    (42) expression -> expression . / expression
    (43) expression -> expression . * expression
    (44) expression -> expression . - expression
    (45) expression -> expression . + expression
    .               reduce using rule 37 (expression -> NOT expression .)
    @               reduce using rule 37 (expression -> NOT expression .)
    =               reduce using rule 37 (expression -> NOT expression .)
    LE              reduce using rule 37 (expression -> NOT expression .)
    <               reduce using rule 37 (expression -> NOT expression .)
    /               reduce using rule 37 (expression -> NOT expression .)
    *               reduce using rule 37 (expression -> NOT expression .)
    -               reduce using rule 37 (expression -> NOT expression .)
    +               reduce using rule 37 (expression -> NOT expression .)
    ;               reduce using rule 37 (expression -> NOT expression .)
    OF              reduce using rule 37 (expression -> NOT expression .)
    LOOP            reduce using rule 37 (expression -> NOT expression .)
    THEN            reduce using rule 37 (expression -> NOT expression .)
    )               reduce using rule 37 (expression -> NOT expression .)
    }               reduce using rule 37 (expression -> NOT expression .)
    ,               reduce using rule 37 (expression -> NOT expression .)
    POOL            reduce using rule 37 (expression -> NOT expression .)
    ELSE            reduce using rule 37 (expression -> NOT expression .)
    IN              reduce using rule 37 (expression -> NOT expression .)
    FI              reduce using rule 37 (expression -> NOT expression .)


state 85

    (12) caracteristica -> OBJECTID ( formales ) : TYPEID { . expression }
    (19) expression -> . CASE expression OF darrowlist ESAC
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LET let_list IN expression
    (22) expression -> . IF expression THEN expression ELSE expression FI
    (23) expression -> . { expressions }
    (24) expression -> . BOOL_CONST
    (25) expression -> . STR_CONST
    (26) expression -> . INT_CONST
    (27) expression -> . OBJECTID
    (28) expression -> . OBJECTID ( parametros )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( parametros )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . NEW TYPEID
    (36) expression -> . ISVOID expression
    (37) expression -> . NOT expression
    (38) expression -> . ( expression )
    (39) expression -> . expression = expression
    (40) expression -> . expression LE expression
    (41) expression -> . expression < expression
    (42) expression -> . expression / expression
    (43) expression -> . expression * expression
    (44) expression -> . expression - expression
    (45) expression -> . expression + expression
    (46) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 46
    WHILE           shift and go to state 47
    LET             shift and go to state 48
    IF              shift and go to state 49
    {               shift and go to state 50
    BOOL_CONST      shift and go to state 51
    STR_CONST       shift and go to state 52
    INT_CONST       shift and go to state 53
    OBJECTID        shift and go to state 44
    ~               shift and go to state 55
    NEW             shift and go to state 56
    ISVOID          shift and go to state 57
    NOT             shift and go to state 58
    (               shift and go to state 54

    expression                     shift and go to state 110

state 86

    (13) caracteristica -> OBJECTID ( ) : TYPEID { expression . }
    (30) expression -> expression . . OBJECTID ( parametros )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (39) expression -> expression . = expression
    (40) expression -> expression . LE expression
    (41) expression -> expression . < expression
    (42) expression -> expression . / expression
    (43) expression -> expression . * expression
    (44) expression -> expression . - expression
    (45) expression -> expression . + expression
    }               shift and go to state 111
    .               shift and go to state 63
    @               shift and go to state 64
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 87

    (28) expression -> OBJECTID ( parametros . )
    (49) parametros -> parametros . , expression
    )               shift and go to state 112
    ,               shift and go to state 113


state 88

    (29) expression -> OBJECTID ( ) .
    .               reduce using rule 29 (expression -> OBJECTID ( ) .)
    @               reduce using rule 29 (expression -> OBJECTID ( ) .)
    =               reduce using rule 29 (expression -> OBJECTID ( ) .)
    LE              reduce using rule 29 (expression -> OBJECTID ( ) .)
    <               reduce using rule 29 (expression -> OBJECTID ( ) .)
    /               reduce using rule 29 (expression -> OBJECTID ( ) .)
    *               reduce using rule 29 (expression -> OBJECTID ( ) .)
    -               reduce using rule 29 (expression -> OBJECTID ( ) .)
    +               reduce using rule 29 (expression -> OBJECTID ( ) .)
    ;               reduce using rule 29 (expression -> OBJECTID ( ) .)
    OF              reduce using rule 29 (expression -> OBJECTID ( ) .)
    LOOP            reduce using rule 29 (expression -> OBJECTID ( ) .)
    THEN            reduce using rule 29 (expression -> OBJECTID ( ) .)
    )               reduce using rule 29 (expression -> OBJECTID ( ) .)
    }               reduce using rule 29 (expression -> OBJECTID ( ) .)
    ,               reduce using rule 29 (expression -> OBJECTID ( ) .)
    POOL            reduce using rule 29 (expression -> OBJECTID ( ) .)
    ELSE            reduce using rule 29 (expression -> OBJECTID ( ) .)
    IN              reduce using rule 29 (expression -> OBJECTID ( ) .)
    FI              reduce using rule 29 (expression -> OBJECTID ( ) .)


state 89

    (50) parametros -> expression .
    (30) expression -> expression . . OBJECTID ( parametros )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (39) expression -> expression . = expression
    (40) expression -> expression . LE expression
    (41) expression -> expression . < expression
    (42) expression -> expression . / expression
    (43) expression -> expression . * expression
    (44) expression -> expression . - expression
    (45) expression -> expression . + expression
    )               reduce using rule 50 (parametros -> expression .)
    ,               reduce using rule 50 (parametros -> expression .)
    .               shift and go to state 63
    @               shift and go to state 64
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 90

    (46) expression -> OBJECTID ASSIGN expression .
    (30) expression -> expression . . OBJECTID ( parametros )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (39) expression -> expression . = expression
    (40) expression -> expression . LE expression
    (41) expression -> expression . < expression
    (42) expression -> expression . / expression
    (43) expression -> expression . * expression
    (44) expression -> expression . - expression
    (45) expression -> expression . + expression
    .               reduce using rule 46 (expression -> OBJECTID ASSIGN expression .)
    @               reduce using rule 46 (expression -> OBJECTID ASSIGN expression .)
    =               reduce using rule 46 (expression -> OBJECTID ASSIGN expression .)
    LE              reduce using rule 46 (expression -> OBJECTID ASSIGN expression .)
    <               reduce using rule 46 (expression -> OBJECTID ASSIGN expression .)
    /               reduce using rule 46 (expression -> OBJECTID ASSIGN expression .)
    *               reduce using rule 46 (expression -> OBJECTID ASSIGN expression .)
    -               reduce using rule 46 (expression -> OBJECTID ASSIGN expression .)
    +               reduce using rule 46 (expression -> OBJECTID ASSIGN expression .)
    ;               reduce using rule 46 (expression -> OBJECTID ASSIGN expression .)
    OF              reduce using rule 46 (expression -> OBJECTID ASSIGN expression .)
    LOOP            reduce using rule 46 (expression -> OBJECTID ASSIGN expression .)
    THEN            reduce using rule 46 (expression -> OBJECTID ASSIGN expression .)
    )               reduce using rule 46 (expression -> OBJECTID ASSIGN expression .)
    }               reduce using rule 46 (expression -> OBJECTID ASSIGN expression .)
    ,               reduce using rule 46 (expression -> OBJECTID ASSIGN expression .)
    POOL            reduce using rule 46 (expression -> OBJECTID ASSIGN expression .)
    ELSE            reduce using rule 46 (expression -> OBJECTID ASSIGN expression .)
    IN              reduce using rule 46 (expression -> OBJECTID ASSIGN expression .)
    FI              reduce using rule 46 (expression -> OBJECTID ASSIGN expression .)


state 91

    (30) expression -> expression . OBJECTID . ( parametros )
    (31) expression -> expression . OBJECTID . ( )
    (               shift and go to state 114


state 92

    (32) expression -> expression @ TYPEID . . OBJECTID ( parametros )
    (33) expression -> expression @ TYPEID . . OBJECTID ( )
    .               shift and go to state 115


state 93

    (39) expression -> expression = expression .
    (30) expression -> expression . . OBJECTID ( parametros )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (39) expression -> expression . = expression
    (40) expression -> expression . LE expression
    (41) expression -> expression . < expression
    (42) expression -> expression . / expression
    (43) expression -> expression . * expression
    (44) expression -> expression . - expression
    (45) expression -> expression . + expression
    .               reduce using rule 39 (expression -> expression = expression .)
    @               reduce using rule 39 (expression -> expression = expression .)
    =               reduce using rule 39 (expression -> expression = expression .)
    LE              reduce using rule 39 (expression -> expression = expression .)
    <               reduce using rule 39 (expression -> expression = expression .)
    /               reduce using rule 39 (expression -> expression = expression .)
    *               reduce using rule 39 (expression -> expression = expression .)
    -               reduce using rule 39 (expression -> expression = expression .)
    +               reduce using rule 39 (expression -> expression = expression .)
    ;               reduce using rule 39 (expression -> expression = expression .)
    OF              reduce using rule 39 (expression -> expression = expression .)
    LOOP            reduce using rule 39 (expression -> expression = expression .)
    THEN            reduce using rule 39 (expression -> expression = expression .)
    )               reduce using rule 39 (expression -> expression = expression .)
    }               reduce using rule 39 (expression -> expression = expression .)
    ,               reduce using rule 39 (expression -> expression = expression .)
    POOL            reduce using rule 39 (expression -> expression = expression .)
    ELSE            reduce using rule 39 (expression -> expression = expression .)
    IN              reduce using rule 39 (expression -> expression = expression .)
    FI              reduce using rule 39 (expression -> expression = expression .)


state 94

    (40) expression -> expression LE expression .
    (30) expression -> expression . . OBJECTID ( parametros )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (39) expression -> expression . = expression
    (40) expression -> expression . LE expression
    (41) expression -> expression . < expression
    (42) expression -> expression . / expression
    (43) expression -> expression . * expression
    (44) expression -> expression . - expression
    (45) expression -> expression . + expression
    .               reduce using rule 40 (expression -> expression LE expression .)
    @               reduce using rule 40 (expression -> expression LE expression .)
    =               reduce using rule 40 (expression -> expression LE expression .)
    LE              reduce using rule 40 (expression -> expression LE expression .)
    <               reduce using rule 40 (expression -> expression LE expression .)
    /               reduce using rule 40 (expression -> expression LE expression .)
    *               reduce using rule 40 (expression -> expression LE expression .)
    -               reduce using rule 40 (expression -> expression LE expression .)
    +               reduce using rule 40 (expression -> expression LE expression .)
    ;               reduce using rule 40 (expression -> expression LE expression .)
    OF              reduce using rule 40 (expression -> expression LE expression .)
    LOOP            reduce using rule 40 (expression -> expression LE expression .)
    THEN            reduce using rule 40 (expression -> expression LE expression .)
    )               reduce using rule 40 (expression -> expression LE expression .)
    }               reduce using rule 40 (expression -> expression LE expression .)
    ,               reduce using rule 40 (expression -> expression LE expression .)
    POOL            reduce using rule 40 (expression -> expression LE expression .)
    ELSE            reduce using rule 40 (expression -> expression LE expression .)
    IN              reduce using rule 40 (expression -> expression LE expression .)
    FI              reduce using rule 40 (expression -> expression LE expression .)


state 95

    (41) expression -> expression < expression .
    (30) expression -> expression . . OBJECTID ( parametros )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (39) expression -> expression . = expression
    (40) expression -> expression . LE expression
    (41) expression -> expression . < expression
    (42) expression -> expression . / expression
    (43) expression -> expression . * expression
    (44) expression -> expression . - expression
    (45) expression -> expression . + expression
    .               reduce using rule 41 (expression -> expression < expression .)
    @               reduce using rule 41 (expression -> expression < expression .)
    =               reduce using rule 41 (expression -> expression < expression .)
    LE              reduce using rule 41 (expression -> expression < expression .)
    <               reduce using rule 41 (expression -> expression < expression .)
    /               reduce using rule 41 (expression -> expression < expression .)
    *               reduce using rule 41 (expression -> expression < expression .)
    -               reduce using rule 41 (expression -> expression < expression .)
    +               reduce using rule 41 (expression -> expression < expression .)
    ;               reduce using rule 41 (expression -> expression < expression .)
    OF              reduce using rule 41 (expression -> expression < expression .)
    LOOP            reduce using rule 41 (expression -> expression < expression .)
    THEN            reduce using rule 41 (expression -> expression < expression .)
    )               reduce using rule 41 (expression -> expression < expression .)
    }               reduce using rule 41 (expression -> expression < expression .)
    ,               reduce using rule 41 (expression -> expression < expression .)
    POOL            reduce using rule 41 (expression -> expression < expression .)
    ELSE            reduce using rule 41 (expression -> expression < expression .)
    IN              reduce using rule 41 (expression -> expression < expression .)
    FI              reduce using rule 41 (expression -> expression < expression .)


state 96

    (42) expression -> expression / expression .
    (30) expression -> expression . . OBJECTID ( parametros )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (39) expression -> expression . = expression
    (40) expression -> expression . LE expression
    (41) expression -> expression . < expression
    (42) expression -> expression . / expression
    (43) expression -> expression . * expression
    (44) expression -> expression . - expression
    (45) expression -> expression . + expression
    .               reduce using rule 42 (expression -> expression / expression .)
    @               reduce using rule 42 (expression -> expression / expression .)
    /               reduce using rule 42 (expression -> expression / expression .)
    *               reduce using rule 42 (expression -> expression / expression .)
    ;               reduce using rule 42 (expression -> expression / expression .)
    OF              reduce using rule 42 (expression -> expression / expression .)
    LOOP            reduce using rule 42 (expression -> expression / expression .)
    THEN            reduce using rule 42 (expression -> expression / expression .)
    )               reduce using rule 42 (expression -> expression / expression .)
    }               reduce using rule 42 (expression -> expression / expression .)
    ,               reduce using rule 42 (expression -> expression / expression .)
    POOL            reduce using rule 42 (expression -> expression / expression .)
    ELSE            reduce using rule 42 (expression -> expression / expression .)
    IN              reduce using rule 42 (expression -> expression / expression .)
    FI              reduce using rule 42 (expression -> expression / expression .)
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67
    -               shift and go to state 70
    +               shift and go to state 71


state 97

    (43) expression -> expression * expression .
    (30) expression -> expression . . OBJECTID ( parametros )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (39) expression -> expression . = expression
    (40) expression -> expression . LE expression
    (41) expression -> expression . < expression
    (42) expression -> expression . / expression
    (43) expression -> expression . * expression
    (44) expression -> expression . - expression
    (45) expression -> expression . + expression
    .               reduce using rule 43 (expression -> expression * expression .)
    @               reduce using rule 43 (expression -> expression * expression .)
    /               reduce using rule 43 (expression -> expression * expression .)
    *               reduce using rule 43 (expression -> expression * expression .)
    ;               reduce using rule 43 (expression -> expression * expression .)
    OF              reduce using rule 43 (expression -> expression * expression .)
    LOOP            reduce using rule 43 (expression -> expression * expression .)
    THEN            reduce using rule 43 (expression -> expression * expression .)
    )               reduce using rule 43 (expression -> expression * expression .)
    }               reduce using rule 43 (expression -> expression * expression .)
    ,               reduce using rule 43 (expression -> expression * expression .)
    POOL            reduce using rule 43 (expression -> expression * expression .)
    ELSE            reduce using rule 43 (expression -> expression * expression .)
    IN              reduce using rule 43 (expression -> expression * expression .)
    FI              reduce using rule 43 (expression -> expression * expression .)
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67
    -               shift and go to state 70
    +               shift and go to state 71


state 98

    (44) expression -> expression - expression .
    (30) expression -> expression . . OBJECTID ( parametros )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (39) expression -> expression . = expression
    (40) expression -> expression . LE expression
    (41) expression -> expression . < expression
    (42) expression -> expression . / expression
    (43) expression -> expression . * expression
    (44) expression -> expression . - expression
    (45) expression -> expression . + expression
    .               reduce using rule 44 (expression -> expression - expression .)
    @               reduce using rule 44 (expression -> expression - expression .)
    /               reduce using rule 44 (expression -> expression - expression .)
    *               reduce using rule 44 (expression -> expression - expression .)
    -               reduce using rule 44 (expression -> expression - expression .)
    +               reduce using rule 44 (expression -> expression - expression .)
    ;               reduce using rule 44 (expression -> expression - expression .)
    OF              reduce using rule 44 (expression -> expression - expression .)
    LOOP            reduce using rule 44 (expression -> expression - expression .)
    THEN            reduce using rule 44 (expression -> expression - expression .)
    )               reduce using rule 44 (expression -> expression - expression .)
    }               reduce using rule 44 (expression -> expression - expression .)
    ,               reduce using rule 44 (expression -> expression - expression .)
    POOL            reduce using rule 44 (expression -> expression - expression .)
    ELSE            reduce using rule 44 (expression -> expression - expression .)
    IN              reduce using rule 44 (expression -> expression - expression .)
    FI              reduce using rule 44 (expression -> expression - expression .)
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67


state 99

    (45) expression -> expression + expression .
    (30) expression -> expression . . OBJECTID ( parametros )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (39) expression -> expression . = expression
    (40) expression -> expression . LE expression
    (41) expression -> expression . < expression
    (42) expression -> expression . / expression
    (43) expression -> expression . * expression
    (44) expression -> expression . - expression
    (45) expression -> expression . + expression
    .               reduce using rule 45 (expression -> expression + expression .)
    @               reduce using rule 45 (expression -> expression + expression .)
    /               reduce using rule 45 (expression -> expression + expression .)
    *               reduce using rule 45 (expression -> expression + expression .)
    -               reduce using rule 45 (expression -> expression + expression .)
    +               reduce using rule 45 (expression -> expression + expression .)
    ;               reduce using rule 45 (expression -> expression + expression .)
    OF              reduce using rule 45 (expression -> expression + expression .)
    LOOP            reduce using rule 45 (expression -> expression + expression .)
    THEN            reduce using rule 45 (expression -> expression + expression .)
    )               reduce using rule 45 (expression -> expression + expression .)
    }               reduce using rule 45 (expression -> expression + expression .)
    ,               reduce using rule 45 (expression -> expression + expression .)
    POOL            reduce using rule 45 (expression -> expression + expression .)
    ELSE            reduce using rule 45 (expression -> expression + expression .)
    IN              reduce using rule 45 (expression -> expression + expression .)
    FI              reduce using rule 45 (expression -> expression + expression .)
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67


state 100

    (19) expression -> CASE expression OF . darrowlist ESAC
    (55) darrowlist -> . darrowlist OBJECTID : TYPEID DARROW expression ;
    (56) darrowlist -> . OBJECTID : TYPEID DARROW expression ;
    OBJECTID        shift and go to state 117

    darrowlist                     shift and go to state 116

state 101

    (20) expression -> WHILE expression LOOP . expression POOL
    (19) expression -> . CASE expression OF darrowlist ESAC
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LET let_list IN expression
    (22) expression -> . IF expression THEN expression ELSE expression FI
    (23) expression -> . { expressions }
    (24) expression -> . BOOL_CONST
    (25) expression -> . STR_CONST
    (26) expression -> . INT_CONST
    (27) expression -> . OBJECTID
    (28) expression -> . OBJECTID ( parametros )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( parametros )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . NEW TYPEID
    (36) expression -> . ISVOID expression
    (37) expression -> . NOT expression
    (38) expression -> . ( expression )
    (39) expression -> . expression = expression
    (40) expression -> . expression LE expression
    (41) expression -> . expression < expression
    (42) expression -> . expression / expression
    (43) expression -> . expression * expression
    (44) expression -> . expression - expression
    (45) expression -> . expression + expression
    (46) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 46
    WHILE           shift and go to state 47
    LET             shift and go to state 48
    IF              shift and go to state 49
    {               shift and go to state 50
    BOOL_CONST      shift and go to state 51
    STR_CONST       shift and go to state 52
    INT_CONST       shift and go to state 53
    OBJECTID        shift and go to state 44
    ~               shift and go to state 55
    NEW             shift and go to state 56
    ISVOID          shift and go to state 57
    NOT             shift and go to state 58
    (               shift and go to state 54

    expression                     shift and go to state 118

state 102

    (21) expression -> LET let_list IN . expression
    (19) expression -> . CASE expression OF darrowlist ESAC
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LET let_list IN expression
    (22) expression -> . IF expression THEN expression ELSE expression FI
    (23) expression -> . { expressions }
    (24) expression -> . BOOL_CONST
    (25) expression -> . STR_CONST
    (26) expression -> . INT_CONST
    (27) expression -> . OBJECTID
    (28) expression -> . OBJECTID ( parametros )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( parametros )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . NEW TYPEID
    (36) expression -> . ISVOID expression
    (37) expression -> . NOT expression
    (38) expression -> . ( expression )
    (39) expression -> . expression = expression
    (40) expression -> . expression LE expression
    (41) expression -> . expression < expression
    (42) expression -> . expression / expression
    (43) expression -> . expression * expression
    (44) expression -> . expression - expression
    (45) expression -> . expression + expression
    (46) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 46
    WHILE           shift and go to state 47
    LET             shift and go to state 48
    IF              shift and go to state 49
    {               shift and go to state 50
    BOOL_CONST      shift and go to state 51
    STR_CONST       shift and go to state 52
    INT_CONST       shift and go to state 53
    OBJECTID        shift and go to state 44
    ~               shift and go to state 55
    NEW             shift and go to state 56
    ISVOID          shift and go to state 57
    NOT             shift and go to state 58
    (               shift and go to state 54

    expression                     shift and go to state 119

state 103

    (52) let_list -> let_list , . let_decl
    (53) let_decl -> . OBJECTID : TYPEID ASSIGN expression
    (54) let_decl -> . OBJECTID : TYPEID
    OBJECTID        shift and go to state 76

    let_decl                       shift and go to state 120

state 104

    (53) let_decl -> OBJECTID : . TYPEID ASSIGN expression
    (54) let_decl -> OBJECTID : . TYPEID
    TYPEID          shift and go to state 121


state 105

    (22) expression -> IF expression THEN . expression ELSE expression FI
    (19) expression -> . CASE expression OF darrowlist ESAC
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LET let_list IN expression
    (22) expression -> . IF expression THEN expression ELSE expression FI
    (23) expression -> . { expressions }
    (24) expression -> . BOOL_CONST
    (25) expression -> . STR_CONST
    (26) expression -> . INT_CONST
    (27) expression -> . OBJECTID
    (28) expression -> . OBJECTID ( parametros )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( parametros )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . NEW TYPEID
    (36) expression -> . ISVOID expression
    (37) expression -> . NOT expression
    (38) expression -> . ( expression )
    (39) expression -> . expression = expression
    (40) expression -> . expression LE expression
    (41) expression -> . expression < expression
    (42) expression -> . expression / expression
    (43) expression -> . expression * expression
    (44) expression -> . expression - expression
    (45) expression -> . expression + expression
    (46) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 46
    WHILE           shift and go to state 47
    LET             shift and go to state 48
    IF              shift and go to state 49
    {               shift and go to state 50
    BOOL_CONST      shift and go to state 51
    STR_CONST       shift and go to state 52
    INT_CONST       shift and go to state 53
    OBJECTID        shift and go to state 44
    ~               shift and go to state 55
    NEW             shift and go to state 56
    ISVOID          shift and go to state 57
    NOT             shift and go to state 58
    (               shift and go to state 54

    expression                     shift and go to state 122

state 106

    (23) expression -> { expressions } .
    .               reduce using rule 23 (expression -> { expressions } .)
    @               reduce using rule 23 (expression -> { expressions } .)
    =               reduce using rule 23 (expression -> { expressions } .)
    LE              reduce using rule 23 (expression -> { expressions } .)
    <               reduce using rule 23 (expression -> { expressions } .)
    /               reduce using rule 23 (expression -> { expressions } .)
    *               reduce using rule 23 (expression -> { expressions } .)
    -               reduce using rule 23 (expression -> { expressions } .)
    +               reduce using rule 23 (expression -> { expressions } .)
    ;               reduce using rule 23 (expression -> { expressions } .)
    OF              reduce using rule 23 (expression -> { expressions } .)
    LOOP            reduce using rule 23 (expression -> { expressions } .)
    THEN            reduce using rule 23 (expression -> { expressions } .)
    )               reduce using rule 23 (expression -> { expressions } .)
    }               reduce using rule 23 (expression -> { expressions } .)
    ,               reduce using rule 23 (expression -> { expressions } .)
    POOL            reduce using rule 23 (expression -> { expressions } .)
    ELSE            reduce using rule 23 (expression -> { expressions } .)
    IN              reduce using rule 23 (expression -> { expressions } .)
    FI              reduce using rule 23 (expression -> { expressions } .)


state 107

    (47) expressions -> expressions expression . ;
    (30) expression -> expression . . OBJECTID ( parametros )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (39) expression -> expression . = expression
    (40) expression -> expression . LE expression
    (41) expression -> expression . < expression
    (42) expression -> expression . / expression
    (43) expression -> expression . * expression
    (44) expression -> expression . - expression
    (45) expression -> expression . + expression
    ;               shift and go to state 123
    .               shift and go to state 63
    @               shift and go to state 64
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 108

    (48) expressions -> expression ; .
    }               reduce using rule 48 (expressions -> expression ; .)
    CASE            reduce using rule 48 (expressions -> expression ; .)
    WHILE           reduce using rule 48 (expressions -> expression ; .)
    LET             reduce using rule 48 (expressions -> expression ; .)
    IF              reduce using rule 48 (expressions -> expression ; .)
    {               reduce using rule 48 (expressions -> expression ; .)
    BOOL_CONST      reduce using rule 48 (expressions -> expression ; .)
    STR_CONST       reduce using rule 48 (expressions -> expression ; .)
    INT_CONST       reduce using rule 48 (expressions -> expression ; .)
    OBJECTID        reduce using rule 48 (expressions -> expression ; .)
    ~               reduce using rule 48 (expressions -> expression ; .)
    NEW             reduce using rule 48 (expressions -> expression ; .)
    ISVOID          reduce using rule 48 (expressions -> expression ; .)
    NOT             reduce using rule 48 (expressions -> expression ; .)
    (               reduce using rule 48 (expressions -> expression ; .)


state 109

    (38) expression -> ( expression ) .
    .               reduce using rule 38 (expression -> ( expression ) .)
    @               reduce using rule 38 (expression -> ( expression ) .)
    =               reduce using rule 38 (expression -> ( expression ) .)
    LE              reduce using rule 38 (expression -> ( expression ) .)
    <               reduce using rule 38 (expression -> ( expression ) .)
    /               reduce using rule 38 (expression -> ( expression ) .)
    *               reduce using rule 38 (expression -> ( expression ) .)
    -               reduce using rule 38 (expression -> ( expression ) .)
    +               reduce using rule 38 (expression -> ( expression ) .)
    ;               reduce using rule 38 (expression -> ( expression ) .)
    OF              reduce using rule 38 (expression -> ( expression ) .)
    LOOP            reduce using rule 38 (expression -> ( expression ) .)
    THEN            reduce using rule 38 (expression -> ( expression ) .)
    )               reduce using rule 38 (expression -> ( expression ) .)
    }               reduce using rule 38 (expression -> ( expression ) .)
    ,               reduce using rule 38 (expression -> ( expression ) .)
    POOL            reduce using rule 38 (expression -> ( expression ) .)
    ELSE            reduce using rule 38 (expression -> ( expression ) .)
    IN              reduce using rule 38 (expression -> ( expression ) .)
    FI              reduce using rule 38 (expression -> ( expression ) .)


state 110

    (12) caracteristica -> OBJECTID ( formales ) : TYPEID { expression . }
    (30) expression -> expression . . OBJECTID ( parametros )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (39) expression -> expression . = expression
    (40) expression -> expression . LE expression
    (41) expression -> expression . < expression
    (42) expression -> expression . / expression
    (43) expression -> expression . * expression
    (44) expression -> expression . - expression
    (45) expression -> expression . + expression
    }               shift and go to state 124
    .               shift and go to state 63
    @               shift and go to state 64
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 111

    (13) caracteristica -> OBJECTID ( ) : TYPEID { expression } .
    ;               reduce using rule 13 (caracteristica -> OBJECTID ( ) : TYPEID { expression } .)


state 112

    (28) expression -> OBJECTID ( parametros ) .
    .               reduce using rule 28 (expression -> OBJECTID ( parametros ) .)
    @               reduce using rule 28 (expression -> OBJECTID ( parametros ) .)
    =               reduce using rule 28 (expression -> OBJECTID ( parametros ) .)
    LE              reduce using rule 28 (expression -> OBJECTID ( parametros ) .)
    <               reduce using rule 28 (expression -> OBJECTID ( parametros ) .)
    /               reduce using rule 28 (expression -> OBJECTID ( parametros ) .)
    *               reduce using rule 28 (expression -> OBJECTID ( parametros ) .)
    -               reduce using rule 28 (expression -> OBJECTID ( parametros ) .)
    +               reduce using rule 28 (expression -> OBJECTID ( parametros ) .)
    ;               reduce using rule 28 (expression -> OBJECTID ( parametros ) .)
    OF              reduce using rule 28 (expression -> OBJECTID ( parametros ) .)
    LOOP            reduce using rule 28 (expression -> OBJECTID ( parametros ) .)
    THEN            reduce using rule 28 (expression -> OBJECTID ( parametros ) .)
    )               reduce using rule 28 (expression -> OBJECTID ( parametros ) .)
    }               reduce using rule 28 (expression -> OBJECTID ( parametros ) .)
    ,               reduce using rule 28 (expression -> OBJECTID ( parametros ) .)
    POOL            reduce using rule 28 (expression -> OBJECTID ( parametros ) .)
    ELSE            reduce using rule 28 (expression -> OBJECTID ( parametros ) .)
    IN              reduce using rule 28 (expression -> OBJECTID ( parametros ) .)
    FI              reduce using rule 28 (expression -> OBJECTID ( parametros ) .)


state 113

    (49) parametros -> parametros , . expression
    (19) expression -> . CASE expression OF darrowlist ESAC
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LET let_list IN expression
    (22) expression -> . IF expression THEN expression ELSE expression FI
    (23) expression -> . { expressions }
    (24) expression -> . BOOL_CONST
    (25) expression -> . STR_CONST
    (26) expression -> . INT_CONST
    (27) expression -> . OBJECTID
    (28) expression -> . OBJECTID ( parametros )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( parametros )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . NEW TYPEID
    (36) expression -> . ISVOID expression
    (37) expression -> . NOT expression
    (38) expression -> . ( expression )
    (39) expression -> . expression = expression
    (40) expression -> . expression LE expression
    (41) expression -> . expression < expression
    (42) expression -> . expression / expression
    (43) expression -> . expression * expression
    (44) expression -> . expression - expression
    (45) expression -> . expression + expression
    (46) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 46
    WHILE           shift and go to state 47
    LET             shift and go to state 48
    IF              shift and go to state 49
    {               shift and go to state 50
    BOOL_CONST      shift and go to state 51
    STR_CONST       shift and go to state 52
    INT_CONST       shift and go to state 53
    OBJECTID        shift and go to state 44
    ~               shift and go to state 55
    NEW             shift and go to state 56
    ISVOID          shift and go to state 57
    NOT             shift and go to state 58
    (               shift and go to state 54

    expression                     shift and go to state 125

state 114

    (30) expression -> expression . OBJECTID ( . parametros )
    (31) expression -> expression . OBJECTID ( . )
    (49) parametros -> . parametros , expression
    (50) parametros -> . expression
    (19) expression -> . CASE expression OF darrowlist ESAC
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LET let_list IN expression
    (22) expression -> . IF expression THEN expression ELSE expression FI
    (23) expression -> . { expressions }
    (24) expression -> . BOOL_CONST
    (25) expression -> . STR_CONST
    (26) expression -> . INT_CONST
    (27) expression -> . OBJECTID
    (28) expression -> . OBJECTID ( parametros )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( parametros )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . NEW TYPEID
    (36) expression -> . ISVOID expression
    (37) expression -> . NOT expression
    (38) expression -> . ( expression )
    (39) expression -> . expression = expression
    (40) expression -> . expression LE expression
    (41) expression -> . expression < expression
    (42) expression -> . expression / expression
    (43) expression -> . expression * expression
    (44) expression -> . expression - expression
    (45) expression -> . expression + expression
    (46) expression -> . OBJECTID ASSIGN expression
    )               shift and go to state 127
    CASE            shift and go to state 46
    WHILE           shift and go to state 47
    LET             shift and go to state 48
    IF              shift and go to state 49
    {               shift and go to state 50
    BOOL_CONST      shift and go to state 51
    STR_CONST       shift and go to state 52
    INT_CONST       shift and go to state 53
    OBJECTID        shift and go to state 44
    ~               shift and go to state 55
    NEW             shift and go to state 56
    ISVOID          shift and go to state 57
    NOT             shift and go to state 58
    (               shift and go to state 54

    expression                     shift and go to state 89
    parametros                     shift and go to state 126

state 115

    (32) expression -> expression @ TYPEID . . OBJECTID ( parametros )
    (33) expression -> expression @ TYPEID . . OBJECTID ( )
    OBJECTID        shift and go to state 128


state 116

    (19) expression -> CASE expression OF darrowlist . ESAC
    (55) darrowlist -> darrowlist . OBJECTID : TYPEID DARROW expression ;
    ESAC            shift and go to state 129
    OBJECTID        shift and go to state 130


state 117

    (56) darrowlist -> OBJECTID . : TYPEID DARROW expression ;
    :               shift and go to state 131


state 118

    (20) expression -> WHILE expression LOOP expression . POOL
    (30) expression -> expression . . OBJECTID ( parametros )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (39) expression -> expression . = expression
    (40) expression -> expression . LE expression
    (41) expression -> expression . < expression
    (42) expression -> expression . / expression
    (43) expression -> expression . * expression
    (44) expression -> expression . - expression
    (45) expression -> expression . + expression
    POOL            shift and go to state 132
    .               shift and go to state 63
    @               shift and go to state 64
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 119

    (21) expression -> LET let_list IN expression .
    (30) expression -> expression . . OBJECTID ( parametros )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (39) expression -> expression . = expression
    (40) expression -> expression . LE expression
    (41) expression -> expression . < expression
    (42) expression -> expression . / expression
    (43) expression -> expression . * expression
    (44) expression -> expression . - expression
    (45) expression -> expression . + expression
  ! shift/reduce conflict for . resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    ;               reduce using rule 21 (expression -> LET let_list IN expression .)
    OF              reduce using rule 21 (expression -> LET let_list IN expression .)
    LOOP            reduce using rule 21 (expression -> LET let_list IN expression .)
    THEN            reduce using rule 21 (expression -> LET let_list IN expression .)
    )               reduce using rule 21 (expression -> LET let_list IN expression .)
    }               reduce using rule 21 (expression -> LET let_list IN expression .)
    ,               reduce using rule 21 (expression -> LET let_list IN expression .)
    POOL            reduce using rule 21 (expression -> LET let_list IN expression .)
    ELSE            reduce using rule 21 (expression -> LET let_list IN expression .)
    IN              reduce using rule 21 (expression -> LET let_list IN expression .)
    FI              reduce using rule 21 (expression -> LET let_list IN expression .)
    .               shift and go to state 63
    @               shift and go to state 64
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 120

    (52) let_list -> let_list , let_decl .
    IN              reduce using rule 52 (let_list -> let_list , let_decl .)
    ,               reduce using rule 52 (let_list -> let_list , let_decl .)


state 121

    (53) let_decl -> OBJECTID : TYPEID . ASSIGN expression
    (54) let_decl -> OBJECTID : TYPEID .
    ASSIGN          shift and go to state 133
    IN              reduce using rule 54 (let_decl -> OBJECTID : TYPEID .)
    ,               reduce using rule 54 (let_decl -> OBJECTID : TYPEID .)


state 122

    (22) expression -> IF expression THEN expression . ELSE expression FI
    (30) expression -> expression . . OBJECTID ( parametros )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (39) expression -> expression . = expression
    (40) expression -> expression . LE expression
    (41) expression -> expression . < expression
    (42) expression -> expression . / expression
    (43) expression -> expression . * expression
    (44) expression -> expression . - expression
    (45) expression -> expression . + expression
    ELSE            shift and go to state 134
    .               shift and go to state 63
    @               shift and go to state 64
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 123

    (47) expressions -> expressions expression ; .
    }               reduce using rule 47 (expressions -> expressions expression ; .)
    CASE            reduce using rule 47 (expressions -> expressions expression ; .)
    WHILE           reduce using rule 47 (expressions -> expressions expression ; .)
    LET             reduce using rule 47 (expressions -> expressions expression ; .)
    IF              reduce using rule 47 (expressions -> expressions expression ; .)
    {               reduce using rule 47 (expressions -> expressions expression ; .)
    BOOL_CONST      reduce using rule 47 (expressions -> expressions expression ; .)
    STR_CONST       reduce using rule 47 (expressions -> expressions expression ; .)
    INT_CONST       reduce using rule 47 (expressions -> expressions expression ; .)
    OBJECTID        reduce using rule 47 (expressions -> expressions expression ; .)
    ~               reduce using rule 47 (expressions -> expressions expression ; .)
    NEW             reduce using rule 47 (expressions -> expressions expression ; .)
    ISVOID          reduce using rule 47 (expressions -> expressions expression ; .)
    NOT             reduce using rule 47 (expressions -> expressions expression ; .)
    (               reduce using rule 47 (expressions -> expressions expression ; .)


state 124

    (12) caracteristica -> OBJECTID ( formales ) : TYPEID { expression } .
    ;               reduce using rule 12 (caracteristica -> OBJECTID ( formales ) : TYPEID { expression } .)


state 125

    (49) parametros -> parametros , expression .
    (30) expression -> expression . . OBJECTID ( parametros )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (39) expression -> expression . = expression
    (40) expression -> expression . LE expression
    (41) expression -> expression . < expression
    (42) expression -> expression . / expression
    (43) expression -> expression . * expression
    (44) expression -> expression . - expression
    (45) expression -> expression . + expression
    )               reduce using rule 49 (parametros -> parametros , expression .)
    ,               reduce using rule 49 (parametros -> parametros , expression .)
    .               shift and go to state 63
    @               shift and go to state 64
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 126

    (30) expression -> expression . OBJECTID ( parametros . )
    (49) parametros -> parametros . , expression
    )               shift and go to state 135
    ,               shift and go to state 113


state 127

    (31) expression -> expression . OBJECTID ( ) .
    .               reduce using rule 31 (expression -> expression . OBJECTID ( ) .)
    @               reduce using rule 31 (expression -> expression . OBJECTID ( ) .)
    =               reduce using rule 31 (expression -> expression . OBJECTID ( ) .)
    LE              reduce using rule 31 (expression -> expression . OBJECTID ( ) .)
    <               reduce using rule 31 (expression -> expression . OBJECTID ( ) .)
    /               reduce using rule 31 (expression -> expression . OBJECTID ( ) .)
    *               reduce using rule 31 (expression -> expression . OBJECTID ( ) .)
    -               reduce using rule 31 (expression -> expression . OBJECTID ( ) .)
    +               reduce using rule 31 (expression -> expression . OBJECTID ( ) .)
    ;               reduce using rule 31 (expression -> expression . OBJECTID ( ) .)
    OF              reduce using rule 31 (expression -> expression . OBJECTID ( ) .)
    LOOP            reduce using rule 31 (expression -> expression . OBJECTID ( ) .)
    THEN            reduce using rule 31 (expression -> expression . OBJECTID ( ) .)
    )               reduce using rule 31 (expression -> expression . OBJECTID ( ) .)
    }               reduce using rule 31 (expression -> expression . OBJECTID ( ) .)
    ,               reduce using rule 31 (expression -> expression . OBJECTID ( ) .)
    POOL            reduce using rule 31 (expression -> expression . OBJECTID ( ) .)
    ELSE            reduce using rule 31 (expression -> expression . OBJECTID ( ) .)
    IN              reduce using rule 31 (expression -> expression . OBJECTID ( ) .)
    FI              reduce using rule 31 (expression -> expression . OBJECTID ( ) .)


state 128

    (32) expression -> expression @ TYPEID . OBJECTID . ( parametros )
    (33) expression -> expression @ TYPEID . OBJECTID . ( )
    (               shift and go to state 136


state 129

    (19) expression -> CASE expression OF darrowlist ESAC .
    .               reduce using rule 19 (expression -> CASE expression OF darrowlist ESAC .)
    @               reduce using rule 19 (expression -> CASE expression OF darrowlist ESAC .)
    =               reduce using rule 19 (expression -> CASE expression OF darrowlist ESAC .)
    LE              reduce using rule 19 (expression -> CASE expression OF darrowlist ESAC .)
    <               reduce using rule 19 (expression -> CASE expression OF darrowlist ESAC .)
    /               reduce using rule 19 (expression -> CASE expression OF darrowlist ESAC .)
    *               reduce using rule 19 (expression -> CASE expression OF darrowlist ESAC .)
    -               reduce using rule 19 (expression -> CASE expression OF darrowlist ESAC .)
    +               reduce using rule 19 (expression -> CASE expression OF darrowlist ESAC .)
    ;               reduce using rule 19 (expression -> CASE expression OF darrowlist ESAC .)
    OF              reduce using rule 19 (expression -> CASE expression OF darrowlist ESAC .)
    LOOP            reduce using rule 19 (expression -> CASE expression OF darrowlist ESAC .)
    THEN            reduce using rule 19 (expression -> CASE expression OF darrowlist ESAC .)
    )               reduce using rule 19 (expression -> CASE expression OF darrowlist ESAC .)
    }               reduce using rule 19 (expression -> CASE expression OF darrowlist ESAC .)
    ,               reduce using rule 19 (expression -> CASE expression OF darrowlist ESAC .)
    POOL            reduce using rule 19 (expression -> CASE expression OF darrowlist ESAC .)
    ELSE            reduce using rule 19 (expression -> CASE expression OF darrowlist ESAC .)
    IN              reduce using rule 19 (expression -> CASE expression OF darrowlist ESAC .)
    FI              reduce using rule 19 (expression -> CASE expression OF darrowlist ESAC .)


state 130

    (55) darrowlist -> darrowlist OBJECTID . : TYPEID DARROW expression ;
    :               shift and go to state 137


state 131

    (56) darrowlist -> OBJECTID : . TYPEID DARROW expression ;
    TYPEID          shift and go to state 138


state 132

    (20) expression -> WHILE expression LOOP expression POOL .
    .               reduce using rule 20 (expression -> WHILE expression LOOP expression POOL .)
    @               reduce using rule 20 (expression -> WHILE expression LOOP expression POOL .)
    =               reduce using rule 20 (expression -> WHILE expression LOOP expression POOL .)
    LE              reduce using rule 20 (expression -> WHILE expression LOOP expression POOL .)
    <               reduce using rule 20 (expression -> WHILE expression LOOP expression POOL .)
    /               reduce using rule 20 (expression -> WHILE expression LOOP expression POOL .)
    *               reduce using rule 20 (expression -> WHILE expression LOOP expression POOL .)
    -               reduce using rule 20 (expression -> WHILE expression LOOP expression POOL .)
    +               reduce using rule 20 (expression -> WHILE expression LOOP expression POOL .)
    ;               reduce using rule 20 (expression -> WHILE expression LOOP expression POOL .)
    OF              reduce using rule 20 (expression -> WHILE expression LOOP expression POOL .)
    LOOP            reduce using rule 20 (expression -> WHILE expression LOOP expression POOL .)
    THEN            reduce using rule 20 (expression -> WHILE expression LOOP expression POOL .)
    )               reduce using rule 20 (expression -> WHILE expression LOOP expression POOL .)
    }               reduce using rule 20 (expression -> WHILE expression LOOP expression POOL .)
    ,               reduce using rule 20 (expression -> WHILE expression LOOP expression POOL .)
    POOL            reduce using rule 20 (expression -> WHILE expression LOOP expression POOL .)
    ELSE            reduce using rule 20 (expression -> WHILE expression LOOP expression POOL .)
    IN              reduce using rule 20 (expression -> WHILE expression LOOP expression POOL .)
    FI              reduce using rule 20 (expression -> WHILE expression LOOP expression POOL .)


state 133

    (53) let_decl -> OBJECTID : TYPEID ASSIGN . expression
    (19) expression -> . CASE expression OF darrowlist ESAC
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LET let_list IN expression
    (22) expression -> . IF expression THEN expression ELSE expression FI
    (23) expression -> . { expressions }
    (24) expression -> . BOOL_CONST
    (25) expression -> . STR_CONST
    (26) expression -> . INT_CONST
    (27) expression -> . OBJECTID
    (28) expression -> . OBJECTID ( parametros )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( parametros )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . NEW TYPEID
    (36) expression -> . ISVOID expression
    (37) expression -> . NOT expression
    (38) expression -> . ( expression )
    (39) expression -> . expression = expression
    (40) expression -> . expression LE expression
    (41) expression -> . expression < expression
    (42) expression -> . expression / expression
    (43) expression -> . expression * expression
    (44) expression -> . expression - expression
    (45) expression -> . expression + expression
    (46) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 46
    WHILE           shift and go to state 47
    LET             shift and go to state 48
    IF              shift and go to state 49
    {               shift and go to state 50
    BOOL_CONST      shift and go to state 51
    STR_CONST       shift and go to state 52
    INT_CONST       shift and go to state 53
    OBJECTID        shift and go to state 44
    ~               shift and go to state 55
    NEW             shift and go to state 56
    ISVOID          shift and go to state 57
    NOT             shift and go to state 58
    (               shift and go to state 54

    expression                     shift and go to state 139

state 134

    (22) expression -> IF expression THEN expression ELSE . expression FI
    (19) expression -> . CASE expression OF darrowlist ESAC
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LET let_list IN expression
    (22) expression -> . IF expression THEN expression ELSE expression FI
    (23) expression -> . { expressions }
    (24) expression -> . BOOL_CONST
    (25) expression -> . STR_CONST
    (26) expression -> . INT_CONST
    (27) expression -> . OBJECTID
    (28) expression -> . OBJECTID ( parametros )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( parametros )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . NEW TYPEID
    (36) expression -> . ISVOID expression
    (37) expression -> . NOT expression
    (38) expression -> . ( expression )
    (39) expression -> . expression = expression
    (40) expression -> . expression LE expression
    (41) expression -> . expression < expression
    (42) expression -> . expression / expression
    (43) expression -> . expression * expression
    (44) expression -> . expression - expression
    (45) expression -> . expression + expression
    (46) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 46
    WHILE           shift and go to state 47
    LET             shift and go to state 48
    IF              shift and go to state 49
    {               shift and go to state 50
    BOOL_CONST      shift and go to state 51
    STR_CONST       shift and go to state 52
    INT_CONST       shift and go to state 53
    OBJECTID        shift and go to state 44
    ~               shift and go to state 55
    NEW             shift and go to state 56
    ISVOID          shift and go to state 57
    NOT             shift and go to state 58
    (               shift and go to state 54

    expression                     shift and go to state 140

state 135

    (30) expression -> expression . OBJECTID ( parametros ) .
    .               reduce using rule 30 (expression -> expression . OBJECTID ( parametros ) .)
    @               reduce using rule 30 (expression -> expression . OBJECTID ( parametros ) .)
    =               reduce using rule 30 (expression -> expression . OBJECTID ( parametros ) .)
    LE              reduce using rule 30 (expression -> expression . OBJECTID ( parametros ) .)
    <               reduce using rule 30 (expression -> expression . OBJECTID ( parametros ) .)
    /               reduce using rule 30 (expression -> expression . OBJECTID ( parametros ) .)
    *               reduce using rule 30 (expression -> expression . OBJECTID ( parametros ) .)
    -               reduce using rule 30 (expression -> expression . OBJECTID ( parametros ) .)
    +               reduce using rule 30 (expression -> expression . OBJECTID ( parametros ) .)
    ;               reduce using rule 30 (expression -> expression . OBJECTID ( parametros ) .)
    OF              reduce using rule 30 (expression -> expression . OBJECTID ( parametros ) .)
    LOOP            reduce using rule 30 (expression -> expression . OBJECTID ( parametros ) .)
    THEN            reduce using rule 30 (expression -> expression . OBJECTID ( parametros ) .)
    )               reduce using rule 30 (expression -> expression . OBJECTID ( parametros ) .)
    }               reduce using rule 30 (expression -> expression . OBJECTID ( parametros ) .)
    ,               reduce using rule 30 (expression -> expression . OBJECTID ( parametros ) .)
    POOL            reduce using rule 30 (expression -> expression . OBJECTID ( parametros ) .)
    ELSE            reduce using rule 30 (expression -> expression . OBJECTID ( parametros ) .)
    IN              reduce using rule 30 (expression -> expression . OBJECTID ( parametros ) .)
    FI              reduce using rule 30 (expression -> expression . OBJECTID ( parametros ) .)


state 136

    (32) expression -> expression @ TYPEID . OBJECTID ( . parametros )
    (33) expression -> expression @ TYPEID . OBJECTID ( . )
    (49) parametros -> . parametros , expression
    (50) parametros -> . expression
    (19) expression -> . CASE expression OF darrowlist ESAC
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LET let_list IN expression
    (22) expression -> . IF expression THEN expression ELSE expression FI
    (23) expression -> . { expressions }
    (24) expression -> . BOOL_CONST
    (25) expression -> . STR_CONST
    (26) expression -> . INT_CONST
    (27) expression -> . OBJECTID
    (28) expression -> . OBJECTID ( parametros )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( parametros )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . NEW TYPEID
    (36) expression -> . ISVOID expression
    (37) expression -> . NOT expression
    (38) expression -> . ( expression )
    (39) expression -> . expression = expression
    (40) expression -> . expression LE expression
    (41) expression -> . expression < expression
    (42) expression -> . expression / expression
    (43) expression -> . expression * expression
    (44) expression -> . expression - expression
    (45) expression -> . expression + expression
    (46) expression -> . OBJECTID ASSIGN expression
    )               shift and go to state 142
    CASE            shift and go to state 46
    WHILE           shift and go to state 47
    LET             shift and go to state 48
    IF              shift and go to state 49
    {               shift and go to state 50
    BOOL_CONST      shift and go to state 51
    STR_CONST       shift and go to state 52
    INT_CONST       shift and go to state 53
    OBJECTID        shift and go to state 44
    ~               shift and go to state 55
    NEW             shift and go to state 56
    ISVOID          shift and go to state 57
    NOT             shift and go to state 58
    (               shift and go to state 54

    expression                     shift and go to state 89
    parametros                     shift and go to state 141

state 137

    (55) darrowlist -> darrowlist OBJECTID : . TYPEID DARROW expression ;
    TYPEID          shift and go to state 143


state 138

    (56) darrowlist -> OBJECTID : TYPEID . DARROW expression ;
    DARROW          shift and go to state 144


state 139

    (53) let_decl -> OBJECTID : TYPEID ASSIGN expression .
    (30) expression -> expression . . OBJECTID ( parametros )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (39) expression -> expression . = expression
    (40) expression -> expression . LE expression
    (41) expression -> expression . < expression
    (42) expression -> expression . / expression
    (43) expression -> expression . * expression
    (44) expression -> expression . - expression
    (45) expression -> expression . + expression
    IN              reduce using rule 53 (let_decl -> OBJECTID : TYPEID ASSIGN expression .)
    ,               reduce using rule 53 (let_decl -> OBJECTID : TYPEID ASSIGN expression .)
    .               shift and go to state 63
    @               shift and go to state 64
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 140

    (22) expression -> IF expression THEN expression ELSE expression . FI
    (30) expression -> expression . . OBJECTID ( parametros )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (39) expression -> expression . = expression
    (40) expression -> expression . LE expression
    (41) expression -> expression . < expression
    (42) expression -> expression . / expression
    (43) expression -> expression . * expression
    (44) expression -> expression . - expression
    (45) expression -> expression . + expression
    FI              shift and go to state 145
    .               shift and go to state 63
    @               shift and go to state 64
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 141

    (32) expression -> expression @ TYPEID . OBJECTID ( parametros . )
    (49) parametros -> parametros . , expression
    )               shift and go to state 146
    ,               shift and go to state 113


state 142

    (33) expression -> expression @ TYPEID . OBJECTID ( ) .
    .               reduce using rule 33 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    @               reduce using rule 33 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    =               reduce using rule 33 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    LE              reduce using rule 33 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    <               reduce using rule 33 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    /               reduce using rule 33 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    *               reduce using rule 33 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    -               reduce using rule 33 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    +               reduce using rule 33 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    ;               reduce using rule 33 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    OF              reduce using rule 33 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    LOOP            reduce using rule 33 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    THEN            reduce using rule 33 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    )               reduce using rule 33 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    }               reduce using rule 33 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    ,               reduce using rule 33 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    POOL            reduce using rule 33 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    ELSE            reduce using rule 33 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    IN              reduce using rule 33 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    FI              reduce using rule 33 (expression -> expression @ TYPEID . OBJECTID ( ) .)


state 143

    (55) darrowlist -> darrowlist OBJECTID : TYPEID . DARROW expression ;
    DARROW          shift and go to state 147


state 144

    (56) darrowlist -> OBJECTID : TYPEID DARROW . expression ;
    (19) expression -> . CASE expression OF darrowlist ESAC
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LET let_list IN expression
    (22) expression -> . IF expression THEN expression ELSE expression FI
    (23) expression -> . { expressions }
    (24) expression -> . BOOL_CONST
    (25) expression -> . STR_CONST
    (26) expression -> . INT_CONST
    (27) expression -> . OBJECTID
    (28) expression -> . OBJECTID ( parametros )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( parametros )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . NEW TYPEID
    (36) expression -> . ISVOID expression
    (37) expression -> . NOT expression
    (38) expression -> . ( expression )
    (39) expression -> . expression = expression
    (40) expression -> . expression LE expression
    (41) expression -> . expression < expression
    (42) expression -> . expression / expression
    (43) expression -> . expression * expression
    (44) expression -> . expression - expression
    (45) expression -> . expression + expression
    (46) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 46
    WHILE           shift and go to state 47
    LET             shift and go to state 48
    IF              shift and go to state 49
    {               shift and go to state 50
    BOOL_CONST      shift and go to state 51
    STR_CONST       shift and go to state 52
    INT_CONST       shift and go to state 53
    OBJECTID        shift and go to state 44
    ~               shift and go to state 55
    NEW             shift and go to state 56
    ISVOID          shift and go to state 57
    NOT             shift and go to state 58
    (               shift and go to state 54

    expression                     shift and go to state 148

state 145

    (22) expression -> IF expression THEN expression ELSE expression FI .
    .               reduce using rule 22 (expression -> IF expression THEN expression ELSE expression FI .)
    @               reduce using rule 22 (expression -> IF expression THEN expression ELSE expression FI .)
    =               reduce using rule 22 (expression -> IF expression THEN expression ELSE expression FI .)
    LE              reduce using rule 22 (expression -> IF expression THEN expression ELSE expression FI .)
    <               reduce using rule 22 (expression -> IF expression THEN expression ELSE expression FI .)
    /               reduce using rule 22 (expression -> IF expression THEN expression ELSE expression FI .)
    *               reduce using rule 22 (expression -> IF expression THEN expression ELSE expression FI .)
    -               reduce using rule 22 (expression -> IF expression THEN expression ELSE expression FI .)
    +               reduce using rule 22 (expression -> IF expression THEN expression ELSE expression FI .)
    ;               reduce using rule 22 (expression -> IF expression THEN expression ELSE expression FI .)
    OF              reduce using rule 22 (expression -> IF expression THEN expression ELSE expression FI .)
    LOOP            reduce using rule 22 (expression -> IF expression THEN expression ELSE expression FI .)
    THEN            reduce using rule 22 (expression -> IF expression THEN expression ELSE expression FI .)
    )               reduce using rule 22 (expression -> IF expression THEN expression ELSE expression FI .)
    }               reduce using rule 22 (expression -> IF expression THEN expression ELSE expression FI .)
    ,               reduce using rule 22 (expression -> IF expression THEN expression ELSE expression FI .)
    POOL            reduce using rule 22 (expression -> IF expression THEN expression ELSE expression FI .)
    ELSE            reduce using rule 22 (expression -> IF expression THEN expression ELSE expression FI .)
    IN              reduce using rule 22 (expression -> IF expression THEN expression ELSE expression FI .)
    FI              reduce using rule 22 (expression -> IF expression THEN expression ELSE expression FI .)


state 146

    (32) expression -> expression @ TYPEID . OBJECTID ( parametros ) .
    .               reduce using rule 32 (expression -> expression @ TYPEID . OBJECTID ( parametros ) .)
    @               reduce using rule 32 (expression -> expression @ TYPEID . OBJECTID ( parametros ) .)
    =               reduce using rule 32 (expression -> expression @ TYPEID . OBJECTID ( parametros ) .)
    LE              reduce using rule 32 (expression -> expression @ TYPEID . OBJECTID ( parametros ) .)
    <               reduce using rule 32 (expression -> expression @ TYPEID . OBJECTID ( parametros ) .)
    /               reduce using rule 32 (expression -> expression @ TYPEID . OBJECTID ( parametros ) .)
    *               reduce using rule 32 (expression -> expression @ TYPEID . OBJECTID ( parametros ) .)
    -               reduce using rule 32 (expression -> expression @ TYPEID . OBJECTID ( parametros ) .)
    +               reduce using rule 32 (expression -> expression @ TYPEID . OBJECTID ( parametros ) .)
    ;               reduce using rule 32 (expression -> expression @ TYPEID . OBJECTID ( parametros ) .)
    OF              reduce using rule 32 (expression -> expression @ TYPEID . OBJECTID ( parametros ) .)
    LOOP            reduce using rule 32 (expression -> expression @ TYPEID . OBJECTID ( parametros ) .)
    THEN            reduce using rule 32 (expression -> expression @ TYPEID . OBJECTID ( parametros ) .)
    )               reduce using rule 32 (expression -> expression @ TYPEID . OBJECTID ( parametros ) .)
    }               reduce using rule 32 (expression -> expression @ TYPEID . OBJECTID ( parametros ) .)
    ,               reduce using rule 32 (expression -> expression @ TYPEID . OBJECTID ( parametros ) .)
    POOL            reduce using rule 32 (expression -> expression @ TYPEID . OBJECTID ( parametros ) .)
    ELSE            reduce using rule 32 (expression -> expression @ TYPEID . OBJECTID ( parametros ) .)
    IN              reduce using rule 32 (expression -> expression @ TYPEID . OBJECTID ( parametros ) .)
    FI              reduce using rule 32 (expression -> expression @ TYPEID . OBJECTID ( parametros ) .)


state 147

    (55) darrowlist -> darrowlist OBJECTID : TYPEID DARROW . expression ;
    (19) expression -> . CASE expression OF darrowlist ESAC
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LET let_list IN expression
    (22) expression -> . IF expression THEN expression ELSE expression FI
    (23) expression -> . { expressions }
    (24) expression -> . BOOL_CONST
    (25) expression -> . STR_CONST
    (26) expression -> . INT_CONST
    (27) expression -> . OBJECTID
    (28) expression -> . OBJECTID ( parametros )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( parametros )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . NEW TYPEID
    (36) expression -> . ISVOID expression
    (37) expression -> . NOT expression
    (38) expression -> . ( expression )
    (39) expression -> . expression = expression
    (40) expression -> . expression LE expression
    (41) expression -> . expression < expression
    (42) expression -> . expression / expression
    (43) expression -> . expression * expression
    (44) expression -> . expression - expression
    (45) expression -> . expression + expression
    (46) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 46
    WHILE           shift and go to state 47
    LET             shift and go to state 48
    IF              shift and go to state 49
    {               shift and go to state 50
    BOOL_CONST      shift and go to state 51
    STR_CONST       shift and go to state 52
    INT_CONST       shift and go to state 53
    OBJECTID        shift and go to state 44
    ~               shift and go to state 55
    NEW             shift and go to state 56
    ISVOID          shift and go to state 57
    NOT             shift and go to state 58
    (               shift and go to state 54

    expression                     shift and go to state 149

state 148

    (56) darrowlist -> OBJECTID : TYPEID DARROW expression . ;
    (30) expression -> expression . . OBJECTID ( parametros )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (39) expression -> expression . = expression
    (40) expression -> expression . LE expression
    (41) expression -> expression . < expression
    (42) expression -> expression . / expression
    (43) expression -> expression . * expression
    (44) expression -> expression . - expression
    (45) expression -> expression . + expression
    ;               shift and go to state 150
    .               shift and go to state 63
    @               shift and go to state 64
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 149

    (55) darrowlist -> darrowlist OBJECTID : TYPEID DARROW expression . ;
    (30) expression -> expression . . OBJECTID ( parametros )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (39) expression -> expression . = expression
    (40) expression -> expression . LE expression
    (41) expression -> expression . < expression
    (42) expression -> expression . / expression
    (43) expression -> expression . * expression
    (44) expression -> expression . - expression
    (45) expression -> expression . + expression
    ;               shift and go to state 151
    .               shift and go to state 63
    @               shift and go to state 64
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 150

    (56) darrowlist -> OBJECTID : TYPEID DARROW expression ; .
    ESAC            reduce using rule 56 (darrowlist -> OBJECTID : TYPEID DARROW expression ; .)
    OBJECTID        reduce using rule 56 (darrowlist -> OBJECTID : TYPEID DARROW expression ; .)


state 151

    (55) darrowlist -> darrowlist OBJECTID : TYPEID DARROW expression ; .
    ESAC            reduce using rule 55 (darrowlist -> darrowlist OBJECTID : TYPEID DARROW expression ; .)
    OBJECTID        reduce using rule 55 (darrowlist -> darrowlist OBJECTID : TYPEID DARROW expression ; .)


Conflicts:

shift/reduce conflict for . in state 81 resolved as shift
shift/reduce conflict for @ in state 81 resolved as shift
shift/reduce conflict for = in state 81 resolved as shift
shift/reduce conflict for LE in state 81 resolved as shift
shift/reduce conflict for < in state 81 resolved as shift
shift/reduce conflict for / in state 81 resolved as shift
shift/reduce conflict for * in state 81 resolved as shift
shift/reduce conflict for - in state 81 resolved as shift
shift/reduce conflict for + in state 81 resolved as shift
shift/reduce conflict for . in state 119 resolved as shift
shift/reduce conflict for @ in state 119 resolved as shift
shift/reduce conflict for = in state 119 resolved as shift
shift/reduce conflict for LE in state 119 resolved as shift
shift/reduce conflict for < in state 119 resolved as shift
shift/reduce conflict for / in state 119 resolved as shift
shift/reduce conflict for * in state 119 resolved as shift
shift/reduce conflict for - in state 119 resolved as shift
shift/reduce conflict for + in state 119 resolved as shift