Grammar:

Rule 0     S' -> program
Rule 1     program -> clases
Rule 2     clases -> clases clase ;
Rule 3     clases -> clase ;
Rule 4     clase -> CLASS TYPEID INHERITS TYPEID { error }
Rule 5     clase -> CLASS TYPEID INHERITS TYPEID { caracteristicas }
Rule 6     clase -> CLASS TYPEID { error }
Rule 7     clase -> CLASS TYPEID { caracteristicas }
Rule 8     clase -> CLASS TYPEID INHERITS TYPEID { }
Rule 9     clase -> CLASS TYPEID { }
Rule 10    caracteristicas -> caracteristicas caracteristica ;
Rule 11    caracteristicas -> caracteristica ;
Rule 12    caracteristica -> OBJECTID : TYPEID ASSIGN error
Rule 13    caracteristica -> OBJECTID : TYPEID ASSIGN expr
Rule 14    caracteristica -> OBJECTID : TYPEID
Rule 15    caracteristica -> OBJECTID ( error ) : TYPEID { expr }
Rule 16    caracteristica -> OBJECTID ( formales ) : TYPEID { error }
Rule 17    caracteristica -> OBJECTID ( formales ) : TYPEID { expr }
Rule 18    caracteristica -> OBJECTID ( ) : TYPEID { error }
Rule 19    caracteristica -> OBJECTID ( ) : TYPEID { expr }
Rule 20    formales -> formales , formal
Rule 21    formales -> formal
Rule 22    formal -> OBJECTID : TYPEID
Rule 23    expr -> error INT_CONST
Rule 24    expr -> STR_CONST
Rule 25    expr -> INT_CONST
Rule 26    expr -> OBJECTID
Rule 27    expr -> ( expr )
Rule 28    expr -> NOT error
Rule 29    expr -> NOT expr  [precedence=left, level=2]
Rule 30    expr -> expr = expr  [precedence=nonassoc, level=3]
Rule 31    expr -> expr LE expr  [precedence=nonassoc, level=3]
Rule 32    expr -> expr < expr  [precedence=nonassoc, level=3]
Rule 33    expr -> ~ expr  [precedence=left, level=7]
Rule 34    expr -> expr / expr  [precedence=left, level=5]
Rule 35    expr -> expr * expr  [precedence=left, level=5]
Rule 36    expr -> expr - expr  [precedence=left, level=4]
Rule 37    expr -> expr + expr  [precedence=left, level=4]
Rule 38    expr -> ISVOID error
Rule 39    expr -> ISVOID expr  [precedence=left, level=6]
Rule 40    expr -> error TYPEID
Rule 41    expr -> NEW TYPEID
Rule 42    expr -> CASE expr OF darrowlist ESAC
Rule 43    expr -> CASE expr OF error ESAC
Rule 44    expr -> CASE error OF darrowlist ESAC
Rule 45    expr -> LET OBJECTID : TYPEID expr IN error
Rule 46    expr -> LET OBJECTID : TYPEID error IN expr
Rule 47    expr -> LET OBJECTID : TYPEID tiposlet IN expr
Rule 48    expr -> LET OBJECTID : TYPEID ASSIGN expr IN expr
Rule 49    expr -> LET OBJECTID : TYPEID IN expr
Rule 50    expr -> { exprs }
Rule 51    expr -> WHILE expr LOOP error POOL
Rule 52    expr -> WHILE error LOOP expr POOL
Rule 53    expr -> WHILE error LOOP error POOL
Rule 54    expr -> WHILE expr LOOP expr POOL
Rule 55    expr -> IF expr THEN expr ELSE expr FI
Rule 56    expr -> IF error THEN expr ELSE expr FI
Rule 57    expr -> IF expr THEN error FI
Rule 58    expr -> OBJECTID ( parametros )
Rule 59    expr -> OBJECTID ( )
Rule 60    expr -> expr @ TYPEID . OBJECTID ( parametros )
Rule 61    expr -> expr . OBJECTID ( parametros )
Rule 62    expr -> expr @ TYPEID . OBJECTID ( )
Rule 63    expr -> expr . OBJECTID ( )
Rule 64    expr -> OBJECTID ASSIGN error
Rule 65    expr -> OBJECTID ASSIGN expr
Rule 66    parametros -> parametros , expr
Rule 67    parametros -> expr
Rule 68    exprs -> error ;
Rule 69    exprs -> exprs expr ;
Rule 70    exprs -> expr ;
Rule 71    tiposlet -> , tipolet
Rule 72    inicializaciones -> tiposlet , tipolet
Rule 73    tipolet -> OBJECTID : TYPEID ASSIGN error
Rule 74    tipolet -> OBJECTID : TYPEID ASSIGN expr
Rule 75    inicializacion -> OBJECTID : TYPEID
Rule 76    darrowlist -> darrowlist OBJECTID : TYPEID DARROW expr ;
Rule 77    darrowlist -> OBJECTID : TYPEID DARROW error ;
Rule 78    darrowlist -> OBJECTID : TYPEID DARROW expr ;

Unused terminals:

    BOOL_CONST
    ERROR

Terminals, with rules where they appear:

(                    : 15 16 17 18 19 27 58 59 60 61 62 63
)                    : 15 16 17 18 19 27 58 59 60 61 62 63
*                    : 35
+                    : 37
,                    : 20 66 71 72
-                    : 36
.                    : 60 61 62 63
/                    : 34
:                    : 12 13 14 15 16 17 18 19 22 45 46 47 48 49 73 74 75 76 77 78
;                    : 2 3 10 11 68 69 70 76 77 78
<                    : 32
=                    : 30
@                    : 60 62
ASSIGN               : 12 13 48 64 65 73 74
BOOL_CONST           : 
CASE                 : 42 43 44
CLASS                : 4 5 6 7 8 9
DARROW               : 76 77 78
ELSE                 : 55 56
ERROR                : 
ESAC                 : 42 43 44
FI                   : 55 56 57
IF                   : 55 56 57
IN                   : 45 46 47 48 49
INHERITS             : 4 5 8
INT_CONST            : 23 25
ISVOID               : 38 39
LE                   : 31
LET                  : 45 46 47 48 49
LOOP                 : 51 52 53 54
NEW                  : 41
NOT                  : 28 29
OBJECTID             : 12 13 14 15 16 17 18 19 22 26 45 46 47 48 49 58 59 60 61 62 63 64 65 73 74 75 76 77 78
OF                   : 42 43 44
POOL                 : 51 52 53 54
STR_CONST            : 24
THEN                 : 55 56 57
TYPEID               : 4 4 5 5 6 7 8 8 9 12 13 14 15 16 17 18 19 22 40 41 45 46 47 48 49 60 62 73 74 75 76 77 78
WHILE                : 51 52 53 54
error                : 4 6 12 15 16 18 23 28 38 40 43 44 45 46 51 52 53 53 56 57 64 68 73 77
{                    : 4 5 6 7 8 9 15 16 17 18 19 50
}                    : 4 5 6 7 8 9 15 16 17 18 19 50
~                    : 33

Nonterminals, with rules where they appear:

caracteristica       : 10 11
caracteristicas      : 5 7 10
clase                : 2 3
clases               : 1 2
darrowlist           : 42 44 76
expr                 : 13 15 17 19 27 29 30 30 31 31 32 32 33 34 34 35 35 36 36 37 37 39 42 43 45 46 47 48 48 49 51 52 54 54 55 55 55 56 56 57 60 61 62 63 65 66 67 69 70 74 76 78
exprs                : 50 69
formal               : 20 21
formales             : 16 17 20
inicializacion       : 
inicializaciones     : 
parametros           : 58 60 61 66
program              : 0
tipolet              : 71 72
tiposlet             : 47 72


state 0

    (0) S' -> . program
    (1) program -> . clases
    (2) clases -> . clases clase ;
    (3) clases -> . clase ;
    (4) clase -> . CLASS TYPEID INHERITS TYPEID { error }
    (5) clase -> . CLASS TYPEID INHERITS TYPEID { caracteristicas }
    (6) clase -> . CLASS TYPEID { error }
    (7) clase -> . CLASS TYPEID { caracteristicas }
    (8) clase -> . CLASS TYPEID INHERITS TYPEID { }
    (9) clase -> . CLASS TYPEID { }
    CLASS           shift and go to state 4

    program                        shift and go to state 1
    clases                         shift and go to state 2
    clase                          shift and go to state 3

state 1

    (0) S' -> program .


state 2

    (1) program -> clases .
    (2) clases -> clases . clase ;
    (4) clase -> . CLASS TYPEID INHERITS TYPEID { error }
    (5) clase -> . CLASS TYPEID INHERITS TYPEID { caracteristicas }
    (6) clase -> . CLASS TYPEID { error }
    (7) clase -> . CLASS TYPEID { caracteristicas }
    (8) clase -> . CLASS TYPEID INHERITS TYPEID { }
    (9) clase -> . CLASS TYPEID { }
    $end            reduce using rule 1 (program -> clases .)
    CLASS           shift and go to state 4

    clase                          shift and go to state 5

state 3

    (3) clases -> clase . ;
    ;               shift and go to state 6


state 4

    (4) clase -> CLASS . TYPEID INHERITS TYPEID { error }
    (5) clase -> CLASS . TYPEID INHERITS TYPEID { caracteristicas }
    (6) clase -> CLASS . TYPEID { error }
    (7) clase -> CLASS . TYPEID { caracteristicas }
    (8) clase -> CLASS . TYPEID INHERITS TYPEID { }
    (9) clase -> CLASS . TYPEID { }
    TYPEID          shift and go to state 7


state 5

    (2) clases -> clases clase . ;
    ;               shift and go to state 8


state 6

    (3) clases -> clase ; .
    CLASS           reduce using rule 3 (clases -> clase ; .)
    $end            reduce using rule 3 (clases -> clase ; .)


state 7

    (4) clase -> CLASS TYPEID . INHERITS TYPEID { error }
    (5) clase -> CLASS TYPEID . INHERITS TYPEID { caracteristicas }
    (6) clase -> CLASS TYPEID . { error }
    (7) clase -> CLASS TYPEID . { caracteristicas }
    (8) clase -> CLASS TYPEID . INHERITS TYPEID { }
    (9) clase -> CLASS TYPEID . { }
    INHERITS        shift and go to state 9
    {               shift and go to state 10


state 8

    (2) clases -> clases clase ; .
    CLASS           reduce using rule 2 (clases -> clases clase ; .)
    $end            reduce using rule 2 (clases -> clases clase ; .)


state 9

    (4) clase -> CLASS TYPEID INHERITS . TYPEID { error }
    (5) clase -> CLASS TYPEID INHERITS . TYPEID { caracteristicas }
    (8) clase -> CLASS TYPEID INHERITS . TYPEID { }
    TYPEID          shift and go to state 11


state 10

    (6) clase -> CLASS TYPEID { . error }
    (7) clase -> CLASS TYPEID { . caracteristicas }
    (9) clase -> CLASS TYPEID { . }
    (10) caracteristicas -> . caracteristicas caracteristica ;
    (11) caracteristicas -> . caracteristica ;
    (12) caracteristica -> . OBJECTID : TYPEID ASSIGN error
    (13) caracteristica -> . OBJECTID : TYPEID ASSIGN expr
    (14) caracteristica -> . OBJECTID : TYPEID
    (15) caracteristica -> . OBJECTID ( error ) : TYPEID { expr }
    (16) caracteristica -> . OBJECTID ( formales ) : TYPEID { error }
    (17) caracteristica -> . OBJECTID ( formales ) : TYPEID { expr }
    (18) caracteristica -> . OBJECTID ( ) : TYPEID { error }
    (19) caracteristica -> . OBJECTID ( ) : TYPEID { expr }
    error           shift and go to state 12
    }               shift and go to state 13
    OBJECTID        shift and go to state 16

    caracteristicas                shift and go to state 14
    caracteristica                 shift and go to state 15

state 11

    (4) clase -> CLASS TYPEID INHERITS TYPEID . { error }
    (5) clase -> CLASS TYPEID INHERITS TYPEID . { caracteristicas }
    (8) clase -> CLASS TYPEID INHERITS TYPEID . { }
    {               shift and go to state 17


state 12

    (6) clase -> CLASS TYPEID { error . }
    }               shift and go to state 18


state 13

    (9) clase -> CLASS TYPEID { } .
    ;               reduce using rule 9 (clase -> CLASS TYPEID { } .)


state 14

    (7) clase -> CLASS TYPEID { caracteristicas . }
    (10) caracteristicas -> caracteristicas . caracteristica ;
    (12) caracteristica -> . OBJECTID : TYPEID ASSIGN error
    (13) caracteristica -> . OBJECTID : TYPEID ASSIGN expr
    (14) caracteristica -> . OBJECTID : TYPEID
    (15) caracteristica -> . OBJECTID ( error ) : TYPEID { expr }
    (16) caracteristica -> . OBJECTID ( formales ) : TYPEID { error }
    (17) caracteristica -> . OBJECTID ( formales ) : TYPEID { expr }
    (18) caracteristica -> . OBJECTID ( ) : TYPEID { error }
    (19) caracteristica -> . OBJECTID ( ) : TYPEID { expr }
    }               shift and go to state 19
    OBJECTID        shift and go to state 16

    caracteristica                 shift and go to state 20

state 15

    (11) caracteristicas -> caracteristica . ;
    ;               shift and go to state 21


state 16

    (12) caracteristica -> OBJECTID . : TYPEID ASSIGN error
    (13) caracteristica -> OBJECTID . : TYPEID ASSIGN expr
    (14) caracteristica -> OBJECTID . : TYPEID
    (15) caracteristica -> OBJECTID . ( error ) : TYPEID { expr }
    (16) caracteristica -> OBJECTID . ( formales ) : TYPEID { error }
    (17) caracteristica -> OBJECTID . ( formales ) : TYPEID { expr }
    (18) caracteristica -> OBJECTID . ( ) : TYPEID { error }
    (19) caracteristica -> OBJECTID . ( ) : TYPEID { expr }
    :               shift and go to state 22
    (               shift and go to state 23


state 17

    (4) clase -> CLASS TYPEID INHERITS TYPEID { . error }
    (5) clase -> CLASS TYPEID INHERITS TYPEID { . caracteristicas }
    (8) clase -> CLASS TYPEID INHERITS TYPEID { . }
    (10) caracteristicas -> . caracteristicas caracteristica ;
    (11) caracteristicas -> . caracteristica ;
    (12) caracteristica -> . OBJECTID : TYPEID ASSIGN error
    (13) caracteristica -> . OBJECTID : TYPEID ASSIGN expr
    (14) caracteristica -> . OBJECTID : TYPEID
    (15) caracteristica -> . OBJECTID ( error ) : TYPEID { expr }
    (16) caracteristica -> . OBJECTID ( formales ) : TYPEID { error }
    (17) caracteristica -> . OBJECTID ( formales ) : TYPEID { expr }
    (18) caracteristica -> . OBJECTID ( ) : TYPEID { error }
    (19) caracteristica -> . OBJECTID ( ) : TYPEID { expr }
    error           shift and go to state 24
    }               shift and go to state 25
    OBJECTID        shift and go to state 16

    caracteristicas                shift and go to state 26
    caracteristica                 shift and go to state 15

state 18

    (6) clase -> CLASS TYPEID { error } .
    ;               reduce using rule 6 (clase -> CLASS TYPEID { error } .)


state 19

    (7) clase -> CLASS TYPEID { caracteristicas } .
    ;               reduce using rule 7 (clase -> CLASS TYPEID { caracteristicas } .)


state 20

    (10) caracteristicas -> caracteristicas caracteristica . ;
    ;               shift and go to state 27


state 21

    (11) caracteristicas -> caracteristica ; .
    }               reduce using rule 11 (caracteristicas -> caracteristica ; .)
    OBJECTID        reduce using rule 11 (caracteristicas -> caracteristica ; .)


state 22

    (12) caracteristica -> OBJECTID : . TYPEID ASSIGN error
    (13) caracteristica -> OBJECTID : . TYPEID ASSIGN expr
    (14) caracteristica -> OBJECTID : . TYPEID
    TYPEID          shift and go to state 28


state 23

    (15) caracteristica -> OBJECTID ( . error ) : TYPEID { expr }
    (16) caracteristica -> OBJECTID ( . formales ) : TYPEID { error }
    (17) caracteristica -> OBJECTID ( . formales ) : TYPEID { expr }
    (18) caracteristica -> OBJECTID ( . ) : TYPEID { error }
    (19) caracteristica -> OBJECTID ( . ) : TYPEID { expr }
    (20) formales -> . formales , formal
    (21) formales -> . formal
    (22) formal -> . OBJECTID : TYPEID
    error           shift and go to state 30
    )               shift and go to state 31
    OBJECTID        shift and go to state 29

    formales                       shift and go to state 32
    formal                         shift and go to state 33

state 24

    (4) clase -> CLASS TYPEID INHERITS TYPEID { error . }
    }               shift and go to state 34


state 25

    (8) clase -> CLASS TYPEID INHERITS TYPEID { } .
    ;               reduce using rule 8 (clase -> CLASS TYPEID INHERITS TYPEID { } .)


state 26

    (5) clase -> CLASS TYPEID INHERITS TYPEID { caracteristicas . }
    (10) caracteristicas -> caracteristicas . caracteristica ;
    (12) caracteristica -> . OBJECTID : TYPEID ASSIGN error
    (13) caracteristica -> . OBJECTID : TYPEID ASSIGN expr
    (14) caracteristica -> . OBJECTID : TYPEID
    (15) caracteristica -> . OBJECTID ( error ) : TYPEID { expr }
    (16) caracteristica -> . OBJECTID ( formales ) : TYPEID { error }
    (17) caracteristica -> . OBJECTID ( formales ) : TYPEID { expr }
    (18) caracteristica -> . OBJECTID ( ) : TYPEID { error }
    (19) caracteristica -> . OBJECTID ( ) : TYPEID { expr }
    }               shift and go to state 35
    OBJECTID        shift and go to state 16

    caracteristica                 shift and go to state 20

state 27

    (10) caracteristicas -> caracteristicas caracteristica ; .
    }               reduce using rule 10 (caracteristicas -> caracteristicas caracteristica ; .)
    OBJECTID        reduce using rule 10 (caracteristicas -> caracteristicas caracteristica ; .)


state 28

    (12) caracteristica -> OBJECTID : TYPEID . ASSIGN error
    (13) caracteristica -> OBJECTID : TYPEID . ASSIGN expr
    (14) caracteristica -> OBJECTID : TYPEID .
    ASSIGN          shift and go to state 36
    ;               reduce using rule 14 (caracteristica -> OBJECTID : TYPEID .)


state 29

    (22) formal -> OBJECTID . : TYPEID
    :               shift and go to state 37


state 30

    (15) caracteristica -> OBJECTID ( error . ) : TYPEID { expr }
    )               shift and go to state 38


state 31

    (18) caracteristica -> OBJECTID ( ) . : TYPEID { error }
    (19) caracteristica -> OBJECTID ( ) . : TYPEID { expr }
    :               shift and go to state 39


state 32

    (16) caracteristica -> OBJECTID ( formales . ) : TYPEID { error }
    (17) caracteristica -> OBJECTID ( formales . ) : TYPEID { expr }
    (20) formales -> formales . , formal
    )               shift and go to state 40
    ,               shift and go to state 41


state 33

    (21) formales -> formal .
    )               reduce using rule 21 (formales -> formal .)
    ,               reduce using rule 21 (formales -> formal .)


state 34

    (4) clase -> CLASS TYPEID INHERITS TYPEID { error } .
    ;               reduce using rule 4 (clase -> CLASS TYPEID INHERITS TYPEID { error } .)


state 35

    (5) clase -> CLASS TYPEID INHERITS TYPEID { caracteristicas } .
    ;               reduce using rule 5 (clase -> CLASS TYPEID INHERITS TYPEID { caracteristicas } .)


state 36

    (12) caracteristica -> OBJECTID : TYPEID ASSIGN . error
    (13) caracteristica -> OBJECTID : TYPEID ASSIGN . expr
    (23) expr -> . error INT_CONST
    (24) expr -> . STR_CONST
    (25) expr -> . INT_CONST
    (26) expr -> . OBJECTID
    (27) expr -> . ( expr )
    (28) expr -> . NOT error
    (29) expr -> . NOT expr
    (30) expr -> . expr = expr
    (31) expr -> . expr LE expr
    (32) expr -> . expr < expr
    (33) expr -> . ~ expr
    (34) expr -> . expr / expr
    (35) expr -> . expr * expr
    (36) expr -> . expr - expr
    (37) expr -> . expr + expr
    (38) expr -> . ISVOID error
    (39) expr -> . ISVOID expr
    (40) expr -> . error TYPEID
    (41) expr -> . NEW TYPEID
    (42) expr -> . CASE expr OF darrowlist ESAC
    (43) expr -> . CASE expr OF error ESAC
    (44) expr -> . CASE error OF darrowlist ESAC
    (45) expr -> . LET OBJECTID : TYPEID expr IN error
    (46) expr -> . LET OBJECTID : TYPEID error IN expr
    (47) expr -> . LET OBJECTID : TYPEID tiposlet IN expr
    (48) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (49) expr -> . LET OBJECTID : TYPEID IN expr
    (50) expr -> . { exprs }
    (51) expr -> . WHILE expr LOOP error POOL
    (52) expr -> . WHILE error LOOP expr POOL
    (53) expr -> . WHILE error LOOP error POOL
    (54) expr -> . WHILE expr LOOP expr POOL
    (55) expr -> . IF expr THEN expr ELSE expr FI
    (56) expr -> . IF error THEN expr ELSE expr FI
    (57) expr -> . IF expr THEN error FI
    (58) expr -> . OBJECTID ( parametros )
    (59) expr -> . OBJECTID ( )
    (60) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (61) expr -> . expr . OBJECTID ( parametros )
    (62) expr -> . expr @ TYPEID . OBJECTID ( )
    (63) expr -> . expr . OBJECTID ( )
    (64) expr -> . OBJECTID ASSIGN error
    (65) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 43
    STR_CONST       shift and go to state 46
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 42
    (               shift and go to state 47
    NOT             shift and go to state 48
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NEW             shift and go to state 51
    CASE            shift and go to state 52
    LET             shift and go to state 53
    {               shift and go to state 54
    WHILE           shift and go to state 55
    IF              shift and go to state 56

    expr                           shift and go to state 44

state 37

    (22) formal -> OBJECTID : . TYPEID
    TYPEID          shift and go to state 57


state 38

    (15) caracteristica -> OBJECTID ( error ) . : TYPEID { expr }
    :               shift and go to state 58


state 39

    (18) caracteristica -> OBJECTID ( ) : . TYPEID { error }
    (19) caracteristica -> OBJECTID ( ) : . TYPEID { expr }
    TYPEID          shift and go to state 59


state 40

    (16) caracteristica -> OBJECTID ( formales ) . : TYPEID { error }
    (17) caracteristica -> OBJECTID ( formales ) . : TYPEID { expr }
    :               shift and go to state 60


state 41

    (20) formales -> formales , . formal
    (22) formal -> . OBJECTID : TYPEID
    OBJECTID        shift and go to state 29

    formal                         shift and go to state 61

state 42

    (26) expr -> OBJECTID .
    (58) expr -> OBJECTID . ( parametros )
    (59) expr -> OBJECTID . ( )
    (64) expr -> OBJECTID . ASSIGN error
    (65) expr -> OBJECTID . ASSIGN expr
    =               reduce using rule 26 (expr -> OBJECTID .)
    LE              reduce using rule 26 (expr -> OBJECTID .)
    <               reduce using rule 26 (expr -> OBJECTID .)
    /               reduce using rule 26 (expr -> OBJECTID .)
    *               reduce using rule 26 (expr -> OBJECTID .)
    -               reduce using rule 26 (expr -> OBJECTID .)
    +               reduce using rule 26 (expr -> OBJECTID .)
    @               reduce using rule 26 (expr -> OBJECTID .)
    .               reduce using rule 26 (expr -> OBJECTID .)
    ;               reduce using rule 26 (expr -> OBJECTID .)
    )               reduce using rule 26 (expr -> OBJECTID .)
    OF              reduce using rule 26 (expr -> OBJECTID .)
    LOOP            reduce using rule 26 (expr -> OBJECTID .)
    THEN            reduce using rule 26 (expr -> OBJECTID .)
    ,               reduce using rule 26 (expr -> OBJECTID .)
    }               reduce using rule 26 (expr -> OBJECTID .)
    POOL            reduce using rule 26 (expr -> OBJECTID .)
    ELSE            reduce using rule 26 (expr -> OBJECTID .)
    IN              reduce using rule 26 (expr -> OBJECTID .)
    FI              reduce using rule 26 (expr -> OBJECTID .)
    (               shift and go to state 62
    ASSIGN          shift and go to state 63


state 43

    (12) caracteristica -> OBJECTID : TYPEID ASSIGN error .
    (23) expr -> error . INT_CONST
    (40) expr -> error . TYPEID
    ;               reduce using rule 12 (caracteristica -> OBJECTID : TYPEID ASSIGN error .)
    INT_CONST       shift and go to state 65
    TYPEID          shift and go to state 64


state 44

    (13) caracteristica -> OBJECTID : TYPEID ASSIGN expr .
    (30) expr -> expr . = expr
    (31) expr -> expr . LE expr
    (32) expr -> expr . < expr
    (34) expr -> expr . / expr
    (35) expr -> expr . * expr
    (36) expr -> expr . - expr
    (37) expr -> expr . + expr
    (60) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (61) expr -> expr . . OBJECTID ( parametros )
    (62) expr -> expr . @ TYPEID . OBJECTID ( )
    (63) expr -> expr . . OBJECTID ( )
    ;               reduce using rule 13 (caracteristica -> OBJECTID : TYPEID ASSIGN expr .)
    =               shift and go to state 66
    LE              shift and go to state 67
    <               shift and go to state 68
    /               shift and go to state 69
    *               shift and go to state 70
    -               shift and go to state 71
    +               shift and go to state 72
    @               shift and go to state 73
    .               shift and go to state 74


state 45

    (25) expr -> INT_CONST .
    =               reduce using rule 25 (expr -> INT_CONST .)
    LE              reduce using rule 25 (expr -> INT_CONST .)
    <               reduce using rule 25 (expr -> INT_CONST .)
    /               reduce using rule 25 (expr -> INT_CONST .)
    *               reduce using rule 25 (expr -> INT_CONST .)
    -               reduce using rule 25 (expr -> INT_CONST .)
    +               reduce using rule 25 (expr -> INT_CONST .)
    @               reduce using rule 25 (expr -> INT_CONST .)
    .               reduce using rule 25 (expr -> INT_CONST .)
    ;               reduce using rule 25 (expr -> INT_CONST .)
    )               reduce using rule 25 (expr -> INT_CONST .)
    OF              reduce using rule 25 (expr -> INT_CONST .)
    LOOP            reduce using rule 25 (expr -> INT_CONST .)
    THEN            reduce using rule 25 (expr -> INT_CONST .)
    ,               reduce using rule 25 (expr -> INT_CONST .)
    }               reduce using rule 25 (expr -> INT_CONST .)
    POOL            reduce using rule 25 (expr -> INT_CONST .)
    ELSE            reduce using rule 25 (expr -> INT_CONST .)
    IN              reduce using rule 25 (expr -> INT_CONST .)
    FI              reduce using rule 25 (expr -> INT_CONST .)


state 46

    (24) expr -> STR_CONST .
    =               reduce using rule 24 (expr -> STR_CONST .)
    LE              reduce using rule 24 (expr -> STR_CONST .)
    <               reduce using rule 24 (expr -> STR_CONST .)
    /               reduce using rule 24 (expr -> STR_CONST .)
    *               reduce using rule 24 (expr -> STR_CONST .)
    -               reduce using rule 24 (expr -> STR_CONST .)
    +               reduce using rule 24 (expr -> STR_CONST .)
    @               reduce using rule 24 (expr -> STR_CONST .)
    .               reduce using rule 24 (expr -> STR_CONST .)
    ;               reduce using rule 24 (expr -> STR_CONST .)
    )               reduce using rule 24 (expr -> STR_CONST .)
    OF              reduce using rule 24 (expr -> STR_CONST .)
    LOOP            reduce using rule 24 (expr -> STR_CONST .)
    THEN            reduce using rule 24 (expr -> STR_CONST .)
    ,               reduce using rule 24 (expr -> STR_CONST .)
    }               reduce using rule 24 (expr -> STR_CONST .)
    POOL            reduce using rule 24 (expr -> STR_CONST .)
    ELSE            reduce using rule 24 (expr -> STR_CONST .)
    IN              reduce using rule 24 (expr -> STR_CONST .)
    FI              reduce using rule 24 (expr -> STR_CONST .)


state 47

    (27) expr -> ( . expr )
    (23) expr -> . error INT_CONST
    (24) expr -> . STR_CONST
    (25) expr -> . INT_CONST
    (26) expr -> . OBJECTID
    (27) expr -> . ( expr )
    (28) expr -> . NOT error
    (29) expr -> . NOT expr
    (30) expr -> . expr = expr
    (31) expr -> . expr LE expr
    (32) expr -> . expr < expr
    (33) expr -> . ~ expr
    (34) expr -> . expr / expr
    (35) expr -> . expr * expr
    (36) expr -> . expr - expr
    (37) expr -> . expr + expr
    (38) expr -> . ISVOID error
    (39) expr -> . ISVOID expr
    (40) expr -> . error TYPEID
    (41) expr -> . NEW TYPEID
    (42) expr -> . CASE expr OF darrowlist ESAC
    (43) expr -> . CASE expr OF error ESAC
    (44) expr -> . CASE error OF darrowlist ESAC
    (45) expr -> . LET OBJECTID : TYPEID expr IN error
    (46) expr -> . LET OBJECTID : TYPEID error IN expr
    (47) expr -> . LET OBJECTID : TYPEID tiposlet IN expr
    (48) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (49) expr -> . LET OBJECTID : TYPEID IN expr
    (50) expr -> . { exprs }
    (51) expr -> . WHILE expr LOOP error POOL
    (52) expr -> . WHILE error LOOP expr POOL
    (53) expr -> . WHILE error LOOP error POOL
    (54) expr -> . WHILE expr LOOP expr POOL
    (55) expr -> . IF expr THEN expr ELSE expr FI
    (56) expr -> . IF error THEN expr ELSE expr FI
    (57) expr -> . IF expr THEN error FI
    (58) expr -> . OBJECTID ( parametros )
    (59) expr -> . OBJECTID ( )
    (60) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (61) expr -> . expr . OBJECTID ( parametros )
    (62) expr -> . expr @ TYPEID . OBJECTID ( )
    (63) expr -> . expr . OBJECTID ( )
    (64) expr -> . OBJECTID ASSIGN error
    (65) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 76
    STR_CONST       shift and go to state 46
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 42
    (               shift and go to state 47
    NOT             shift and go to state 48
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NEW             shift and go to state 51
    CASE            shift and go to state 52
    LET             shift and go to state 53
    {               shift and go to state 54
    WHILE           shift and go to state 55
    IF              shift and go to state 56

    expr                           shift and go to state 75

state 48

    (28) expr -> NOT . error
    (29) expr -> NOT . expr
    (23) expr -> . error INT_CONST
    (24) expr -> . STR_CONST
    (25) expr -> . INT_CONST
    (26) expr -> . OBJECTID
    (27) expr -> . ( expr )
    (28) expr -> . NOT error
    (29) expr -> . NOT expr
    (30) expr -> . expr = expr
    (31) expr -> . expr LE expr
    (32) expr -> . expr < expr
    (33) expr -> . ~ expr
    (34) expr -> . expr / expr
    (35) expr -> . expr * expr
    (36) expr -> . expr - expr
    (37) expr -> . expr + expr
    (38) expr -> . ISVOID error
    (39) expr -> . ISVOID expr
    (40) expr -> . error TYPEID
    (41) expr -> . NEW TYPEID
    (42) expr -> . CASE expr OF darrowlist ESAC
    (43) expr -> . CASE expr OF error ESAC
    (44) expr -> . CASE error OF darrowlist ESAC
    (45) expr -> . LET OBJECTID : TYPEID expr IN error
    (46) expr -> . LET OBJECTID : TYPEID error IN expr
    (47) expr -> . LET OBJECTID : TYPEID tiposlet IN expr
    (48) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (49) expr -> . LET OBJECTID : TYPEID IN expr
    (50) expr -> . { exprs }
    (51) expr -> . WHILE expr LOOP error POOL
    (52) expr -> . WHILE error LOOP expr POOL
    (53) expr -> . WHILE error LOOP error POOL
    (54) expr -> . WHILE expr LOOP expr POOL
    (55) expr -> . IF expr THEN expr ELSE expr FI
    (56) expr -> . IF error THEN expr ELSE expr FI
    (57) expr -> . IF expr THEN error FI
    (58) expr -> . OBJECTID ( parametros )
    (59) expr -> . OBJECTID ( )
    (60) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (61) expr -> . expr . OBJECTID ( parametros )
    (62) expr -> . expr @ TYPEID . OBJECTID ( )
    (63) expr -> . expr . OBJECTID ( )
    (64) expr -> . OBJECTID ASSIGN error
    (65) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 77
    STR_CONST       shift and go to state 46
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 42
    (               shift and go to state 47
    NOT             shift and go to state 48
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NEW             shift and go to state 51
    CASE            shift and go to state 52
    LET             shift and go to state 53
    {               shift and go to state 54
    WHILE           shift and go to state 55
    IF              shift and go to state 56

    expr                           shift and go to state 78

state 49

    (33) expr -> ~ . expr
    (23) expr -> . error INT_CONST
    (24) expr -> . STR_CONST
    (25) expr -> . INT_CONST
    (26) expr -> . OBJECTID
    (27) expr -> . ( expr )
    (28) expr -> . NOT error
    (29) expr -> . NOT expr
    (30) expr -> . expr = expr
    (31) expr -> . expr LE expr
    (32) expr -> . expr < expr
    (33) expr -> . ~ expr
    (34) expr -> . expr / expr
    (35) expr -> . expr * expr
    (36) expr -> . expr - expr
    (37) expr -> . expr + expr
    (38) expr -> . ISVOID error
    (39) expr -> . ISVOID expr
    (40) expr -> . error TYPEID
    (41) expr -> . NEW TYPEID
    (42) expr -> . CASE expr OF darrowlist ESAC
    (43) expr -> . CASE expr OF error ESAC
    (44) expr -> . CASE error OF darrowlist ESAC
    (45) expr -> . LET OBJECTID : TYPEID expr IN error
    (46) expr -> . LET OBJECTID : TYPEID error IN expr
    (47) expr -> . LET OBJECTID : TYPEID tiposlet IN expr
    (48) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (49) expr -> . LET OBJECTID : TYPEID IN expr
    (50) expr -> . { exprs }
    (51) expr -> . WHILE expr LOOP error POOL
    (52) expr -> . WHILE error LOOP expr POOL
    (53) expr -> . WHILE error LOOP error POOL
    (54) expr -> . WHILE expr LOOP expr POOL
    (55) expr -> . IF expr THEN expr ELSE expr FI
    (56) expr -> . IF error THEN expr ELSE expr FI
    (57) expr -> . IF expr THEN error FI
    (58) expr -> . OBJECTID ( parametros )
    (59) expr -> . OBJECTID ( )
    (60) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (61) expr -> . expr . OBJECTID ( parametros )
    (62) expr -> . expr @ TYPEID . OBJECTID ( )
    (63) expr -> . expr . OBJECTID ( )
    (64) expr -> . OBJECTID ASSIGN error
    (65) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 76
    STR_CONST       shift and go to state 46
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 42
    (               shift and go to state 47
    NOT             shift and go to state 48
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NEW             shift and go to state 51
    CASE            shift and go to state 52
    LET             shift and go to state 53
    {               shift and go to state 54
    WHILE           shift and go to state 55
    IF              shift and go to state 56

    expr                           shift and go to state 79

state 50

    (38) expr -> ISVOID . error
    (39) expr -> ISVOID . expr
    (23) expr -> . error INT_CONST
    (24) expr -> . STR_CONST
    (25) expr -> . INT_CONST
    (26) expr -> . OBJECTID
    (27) expr -> . ( expr )
    (28) expr -> . NOT error
    (29) expr -> . NOT expr
    (30) expr -> . expr = expr
    (31) expr -> . expr LE expr
    (32) expr -> . expr < expr
    (33) expr -> . ~ expr
    (34) expr -> . expr / expr
    (35) expr -> . expr * expr
    (36) expr -> . expr - expr
    (37) expr -> . expr + expr
    (38) expr -> . ISVOID error
    (39) expr -> . ISVOID expr
    (40) expr -> . error TYPEID
    (41) expr -> . NEW TYPEID
    (42) expr -> . CASE expr OF darrowlist ESAC
    (43) expr -> . CASE expr OF error ESAC
    (44) expr -> . CASE error OF darrowlist ESAC
    (45) expr -> . LET OBJECTID : TYPEID expr IN error
    (46) expr -> . LET OBJECTID : TYPEID error IN expr
    (47) expr -> . LET OBJECTID : TYPEID tiposlet IN expr
    (48) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (49) expr -> . LET OBJECTID : TYPEID IN expr
    (50) expr -> . { exprs }
    (51) expr -> . WHILE expr LOOP error POOL
    (52) expr -> . WHILE error LOOP expr POOL
    (53) expr -> . WHILE error LOOP error POOL
    (54) expr -> . WHILE expr LOOP expr POOL
    (55) expr -> . IF expr THEN expr ELSE expr FI
    (56) expr -> . IF error THEN expr ELSE expr FI
    (57) expr -> . IF expr THEN error FI
    (58) expr -> . OBJECTID ( parametros )
    (59) expr -> . OBJECTID ( )
    (60) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (61) expr -> . expr . OBJECTID ( parametros )
    (62) expr -> . expr @ TYPEID . OBJECTID ( )
    (63) expr -> . expr . OBJECTID ( )
    (64) expr -> . OBJECTID ASSIGN error
    (65) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 80
    STR_CONST       shift and go to state 46
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 42
    (               shift and go to state 47
    NOT             shift and go to state 48
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NEW             shift and go to state 51
    CASE            shift and go to state 52
    LET             shift and go to state 53
    {               shift and go to state 54
    WHILE           shift and go to state 55
    IF              shift and go to state 56

    expr                           shift and go to state 81

state 51

    (41) expr -> NEW . TYPEID
    TYPEID          shift and go to state 82


state 52

    (42) expr -> CASE . expr OF darrowlist ESAC
    (43) expr -> CASE . expr OF error ESAC
    (44) expr -> CASE . error OF darrowlist ESAC
    (23) expr -> . error INT_CONST
    (24) expr -> . STR_CONST
    (25) expr -> . INT_CONST
    (26) expr -> . OBJECTID
    (27) expr -> . ( expr )
    (28) expr -> . NOT error
    (29) expr -> . NOT expr
    (30) expr -> . expr = expr
    (31) expr -> . expr LE expr
    (32) expr -> . expr < expr
    (33) expr -> . ~ expr
    (34) expr -> . expr / expr
    (35) expr -> . expr * expr
    (36) expr -> . expr - expr
    (37) expr -> . expr + expr
    (38) expr -> . ISVOID error
    (39) expr -> . ISVOID expr
    (40) expr -> . error TYPEID
    (41) expr -> . NEW TYPEID
    (42) expr -> . CASE expr OF darrowlist ESAC
    (43) expr -> . CASE expr OF error ESAC
    (44) expr -> . CASE error OF darrowlist ESAC
    (45) expr -> . LET OBJECTID : TYPEID expr IN error
    (46) expr -> . LET OBJECTID : TYPEID error IN expr
    (47) expr -> . LET OBJECTID : TYPEID tiposlet IN expr
    (48) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (49) expr -> . LET OBJECTID : TYPEID IN expr
    (50) expr -> . { exprs }
    (51) expr -> . WHILE expr LOOP error POOL
    (52) expr -> . WHILE error LOOP expr POOL
    (53) expr -> . WHILE error LOOP error POOL
    (54) expr -> . WHILE expr LOOP expr POOL
    (55) expr -> . IF expr THEN expr ELSE expr FI
    (56) expr -> . IF error THEN expr ELSE expr FI
    (57) expr -> . IF expr THEN error FI
    (58) expr -> . OBJECTID ( parametros )
    (59) expr -> . OBJECTID ( )
    (60) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (61) expr -> . expr . OBJECTID ( parametros )
    (62) expr -> . expr @ TYPEID . OBJECTID ( )
    (63) expr -> . expr . OBJECTID ( )
    (64) expr -> . OBJECTID ASSIGN error
    (65) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 84
    STR_CONST       shift and go to state 46
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 42
    (               shift and go to state 47
    NOT             shift and go to state 48
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NEW             shift and go to state 51
    CASE            shift and go to state 52
    LET             shift and go to state 53
    {               shift and go to state 54
    WHILE           shift and go to state 55
    IF              shift and go to state 56

    expr                           shift and go to state 83

state 53

    (45) expr -> LET . OBJECTID : TYPEID expr IN error
    (46) expr -> LET . OBJECTID : TYPEID error IN expr
    (47) expr -> LET . OBJECTID : TYPEID tiposlet IN expr
    (48) expr -> LET . OBJECTID : TYPEID ASSIGN expr IN expr
    (49) expr -> LET . OBJECTID : TYPEID IN expr
    OBJECTID        shift and go to state 85


state 54

    (50) expr -> { . exprs }
    (68) exprs -> . error ;
    (69) exprs -> . exprs expr ;
    (70) exprs -> . expr ;
    (23) expr -> . error INT_CONST
    (24) expr -> . STR_CONST
    (25) expr -> . INT_CONST
    (26) expr -> . OBJECTID
    (27) expr -> . ( expr )
    (28) expr -> . NOT error
    (29) expr -> . NOT expr
    (30) expr -> . expr = expr
    (31) expr -> . expr LE expr
    (32) expr -> . expr < expr
    (33) expr -> . ~ expr
    (34) expr -> . expr / expr
    (35) expr -> . expr * expr
    (36) expr -> . expr - expr
    (37) expr -> . expr + expr
    (38) expr -> . ISVOID error
    (39) expr -> . ISVOID expr
    (40) expr -> . error TYPEID
    (41) expr -> . NEW TYPEID
    (42) expr -> . CASE expr OF darrowlist ESAC
    (43) expr -> . CASE expr OF error ESAC
    (44) expr -> . CASE error OF darrowlist ESAC
    (45) expr -> . LET OBJECTID : TYPEID expr IN error
    (46) expr -> . LET OBJECTID : TYPEID error IN expr
    (47) expr -> . LET OBJECTID : TYPEID tiposlet IN expr
    (48) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (49) expr -> . LET OBJECTID : TYPEID IN expr
    (50) expr -> . { exprs }
    (51) expr -> . WHILE expr LOOP error POOL
    (52) expr -> . WHILE error LOOP expr POOL
    (53) expr -> . WHILE error LOOP error POOL
    (54) expr -> . WHILE expr LOOP expr POOL
    (55) expr -> . IF expr THEN expr ELSE expr FI
    (56) expr -> . IF error THEN expr ELSE expr FI
    (57) expr -> . IF expr THEN error FI
    (58) expr -> . OBJECTID ( parametros )
    (59) expr -> . OBJECTID ( )
    (60) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (61) expr -> . expr . OBJECTID ( parametros )
    (62) expr -> . expr @ TYPEID . OBJECTID ( )
    (63) expr -> . expr . OBJECTID ( )
    (64) expr -> . OBJECTID ASSIGN error
    (65) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 87
    STR_CONST       shift and go to state 46
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 42
    (               shift and go to state 47
    NOT             shift and go to state 48
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NEW             shift and go to state 51
    CASE            shift and go to state 52
    LET             shift and go to state 53
    {               shift and go to state 54
    WHILE           shift and go to state 55
    IF              shift and go to state 56

    exprs                          shift and go to state 86
    expr                           shift and go to state 88

state 55

    (51) expr -> WHILE . expr LOOP error POOL
    (52) expr -> WHILE . error LOOP expr POOL
    (53) expr -> WHILE . error LOOP error POOL
    (54) expr -> WHILE . expr LOOP expr POOL
    (23) expr -> . error INT_CONST
    (24) expr -> . STR_CONST
    (25) expr -> . INT_CONST
    (26) expr -> . OBJECTID
    (27) expr -> . ( expr )
    (28) expr -> . NOT error
    (29) expr -> . NOT expr
    (30) expr -> . expr = expr
    (31) expr -> . expr LE expr
    (32) expr -> . expr < expr
    (33) expr -> . ~ expr
    (34) expr -> . expr / expr
    (35) expr -> . expr * expr
    (36) expr -> . expr - expr
    (37) expr -> . expr + expr
    (38) expr -> . ISVOID error
    (39) expr -> . ISVOID expr
    (40) expr -> . error TYPEID
    (41) expr -> . NEW TYPEID
    (42) expr -> . CASE expr OF darrowlist ESAC
    (43) expr -> . CASE expr OF error ESAC
    (44) expr -> . CASE error OF darrowlist ESAC
    (45) expr -> . LET OBJECTID : TYPEID expr IN error
    (46) expr -> . LET OBJECTID : TYPEID error IN expr
    (47) expr -> . LET OBJECTID : TYPEID tiposlet IN expr
    (48) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (49) expr -> . LET OBJECTID : TYPEID IN expr
    (50) expr -> . { exprs }
    (51) expr -> . WHILE expr LOOP error POOL
    (52) expr -> . WHILE error LOOP expr POOL
    (53) expr -> . WHILE error LOOP error POOL
    (54) expr -> . WHILE expr LOOP expr POOL
    (55) expr -> . IF expr THEN expr ELSE expr FI
    (56) expr -> . IF error THEN expr ELSE expr FI
    (57) expr -> . IF expr THEN error FI
    (58) expr -> . OBJECTID ( parametros )
    (59) expr -> . OBJECTID ( )
    (60) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (61) expr -> . expr . OBJECTID ( parametros )
    (62) expr -> . expr @ TYPEID . OBJECTID ( )
    (63) expr -> . expr . OBJECTID ( )
    (64) expr -> . OBJECTID ASSIGN error
    (65) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 90
    STR_CONST       shift and go to state 46
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 42
    (               shift and go to state 47
    NOT             shift and go to state 48
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NEW             shift and go to state 51
    CASE            shift and go to state 52
    LET             shift and go to state 53
    {               shift and go to state 54
    WHILE           shift and go to state 55
    IF              shift and go to state 56

    expr                           shift and go to state 89

state 56

    (55) expr -> IF . expr THEN expr ELSE expr FI
    (56) expr -> IF . error THEN expr ELSE expr FI
    (57) expr -> IF . expr THEN error FI
    (23) expr -> . error INT_CONST
    (24) expr -> . STR_CONST
    (25) expr -> . INT_CONST
    (26) expr -> . OBJECTID
    (27) expr -> . ( expr )
    (28) expr -> . NOT error
    (29) expr -> . NOT expr
    (30) expr -> . expr = expr
    (31) expr -> . expr LE expr
    (32) expr -> . expr < expr
    (33) expr -> . ~ expr
    (34) expr -> . expr / expr
    (35) expr -> . expr * expr
    (36) expr -> . expr - expr
    (37) expr -> . expr + expr
    (38) expr -> . ISVOID error
    (39) expr -> . ISVOID expr
    (40) expr -> . error TYPEID
    (41) expr -> . NEW TYPEID
    (42) expr -> . CASE expr OF darrowlist ESAC
    (43) expr -> . CASE expr OF error ESAC
    (44) expr -> . CASE error OF darrowlist ESAC
    (45) expr -> . LET OBJECTID : TYPEID expr IN error
    (46) expr -> . LET OBJECTID : TYPEID error IN expr
    (47) expr -> . LET OBJECTID : TYPEID tiposlet IN expr
    (48) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (49) expr -> . LET OBJECTID : TYPEID IN expr
    (50) expr -> . { exprs }
    (51) expr -> . WHILE expr LOOP error POOL
    (52) expr -> . WHILE error LOOP expr POOL
    (53) expr -> . WHILE error LOOP error POOL
    (54) expr -> . WHILE expr LOOP expr POOL
    (55) expr -> . IF expr THEN expr ELSE expr FI
    (56) expr -> . IF error THEN expr ELSE expr FI
    (57) expr -> . IF expr THEN error FI
    (58) expr -> . OBJECTID ( parametros )
    (59) expr -> . OBJECTID ( )
    (60) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (61) expr -> . expr . OBJECTID ( parametros )
    (62) expr -> . expr @ TYPEID . OBJECTID ( )
    (63) expr -> . expr . OBJECTID ( )
    (64) expr -> . OBJECTID ASSIGN error
    (65) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 92
    STR_CONST       shift and go to state 46
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 42
    (               shift and go to state 47
    NOT             shift and go to state 48
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NEW             shift and go to state 51
    CASE            shift and go to state 52
    LET             shift and go to state 53
    {               shift and go to state 54
    WHILE           shift and go to state 55
    IF              shift and go to state 56

    expr                           shift and go to state 91

state 57

    (22) formal -> OBJECTID : TYPEID .
    )               reduce using rule 22 (formal -> OBJECTID : TYPEID .)
    ,               reduce using rule 22 (formal -> OBJECTID : TYPEID .)


state 58

    (15) caracteristica -> OBJECTID ( error ) : . TYPEID { expr }
    TYPEID          shift and go to state 93


state 59

    (18) caracteristica -> OBJECTID ( ) : TYPEID . { error }
    (19) caracteristica -> OBJECTID ( ) : TYPEID . { expr }
    {               shift and go to state 94


state 60

    (16) caracteristica -> OBJECTID ( formales ) : . TYPEID { error }
    (17) caracteristica -> OBJECTID ( formales ) : . TYPEID { expr }
    TYPEID          shift and go to state 95


state 61

    (20) formales -> formales , formal .
    )               reduce using rule 20 (formales -> formales , formal .)
    ,               reduce using rule 20 (formales -> formales , formal .)


state 62

    (58) expr -> OBJECTID ( . parametros )
    (59) expr -> OBJECTID ( . )
    (66) parametros -> . parametros , expr
    (67) parametros -> . expr
    (23) expr -> . error INT_CONST
    (24) expr -> . STR_CONST
    (25) expr -> . INT_CONST
    (26) expr -> . OBJECTID
    (27) expr -> . ( expr )
    (28) expr -> . NOT error
    (29) expr -> . NOT expr
    (30) expr -> . expr = expr
    (31) expr -> . expr LE expr
    (32) expr -> . expr < expr
    (33) expr -> . ~ expr
    (34) expr -> . expr / expr
    (35) expr -> . expr * expr
    (36) expr -> . expr - expr
    (37) expr -> . expr + expr
    (38) expr -> . ISVOID error
    (39) expr -> . ISVOID expr
    (40) expr -> . error TYPEID
    (41) expr -> . NEW TYPEID
    (42) expr -> . CASE expr OF darrowlist ESAC
    (43) expr -> . CASE expr OF error ESAC
    (44) expr -> . CASE error OF darrowlist ESAC
    (45) expr -> . LET OBJECTID : TYPEID expr IN error
    (46) expr -> . LET OBJECTID : TYPEID error IN expr
    (47) expr -> . LET OBJECTID : TYPEID tiposlet IN expr
    (48) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (49) expr -> . LET OBJECTID : TYPEID IN expr
    (50) expr -> . { exprs }
    (51) expr -> . WHILE expr LOOP error POOL
    (52) expr -> . WHILE error LOOP expr POOL
    (53) expr -> . WHILE error LOOP error POOL
    (54) expr -> . WHILE expr LOOP expr POOL
    (55) expr -> . IF expr THEN expr ELSE expr FI
    (56) expr -> . IF error THEN expr ELSE expr FI
    (57) expr -> . IF expr THEN error FI
    (58) expr -> . OBJECTID ( parametros )
    (59) expr -> . OBJECTID ( )
    (60) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (61) expr -> . expr . OBJECTID ( parametros )
    (62) expr -> . expr @ TYPEID . OBJECTID ( )
    (63) expr -> . expr . OBJECTID ( )
    (64) expr -> . OBJECTID ASSIGN error
    (65) expr -> . OBJECTID ASSIGN expr
    )               shift and go to state 97
    error           shift and go to state 76
    STR_CONST       shift and go to state 46
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 42
    (               shift and go to state 47
    NOT             shift and go to state 48
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NEW             shift and go to state 51
    CASE            shift and go to state 52
    LET             shift and go to state 53
    {               shift and go to state 54
    WHILE           shift and go to state 55
    IF              shift and go to state 56

    parametros                     shift and go to state 96
    expr                           shift and go to state 98

state 63

    (64) expr -> OBJECTID ASSIGN . error
    (65) expr -> OBJECTID ASSIGN . expr
    (23) expr -> . error INT_CONST
    (24) expr -> . STR_CONST
    (25) expr -> . INT_CONST
    (26) expr -> . OBJECTID
    (27) expr -> . ( expr )
    (28) expr -> . NOT error
    (29) expr -> . NOT expr
    (30) expr -> . expr = expr
    (31) expr -> . expr LE expr
    (32) expr -> . expr < expr
    (33) expr -> . ~ expr
    (34) expr -> . expr / expr
    (35) expr -> . expr * expr
    (36) expr -> . expr - expr
    (37) expr -> . expr + expr
    (38) expr -> . ISVOID error
    (39) expr -> . ISVOID expr
    (40) expr -> . error TYPEID
    (41) expr -> . NEW TYPEID
    (42) expr -> . CASE expr OF darrowlist ESAC
    (43) expr -> . CASE expr OF error ESAC
    (44) expr -> . CASE error OF darrowlist ESAC
    (45) expr -> . LET OBJECTID : TYPEID expr IN error
    (46) expr -> . LET OBJECTID : TYPEID error IN expr
    (47) expr -> . LET OBJECTID : TYPEID tiposlet IN expr
    (48) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (49) expr -> . LET OBJECTID : TYPEID IN expr
    (50) expr -> . { exprs }
    (51) expr -> . WHILE expr LOOP error POOL
    (52) expr -> . WHILE error LOOP expr POOL
    (53) expr -> . WHILE error LOOP error POOL
    (54) expr -> . WHILE expr LOOP expr POOL
    (55) expr -> . IF expr THEN expr ELSE expr FI
    (56) expr -> . IF error THEN expr ELSE expr FI
    (57) expr -> . IF expr THEN error FI
    (58) expr -> . OBJECTID ( parametros )
    (59) expr -> . OBJECTID ( )
    (60) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (61) expr -> . expr . OBJECTID ( parametros )
    (62) expr -> . expr @ TYPEID . OBJECTID ( )
    (63) expr -> . expr . OBJECTID ( )
    (64) expr -> . OBJECTID ASSIGN error
    (65) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 99
    STR_CONST       shift and go to state 46
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 42
    (               shift and go to state 47
    NOT             shift and go to state 48
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NEW             shift and go to state 51
    CASE            shift and go to state 52
    LET             shift and go to state 53
    {               shift and go to state 54
    WHILE           shift and go to state 55
    IF              shift and go to state 56

    expr                           shift and go to state 100

state 64

    (40) expr -> error TYPEID .
    =               reduce using rule 40 (expr -> error TYPEID .)
    LE              reduce using rule 40 (expr -> error TYPEID .)
    <               reduce using rule 40 (expr -> error TYPEID .)
    /               reduce using rule 40 (expr -> error TYPEID .)
    *               reduce using rule 40 (expr -> error TYPEID .)
    -               reduce using rule 40 (expr -> error TYPEID .)
    +               reduce using rule 40 (expr -> error TYPEID .)
    @               reduce using rule 40 (expr -> error TYPEID .)
    .               reduce using rule 40 (expr -> error TYPEID .)
    ;               reduce using rule 40 (expr -> error TYPEID .)
    )               reduce using rule 40 (expr -> error TYPEID .)
    OF              reduce using rule 40 (expr -> error TYPEID .)
    LOOP            reduce using rule 40 (expr -> error TYPEID .)
    THEN            reduce using rule 40 (expr -> error TYPEID .)
    ,               reduce using rule 40 (expr -> error TYPEID .)
    }               reduce using rule 40 (expr -> error TYPEID .)
    POOL            reduce using rule 40 (expr -> error TYPEID .)
    ELSE            reduce using rule 40 (expr -> error TYPEID .)
    IN              reduce using rule 40 (expr -> error TYPEID .)
    FI              reduce using rule 40 (expr -> error TYPEID .)


state 65

    (23) expr -> error INT_CONST .
    =               reduce using rule 23 (expr -> error INT_CONST .)
    LE              reduce using rule 23 (expr -> error INT_CONST .)
    <               reduce using rule 23 (expr -> error INT_CONST .)
    /               reduce using rule 23 (expr -> error INT_CONST .)
    *               reduce using rule 23 (expr -> error INT_CONST .)
    -               reduce using rule 23 (expr -> error INT_CONST .)
    +               reduce using rule 23 (expr -> error INT_CONST .)
    @               reduce using rule 23 (expr -> error INT_CONST .)
    .               reduce using rule 23 (expr -> error INT_CONST .)
    ;               reduce using rule 23 (expr -> error INT_CONST .)
    )               reduce using rule 23 (expr -> error INT_CONST .)
    OF              reduce using rule 23 (expr -> error INT_CONST .)
    LOOP            reduce using rule 23 (expr -> error INT_CONST .)
    THEN            reduce using rule 23 (expr -> error INT_CONST .)
    ,               reduce using rule 23 (expr -> error INT_CONST .)
    }               reduce using rule 23 (expr -> error INT_CONST .)
    POOL            reduce using rule 23 (expr -> error INT_CONST .)
    ELSE            reduce using rule 23 (expr -> error INT_CONST .)
    IN              reduce using rule 23 (expr -> error INT_CONST .)
    FI              reduce using rule 23 (expr -> error INT_CONST .)


state 66

    (30) expr -> expr = . expr
    (23) expr -> . error INT_CONST
    (24) expr -> . STR_CONST
    (25) expr -> . INT_CONST
    (26) expr -> . OBJECTID
    (27) expr -> . ( expr )
    (28) expr -> . NOT error
    (29) expr -> . NOT expr
    (30) expr -> . expr = expr
    (31) expr -> . expr LE expr
    (32) expr -> . expr < expr
    (33) expr -> . ~ expr
    (34) expr -> . expr / expr
    (35) expr -> . expr * expr
    (36) expr -> . expr - expr
    (37) expr -> . expr + expr
    (38) expr -> . ISVOID error
    (39) expr -> . ISVOID expr
    (40) expr -> . error TYPEID
    (41) expr -> . NEW TYPEID
    (42) expr -> . CASE expr OF darrowlist ESAC
    (43) expr -> . CASE expr OF error ESAC
    (44) expr -> . CASE error OF darrowlist ESAC
    (45) expr -> . LET OBJECTID : TYPEID expr IN error
    (46) expr -> . LET OBJECTID : TYPEID error IN expr
    (47) expr -> . LET OBJECTID : TYPEID tiposlet IN expr
    (48) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (49) expr -> . LET OBJECTID : TYPEID IN expr
    (50) expr -> . { exprs }
    (51) expr -> . WHILE expr LOOP error POOL
    (52) expr -> . WHILE error LOOP expr POOL
    (53) expr -> . WHILE error LOOP error POOL
    (54) expr -> . WHILE expr LOOP expr POOL
    (55) expr -> . IF expr THEN expr ELSE expr FI
    (56) expr -> . IF error THEN expr ELSE expr FI
    (57) expr -> . IF expr THEN error FI
    (58) expr -> . OBJECTID ( parametros )
    (59) expr -> . OBJECTID ( )
    (60) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (61) expr -> . expr . OBJECTID ( parametros )
    (62) expr -> . expr @ TYPEID . OBJECTID ( )
    (63) expr -> . expr . OBJECTID ( )
    (64) expr -> . OBJECTID ASSIGN error
    (65) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 76
    STR_CONST       shift and go to state 46
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 42
    (               shift and go to state 47
    NOT             shift and go to state 48
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NEW             shift and go to state 51
    CASE            shift and go to state 52
    LET             shift and go to state 53
    {               shift and go to state 54
    WHILE           shift and go to state 55
    IF              shift and go to state 56

    expr                           shift and go to state 101

state 67

    (31) expr -> expr LE . expr
    (23) expr -> . error INT_CONST
    (24) expr -> . STR_CONST
    (25) expr -> . INT_CONST
    (26) expr -> . OBJECTID
    (27) expr -> . ( expr )
    (28) expr -> . NOT error
    (29) expr -> . NOT expr
    (30) expr -> . expr = expr
    (31) expr -> . expr LE expr
    (32) expr -> . expr < expr
    (33) expr -> . ~ expr
    (34) expr -> . expr / expr
    (35) expr -> . expr * expr
    (36) expr -> . expr - expr
    (37) expr -> . expr + expr
    (38) expr -> . ISVOID error
    (39) expr -> . ISVOID expr
    (40) expr -> . error TYPEID
    (41) expr -> . NEW TYPEID
    (42) expr -> . CASE expr OF darrowlist ESAC
    (43) expr -> . CASE expr OF error ESAC
    (44) expr -> . CASE error OF darrowlist ESAC
    (45) expr -> . LET OBJECTID : TYPEID expr IN error
    (46) expr -> . LET OBJECTID : TYPEID error IN expr
    (47) expr -> . LET OBJECTID : TYPEID tiposlet IN expr
    (48) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (49) expr -> . LET OBJECTID : TYPEID IN expr
    (50) expr -> . { exprs }
    (51) expr -> . WHILE expr LOOP error POOL
    (52) expr -> . WHILE error LOOP expr POOL
    (53) expr -> . WHILE error LOOP error POOL
    (54) expr -> . WHILE expr LOOP expr POOL
    (55) expr -> . IF expr THEN expr ELSE expr FI
    (56) expr -> . IF error THEN expr ELSE expr FI
    (57) expr -> . IF expr THEN error FI
    (58) expr -> . OBJECTID ( parametros )
    (59) expr -> . OBJECTID ( )
    (60) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (61) expr -> . expr . OBJECTID ( parametros )
    (62) expr -> . expr @ TYPEID . OBJECTID ( )
    (63) expr -> . expr . OBJECTID ( )
    (64) expr -> . OBJECTID ASSIGN error
    (65) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 76
    STR_CONST       shift and go to state 46
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 42
    (               shift and go to state 47
    NOT             shift and go to state 48
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NEW             shift and go to state 51
    CASE            shift and go to state 52
    LET             shift and go to state 53
    {               shift and go to state 54
    WHILE           shift and go to state 55
    IF              shift and go to state 56

    expr                           shift and go to state 102

state 68

    (32) expr -> expr < . expr
    (23) expr -> . error INT_CONST
    (24) expr -> . STR_CONST
    (25) expr -> . INT_CONST
    (26) expr -> . OBJECTID
    (27) expr -> . ( expr )
    (28) expr -> . NOT error
    (29) expr -> . NOT expr
    (30) expr -> . expr = expr
    (31) expr -> . expr LE expr
    (32) expr -> . expr < expr
    (33) expr -> . ~ expr
    (34) expr -> . expr / expr
    (35) expr -> . expr * expr
    (36) expr -> . expr - expr
    (37) expr -> . expr + expr
    (38) expr -> . ISVOID error
    (39) expr -> . ISVOID expr
    (40) expr -> . error TYPEID
    (41) expr -> . NEW TYPEID
    (42) expr -> . CASE expr OF darrowlist ESAC
    (43) expr -> . CASE expr OF error ESAC
    (44) expr -> . CASE error OF darrowlist ESAC
    (45) expr -> . LET OBJECTID : TYPEID expr IN error
    (46) expr -> . LET OBJECTID : TYPEID error IN expr
    (47) expr -> . LET OBJECTID : TYPEID tiposlet IN expr
    (48) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (49) expr -> . LET OBJECTID : TYPEID IN expr
    (50) expr -> . { exprs }
    (51) expr -> . WHILE expr LOOP error POOL
    (52) expr -> . WHILE error LOOP expr POOL
    (53) expr -> . WHILE error LOOP error POOL
    (54) expr -> . WHILE expr LOOP expr POOL
    (55) expr -> . IF expr THEN expr ELSE expr FI
    (56) expr -> . IF error THEN expr ELSE expr FI
    (57) expr -> . IF expr THEN error FI
    (58) expr -> . OBJECTID ( parametros )
    (59) expr -> . OBJECTID ( )
    (60) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (61) expr -> . expr . OBJECTID ( parametros )
    (62) expr -> . expr @ TYPEID . OBJECTID ( )
    (63) expr -> . expr . OBJECTID ( )
    (64) expr -> . OBJECTID ASSIGN error
    (65) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 76
    STR_CONST       shift and go to state 46
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 42
    (               shift and go to state 47
    NOT             shift and go to state 48
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NEW             shift and go to state 51
    CASE            shift and go to state 52
    LET             shift and go to state 53
    {               shift and go to state 54
    WHILE           shift and go to state 55
    IF              shift and go to state 56

    expr                           shift and go to state 103

state 69

    (34) expr -> expr / . expr
    (23) expr -> . error INT_CONST
    (24) expr -> . STR_CONST
    (25) expr -> . INT_CONST
    (26) expr -> . OBJECTID
    (27) expr -> . ( expr )
    (28) expr -> . NOT error
    (29) expr -> . NOT expr
    (30) expr -> . expr = expr
    (31) expr -> . expr LE expr
    (32) expr -> . expr < expr
    (33) expr -> . ~ expr
    (34) expr -> . expr / expr
    (35) expr -> . expr * expr
    (36) expr -> . expr - expr
    (37) expr -> . expr + expr
    (38) expr -> . ISVOID error
    (39) expr -> . ISVOID expr
    (40) expr -> . error TYPEID
    (41) expr -> . NEW TYPEID
    (42) expr -> . CASE expr OF darrowlist ESAC
    (43) expr -> . CASE expr OF error ESAC
    (44) expr -> . CASE error OF darrowlist ESAC
    (45) expr -> . LET OBJECTID : TYPEID expr IN error
    (46) expr -> . LET OBJECTID : TYPEID error IN expr
    (47) expr -> . LET OBJECTID : TYPEID tiposlet IN expr
    (48) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (49) expr -> . LET OBJECTID : TYPEID IN expr
    (50) expr -> . { exprs }
    (51) expr -> . WHILE expr LOOP error POOL
    (52) expr -> . WHILE error LOOP expr POOL
    (53) expr -> . WHILE error LOOP error POOL
    (54) expr -> . WHILE expr LOOP expr POOL
    (55) expr -> . IF expr THEN expr ELSE expr FI
    (56) expr -> . IF error THEN expr ELSE expr FI
    (57) expr -> . IF expr THEN error FI
    (58) expr -> . OBJECTID ( parametros )
    (59) expr -> . OBJECTID ( )
    (60) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (61) expr -> . expr . OBJECTID ( parametros )
    (62) expr -> . expr @ TYPEID . OBJECTID ( )
    (63) expr -> . expr . OBJECTID ( )
    (64) expr -> . OBJECTID ASSIGN error
    (65) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 76
    STR_CONST       shift and go to state 46
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 42
    (               shift and go to state 47
    NOT             shift and go to state 48
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NEW             shift and go to state 51
    CASE            shift and go to state 52
    LET             shift and go to state 53
    {               shift and go to state 54
    WHILE           shift and go to state 55
    IF              shift and go to state 56

    expr                           shift and go to state 104

state 70

    (35) expr -> expr * . expr
    (23) expr -> . error INT_CONST
    (24) expr -> . STR_CONST
    (25) expr -> . INT_CONST
    (26) expr -> . OBJECTID
    (27) expr -> . ( expr )
    (28) expr -> . NOT error
    (29) expr -> . NOT expr
    (30) expr -> . expr = expr
    (31) expr -> . expr LE expr
    (32) expr -> . expr < expr
    (33) expr -> . ~ expr
    (34) expr -> . expr / expr
    (35) expr -> . expr * expr
    (36) expr -> . expr - expr
    (37) expr -> . expr + expr
    (38) expr -> . ISVOID error
    (39) expr -> . ISVOID expr
    (40) expr -> . error TYPEID
    (41) expr -> . NEW TYPEID
    (42) expr -> . CASE expr OF darrowlist ESAC
    (43) expr -> . CASE expr OF error ESAC
    (44) expr -> . CASE error OF darrowlist ESAC
    (45) expr -> . LET OBJECTID : TYPEID expr IN error
    (46) expr -> . LET OBJECTID : TYPEID error IN expr
    (47) expr -> . LET OBJECTID : TYPEID tiposlet IN expr
    (48) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (49) expr -> . LET OBJECTID : TYPEID IN expr
    (50) expr -> . { exprs }
    (51) expr -> . WHILE expr LOOP error POOL
    (52) expr -> . WHILE error LOOP expr POOL
    (53) expr -> . WHILE error LOOP error POOL
    (54) expr -> . WHILE expr LOOP expr POOL
    (55) expr -> . IF expr THEN expr ELSE expr FI
    (56) expr -> . IF error THEN expr ELSE expr FI
    (57) expr -> . IF expr THEN error FI
    (58) expr -> . OBJECTID ( parametros )
    (59) expr -> . OBJECTID ( )
    (60) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (61) expr -> . expr . OBJECTID ( parametros )
    (62) expr -> . expr @ TYPEID . OBJECTID ( )
    (63) expr -> . expr . OBJECTID ( )
    (64) expr -> . OBJECTID ASSIGN error
    (65) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 76
    STR_CONST       shift and go to state 46
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 42
    (               shift and go to state 47
    NOT             shift and go to state 48
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NEW             shift and go to state 51
    CASE            shift and go to state 52
    LET             shift and go to state 53
    {               shift and go to state 54
    WHILE           shift and go to state 55
    IF              shift and go to state 56

    expr                           shift and go to state 105

state 71

    (36) expr -> expr - . expr
    (23) expr -> . error INT_CONST
    (24) expr -> . STR_CONST
    (25) expr -> . INT_CONST
    (26) expr -> . OBJECTID
    (27) expr -> . ( expr )
    (28) expr -> . NOT error
    (29) expr -> . NOT expr
    (30) expr -> . expr = expr
    (31) expr -> . expr LE expr
    (32) expr -> . expr < expr
    (33) expr -> . ~ expr
    (34) expr -> . expr / expr
    (35) expr -> . expr * expr
    (36) expr -> . expr - expr
    (37) expr -> . expr + expr
    (38) expr -> . ISVOID error
    (39) expr -> . ISVOID expr
    (40) expr -> . error TYPEID
    (41) expr -> . NEW TYPEID
    (42) expr -> . CASE expr OF darrowlist ESAC
    (43) expr -> . CASE expr OF error ESAC
    (44) expr -> . CASE error OF darrowlist ESAC
    (45) expr -> . LET OBJECTID : TYPEID expr IN error
    (46) expr -> . LET OBJECTID : TYPEID error IN expr
    (47) expr -> . LET OBJECTID : TYPEID tiposlet IN expr
    (48) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (49) expr -> . LET OBJECTID : TYPEID IN expr
    (50) expr -> . { exprs }
    (51) expr -> . WHILE expr LOOP error POOL
    (52) expr -> . WHILE error LOOP expr POOL
    (53) expr -> . WHILE error LOOP error POOL
    (54) expr -> . WHILE expr LOOP expr POOL
    (55) expr -> . IF expr THEN expr ELSE expr FI
    (56) expr -> . IF error THEN expr ELSE expr FI
    (57) expr -> . IF expr THEN error FI
    (58) expr -> . OBJECTID ( parametros )
    (59) expr -> . OBJECTID ( )
    (60) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (61) expr -> . expr . OBJECTID ( parametros )
    (62) expr -> . expr @ TYPEID . OBJECTID ( )
    (63) expr -> . expr . OBJECTID ( )
    (64) expr -> . OBJECTID ASSIGN error
    (65) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 76
    STR_CONST       shift and go to state 46
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 42
    (               shift and go to state 47
    NOT             shift and go to state 48
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NEW             shift and go to state 51
    CASE            shift and go to state 52
    LET             shift and go to state 53
    {               shift and go to state 54
    WHILE           shift and go to state 55
    IF              shift and go to state 56

    expr                           shift and go to state 106

state 72

    (37) expr -> expr + . expr
    (23) expr -> . error INT_CONST
    (24) expr -> . STR_CONST
    (25) expr -> . INT_CONST
    (26) expr -> . OBJECTID
    (27) expr -> . ( expr )
    (28) expr -> . NOT error
    (29) expr -> . NOT expr
    (30) expr -> . expr = expr
    (31) expr -> . expr LE expr
    (32) expr -> . expr < expr
    (33) expr -> . ~ expr
    (34) expr -> . expr / expr
    (35) expr -> . expr * expr
    (36) expr -> . expr - expr
    (37) expr -> . expr + expr
    (38) expr -> . ISVOID error
    (39) expr -> . ISVOID expr
    (40) expr -> . error TYPEID
    (41) expr -> . NEW TYPEID
    (42) expr -> . CASE expr OF darrowlist ESAC
    (43) expr -> . CASE expr OF error ESAC
    (44) expr -> . CASE error OF darrowlist ESAC
    (45) expr -> . LET OBJECTID : TYPEID expr IN error
    (46) expr -> . LET OBJECTID : TYPEID error IN expr
    (47) expr -> . LET OBJECTID : TYPEID tiposlet IN expr
    (48) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (49) expr -> . LET OBJECTID : TYPEID IN expr
    (50) expr -> . { exprs }
    (51) expr -> . WHILE expr LOOP error POOL
    (52) expr -> . WHILE error LOOP expr POOL
    (53) expr -> . WHILE error LOOP error POOL
    (54) expr -> . WHILE expr LOOP expr POOL
    (55) expr -> . IF expr THEN expr ELSE expr FI
    (56) expr -> . IF error THEN expr ELSE expr FI
    (57) expr -> . IF expr THEN error FI
    (58) expr -> . OBJECTID ( parametros )
    (59) expr -> . OBJECTID ( )
    (60) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (61) expr -> . expr . OBJECTID ( parametros )
    (62) expr -> . expr @ TYPEID . OBJECTID ( )
    (63) expr -> . expr . OBJECTID ( )
    (64) expr -> . OBJECTID ASSIGN error
    (65) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 76
    STR_CONST       shift and go to state 46
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 42
    (               shift and go to state 47
    NOT             shift and go to state 48
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NEW             shift and go to state 51
    CASE            shift and go to state 52
    LET             shift and go to state 53
    {               shift and go to state 54
    WHILE           shift and go to state 55
    IF              shift and go to state 56

    expr                           shift and go to state 107

state 73

    (60) expr -> expr @ . TYPEID . OBJECTID ( parametros )
    (62) expr -> expr @ . TYPEID . OBJECTID ( )
    TYPEID          shift and go to state 108


state 74

    (61) expr -> expr . . OBJECTID ( parametros )
    (63) expr -> expr . . OBJECTID ( )
    OBJECTID        shift and go to state 109


state 75

    (27) expr -> ( expr . )
    (30) expr -> expr . = expr
    (31) expr -> expr . LE expr
    (32) expr -> expr . < expr
    (34) expr -> expr . / expr
    (35) expr -> expr . * expr
    (36) expr -> expr . - expr
    (37) expr -> expr . + expr
    (60) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (61) expr -> expr . . OBJECTID ( parametros )
    (62) expr -> expr . @ TYPEID . OBJECTID ( )
    (63) expr -> expr . . OBJECTID ( )
    )               shift and go to state 110
    =               shift and go to state 66
    LE              shift and go to state 67
    <               shift and go to state 68
    /               shift and go to state 69
    *               shift and go to state 70
    -               shift and go to state 71
    +               shift and go to state 72
    @               shift and go to state 73
    .               shift and go to state 74


state 76

    (23) expr -> error . INT_CONST
    (40) expr -> error . TYPEID
    INT_CONST       shift and go to state 65
    TYPEID          shift and go to state 64


state 77

    (28) expr -> NOT error .
    (23) expr -> error . INT_CONST
    (40) expr -> error . TYPEID
    =               reduce using rule 28 (expr -> NOT error .)
    LE              reduce using rule 28 (expr -> NOT error .)
    <               reduce using rule 28 (expr -> NOT error .)
    /               reduce using rule 28 (expr -> NOT error .)
    *               reduce using rule 28 (expr -> NOT error .)
    -               reduce using rule 28 (expr -> NOT error .)
    +               reduce using rule 28 (expr -> NOT error .)
    @               reduce using rule 28 (expr -> NOT error .)
    .               reduce using rule 28 (expr -> NOT error .)
    ;               reduce using rule 28 (expr -> NOT error .)
    )               reduce using rule 28 (expr -> NOT error .)
    OF              reduce using rule 28 (expr -> NOT error .)
    LOOP            reduce using rule 28 (expr -> NOT error .)
    THEN            reduce using rule 28 (expr -> NOT error .)
    ,               reduce using rule 28 (expr -> NOT error .)
    }               reduce using rule 28 (expr -> NOT error .)
    POOL            reduce using rule 28 (expr -> NOT error .)
    ELSE            reduce using rule 28 (expr -> NOT error .)
    IN              reduce using rule 28 (expr -> NOT error .)
    FI              reduce using rule 28 (expr -> NOT error .)
    INT_CONST       shift and go to state 65
    TYPEID          shift and go to state 64


state 78

    (29) expr -> NOT expr .
    (30) expr -> expr . = expr
    (31) expr -> expr . LE expr
    (32) expr -> expr . < expr
    (34) expr -> expr . / expr
    (35) expr -> expr . * expr
    (36) expr -> expr . - expr
    (37) expr -> expr . + expr
    (60) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (61) expr -> expr . . OBJECTID ( parametros )
    (62) expr -> expr . @ TYPEID . OBJECTID ( )
    (63) expr -> expr . . OBJECTID ( )
    ;               reduce using rule 29 (expr -> NOT expr .)
    )               reduce using rule 29 (expr -> NOT expr .)
    OF              reduce using rule 29 (expr -> NOT expr .)
    LOOP            reduce using rule 29 (expr -> NOT expr .)
    THEN            reduce using rule 29 (expr -> NOT expr .)
    ,               reduce using rule 29 (expr -> NOT expr .)
    }               reduce using rule 29 (expr -> NOT expr .)
    POOL            reduce using rule 29 (expr -> NOT expr .)
    ELSE            reduce using rule 29 (expr -> NOT expr .)
    IN              reduce using rule 29 (expr -> NOT expr .)
    FI              reduce using rule 29 (expr -> NOT expr .)
    =               shift and go to state 66
    LE              shift and go to state 67
    <               shift and go to state 68
    /               shift and go to state 69
    *               shift and go to state 70
    -               shift and go to state 71
    +               shift and go to state 72
    @               shift and go to state 73
    .               shift and go to state 74


state 79

    (33) expr -> ~ expr .
    (30) expr -> expr . = expr
    (31) expr -> expr . LE expr
    (32) expr -> expr . < expr
    (34) expr -> expr . / expr
    (35) expr -> expr . * expr
    (36) expr -> expr . - expr
    (37) expr -> expr . + expr
    (60) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (61) expr -> expr . . OBJECTID ( parametros )
    (62) expr -> expr . @ TYPEID . OBJECTID ( )
    (63) expr -> expr . . OBJECTID ( )
    =               reduce using rule 33 (expr -> ~ expr .)
    LE              reduce using rule 33 (expr -> ~ expr .)
    <               reduce using rule 33 (expr -> ~ expr .)
    /               reduce using rule 33 (expr -> ~ expr .)
    *               reduce using rule 33 (expr -> ~ expr .)
    -               reduce using rule 33 (expr -> ~ expr .)
    +               reduce using rule 33 (expr -> ~ expr .)
    ;               reduce using rule 33 (expr -> ~ expr .)
    )               reduce using rule 33 (expr -> ~ expr .)
    OF              reduce using rule 33 (expr -> ~ expr .)
    LOOP            reduce using rule 33 (expr -> ~ expr .)
    THEN            reduce using rule 33 (expr -> ~ expr .)
    ,               reduce using rule 33 (expr -> ~ expr .)
    }               reduce using rule 33 (expr -> ~ expr .)
    POOL            reduce using rule 33 (expr -> ~ expr .)
    ELSE            reduce using rule 33 (expr -> ~ expr .)
    IN              reduce using rule 33 (expr -> ~ expr .)
    FI              reduce using rule 33 (expr -> ~ expr .)
    @               shift and go to state 73
    .               shift and go to state 74


state 80

    (38) expr -> ISVOID error .
    (23) expr -> error . INT_CONST
    (40) expr -> error . TYPEID
    =               reduce using rule 38 (expr -> ISVOID error .)
    LE              reduce using rule 38 (expr -> ISVOID error .)
    <               reduce using rule 38 (expr -> ISVOID error .)
    /               reduce using rule 38 (expr -> ISVOID error .)
    *               reduce using rule 38 (expr -> ISVOID error .)
    -               reduce using rule 38 (expr -> ISVOID error .)
    +               reduce using rule 38 (expr -> ISVOID error .)
    @               reduce using rule 38 (expr -> ISVOID error .)
    .               reduce using rule 38 (expr -> ISVOID error .)
    ;               reduce using rule 38 (expr -> ISVOID error .)
    )               reduce using rule 38 (expr -> ISVOID error .)
    OF              reduce using rule 38 (expr -> ISVOID error .)
    LOOP            reduce using rule 38 (expr -> ISVOID error .)
    THEN            reduce using rule 38 (expr -> ISVOID error .)
    ,               reduce using rule 38 (expr -> ISVOID error .)
    }               reduce using rule 38 (expr -> ISVOID error .)
    POOL            reduce using rule 38 (expr -> ISVOID error .)
    ELSE            reduce using rule 38 (expr -> ISVOID error .)
    IN              reduce using rule 38 (expr -> ISVOID error .)
    FI              reduce using rule 38 (expr -> ISVOID error .)
    INT_CONST       shift and go to state 65
    TYPEID          shift and go to state 64


state 81

    (39) expr -> ISVOID expr .
    (30) expr -> expr . = expr
    (31) expr -> expr . LE expr
    (32) expr -> expr . < expr
    (34) expr -> expr . / expr
    (35) expr -> expr . * expr
    (36) expr -> expr . - expr
    (37) expr -> expr . + expr
    (60) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (61) expr -> expr . . OBJECTID ( parametros )
    (62) expr -> expr . @ TYPEID . OBJECTID ( )
    (63) expr -> expr . . OBJECTID ( )
    =               reduce using rule 39 (expr -> ISVOID expr .)
    LE              reduce using rule 39 (expr -> ISVOID expr .)
    <               reduce using rule 39 (expr -> ISVOID expr .)
    /               reduce using rule 39 (expr -> ISVOID expr .)
    *               reduce using rule 39 (expr -> ISVOID expr .)
    -               reduce using rule 39 (expr -> ISVOID expr .)
    +               reduce using rule 39 (expr -> ISVOID expr .)
    ;               reduce using rule 39 (expr -> ISVOID expr .)
    )               reduce using rule 39 (expr -> ISVOID expr .)
    OF              reduce using rule 39 (expr -> ISVOID expr .)
    LOOP            reduce using rule 39 (expr -> ISVOID expr .)
    THEN            reduce using rule 39 (expr -> ISVOID expr .)
    ,               reduce using rule 39 (expr -> ISVOID expr .)
    }               reduce using rule 39 (expr -> ISVOID expr .)
    POOL            reduce using rule 39 (expr -> ISVOID expr .)
    ELSE            reduce using rule 39 (expr -> ISVOID expr .)
    IN              reduce using rule 39 (expr -> ISVOID expr .)
    FI              reduce using rule 39 (expr -> ISVOID expr .)
    @               shift and go to state 73
    .               shift and go to state 74


state 82

    (41) expr -> NEW TYPEID .
    =               reduce using rule 41 (expr -> NEW TYPEID .)
    LE              reduce using rule 41 (expr -> NEW TYPEID .)
    <               reduce using rule 41 (expr -> NEW TYPEID .)
    /               reduce using rule 41 (expr -> NEW TYPEID .)
    *               reduce using rule 41 (expr -> NEW TYPEID .)
    -               reduce using rule 41 (expr -> NEW TYPEID .)
    +               reduce using rule 41 (expr -> NEW TYPEID .)
    @               reduce using rule 41 (expr -> NEW TYPEID .)
    .               reduce using rule 41 (expr -> NEW TYPEID .)
    ;               reduce using rule 41 (expr -> NEW TYPEID .)
    )               reduce using rule 41 (expr -> NEW TYPEID .)
    OF              reduce using rule 41 (expr -> NEW TYPEID .)
    LOOP            reduce using rule 41 (expr -> NEW TYPEID .)
    THEN            reduce using rule 41 (expr -> NEW TYPEID .)
    ,               reduce using rule 41 (expr -> NEW TYPEID .)
    }               reduce using rule 41 (expr -> NEW TYPEID .)
    POOL            reduce using rule 41 (expr -> NEW TYPEID .)
    ELSE            reduce using rule 41 (expr -> NEW TYPEID .)
    IN              reduce using rule 41 (expr -> NEW TYPEID .)
    FI              reduce using rule 41 (expr -> NEW TYPEID .)


state 83

    (42) expr -> CASE expr . OF darrowlist ESAC
    (43) expr -> CASE expr . OF error ESAC
    (30) expr -> expr . = expr
    (31) expr -> expr . LE expr
    (32) expr -> expr . < expr
    (34) expr -> expr . / expr
    (35) expr -> expr . * expr
    (36) expr -> expr . - expr
    (37) expr -> expr . + expr
    (60) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (61) expr -> expr . . OBJECTID ( parametros )
    (62) expr -> expr . @ TYPEID . OBJECTID ( )
    (63) expr -> expr . . OBJECTID ( )
    OF              shift and go to state 111
    =               shift and go to state 66
    LE              shift and go to state 67
    <               shift and go to state 68
    /               shift and go to state 69
    *               shift and go to state 70
    -               shift and go to state 71
    +               shift and go to state 72
    @               shift and go to state 73
    .               shift and go to state 74


state 84

    (44) expr -> CASE error . OF darrowlist ESAC
    (23) expr -> error . INT_CONST
    (40) expr -> error . TYPEID
    OF              shift and go to state 112
    INT_CONST       shift and go to state 65
    TYPEID          shift and go to state 64


state 85

    (45) expr -> LET OBJECTID . : TYPEID expr IN error
    (46) expr -> LET OBJECTID . : TYPEID error IN expr
    (47) expr -> LET OBJECTID . : TYPEID tiposlet IN expr
    (48) expr -> LET OBJECTID . : TYPEID ASSIGN expr IN expr
    (49) expr -> LET OBJECTID . : TYPEID IN expr
    :               shift and go to state 113


state 86

    (50) expr -> { exprs . }
    (69) exprs -> exprs . expr ;
    (23) expr -> . error INT_CONST
    (24) expr -> . STR_CONST
    (25) expr -> . INT_CONST
    (26) expr -> . OBJECTID
    (27) expr -> . ( expr )
    (28) expr -> . NOT error
    (29) expr -> . NOT expr
    (30) expr -> . expr = expr
    (31) expr -> . expr LE expr
    (32) expr -> . expr < expr
    (33) expr -> . ~ expr
    (34) expr -> . expr / expr
    (35) expr -> . expr * expr
    (36) expr -> . expr - expr
    (37) expr -> . expr + expr
    (38) expr -> . ISVOID error
    (39) expr -> . ISVOID expr
    (40) expr -> . error TYPEID
    (41) expr -> . NEW TYPEID
    (42) expr -> . CASE expr OF darrowlist ESAC
    (43) expr -> . CASE expr OF error ESAC
    (44) expr -> . CASE error OF darrowlist ESAC
    (45) expr -> . LET OBJECTID : TYPEID expr IN error
    (46) expr -> . LET OBJECTID : TYPEID error IN expr
    (47) expr -> . LET OBJECTID : TYPEID tiposlet IN expr
    (48) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (49) expr -> . LET OBJECTID : TYPEID IN expr
    (50) expr -> . { exprs }
    (51) expr -> . WHILE expr LOOP error POOL
    (52) expr -> . WHILE error LOOP expr POOL
    (53) expr -> . WHILE error LOOP error POOL
    (54) expr -> . WHILE expr LOOP expr POOL
    (55) expr -> . IF expr THEN expr ELSE expr FI
    (56) expr -> . IF error THEN expr ELSE expr FI
    (57) expr -> . IF expr THEN error FI
    (58) expr -> . OBJECTID ( parametros )
    (59) expr -> . OBJECTID ( )
    (60) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (61) expr -> . expr . OBJECTID ( parametros )
    (62) expr -> . expr @ TYPEID . OBJECTID ( )
    (63) expr -> . expr . OBJECTID ( )
    (64) expr -> . OBJECTID ASSIGN error
    (65) expr -> . OBJECTID ASSIGN expr
    }               shift and go to state 114
    error           shift and go to state 76
    STR_CONST       shift and go to state 46
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 42
    (               shift and go to state 47
    NOT             shift and go to state 48
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NEW             shift and go to state 51
    CASE            shift and go to state 52
    LET             shift and go to state 53
    {               shift and go to state 54
    WHILE           shift and go to state 55
    IF              shift and go to state 56

    expr                           shift and go to state 115

state 87

    (68) exprs -> error . ;
    (23) expr -> error . INT_CONST
    (40) expr -> error . TYPEID
    ;               shift and go to state 116
    INT_CONST       shift and go to state 65
    TYPEID          shift and go to state 64


state 88

    (70) exprs -> expr . ;
    (30) expr -> expr . = expr
    (31) expr -> expr . LE expr
    (32) expr -> expr . < expr
    (34) expr -> expr . / expr
    (35) expr -> expr . * expr
    (36) expr -> expr . - expr
    (37) expr -> expr . + expr
    (60) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (61) expr -> expr . . OBJECTID ( parametros )
    (62) expr -> expr . @ TYPEID . OBJECTID ( )
    (63) expr -> expr . . OBJECTID ( )
    ;               shift and go to state 117
    =               shift and go to state 66
    LE              shift and go to state 67
    <               shift and go to state 68
    /               shift and go to state 69
    *               shift and go to state 70
    -               shift and go to state 71
    +               shift and go to state 72
    @               shift and go to state 73
    .               shift and go to state 74


state 89

    (51) expr -> WHILE expr . LOOP error POOL
    (54) expr -> WHILE expr . LOOP expr POOL
    (30) expr -> expr . = expr
    (31) expr -> expr . LE expr
    (32) expr -> expr . < expr
    (34) expr -> expr . / expr
    (35) expr -> expr . * expr
    (36) expr -> expr . - expr
    (37) expr -> expr . + expr
    (60) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (61) expr -> expr . . OBJECTID ( parametros )
    (62) expr -> expr . @ TYPEID . OBJECTID ( )
    (63) expr -> expr . . OBJECTID ( )
    LOOP            shift and go to state 118
    =               shift and go to state 66
    LE              shift and go to state 67
    <               shift and go to state 68
    /               shift and go to state 69
    *               shift and go to state 70
    -               shift and go to state 71
    +               shift and go to state 72
    @               shift and go to state 73
    .               shift and go to state 74


state 90

    (52) expr -> WHILE error . LOOP expr POOL
    (53) expr -> WHILE error . LOOP error POOL
    (23) expr -> error . INT_CONST
    (40) expr -> error . TYPEID
    LOOP            shift and go to state 119
    INT_CONST       shift and go to state 65
    TYPEID          shift and go to state 64


state 91

    (55) expr -> IF expr . THEN expr ELSE expr FI
    (57) expr -> IF expr . THEN error FI
    (30) expr -> expr . = expr
    (31) expr -> expr . LE expr
    (32) expr -> expr . < expr
    (34) expr -> expr . / expr
    (35) expr -> expr . * expr
    (36) expr -> expr . - expr
    (37) expr -> expr . + expr
    (60) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (61) expr -> expr . . OBJECTID ( parametros )
    (62) expr -> expr . @ TYPEID . OBJECTID ( )
    (63) expr -> expr . . OBJECTID ( )
    THEN            shift and go to state 120
    =               shift and go to state 66
    LE              shift and go to state 67
    <               shift and go to state 68
    /               shift and go to state 69
    *               shift and go to state 70
    -               shift and go to state 71
    +               shift and go to state 72
    @               shift and go to state 73
    .               shift and go to state 74


state 92

    (56) expr -> IF error . THEN expr ELSE expr FI
    (23) expr -> error . INT_CONST
    (40) expr -> error . TYPEID
    THEN            shift and go to state 121
    INT_CONST       shift and go to state 65
    TYPEID          shift and go to state 64


state 93

    (15) caracteristica -> OBJECTID ( error ) : TYPEID . { expr }
    {               shift and go to state 122


state 94

    (18) caracteristica -> OBJECTID ( ) : TYPEID { . error }
    (19) caracteristica -> OBJECTID ( ) : TYPEID { . expr }
    (23) expr -> . error INT_CONST
    (24) expr -> . STR_CONST
    (25) expr -> . INT_CONST
    (26) expr -> . OBJECTID
    (27) expr -> . ( expr )
    (28) expr -> . NOT error
    (29) expr -> . NOT expr
    (30) expr -> . expr = expr
    (31) expr -> . expr LE expr
    (32) expr -> . expr < expr
    (33) expr -> . ~ expr
    (34) expr -> . expr / expr
    (35) expr -> . expr * expr
    (36) expr -> . expr - expr
    (37) expr -> . expr + expr
    (38) expr -> . ISVOID error
    (39) expr -> . ISVOID expr
    (40) expr -> . error TYPEID
    (41) expr -> . NEW TYPEID
    (42) expr -> . CASE expr OF darrowlist ESAC
    (43) expr -> . CASE expr OF error ESAC
    (44) expr -> . CASE error OF darrowlist ESAC
    (45) expr -> . LET OBJECTID : TYPEID expr IN error
    (46) expr -> . LET OBJECTID : TYPEID error IN expr
    (47) expr -> . LET OBJECTID : TYPEID tiposlet IN expr
    (48) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (49) expr -> . LET OBJECTID : TYPEID IN expr
    (50) expr -> . { exprs }
    (51) expr -> . WHILE expr LOOP error POOL
    (52) expr -> . WHILE error LOOP expr POOL
    (53) expr -> . WHILE error LOOP error POOL
    (54) expr -> . WHILE expr LOOP expr POOL
    (55) expr -> . IF expr THEN expr ELSE expr FI
    (56) expr -> . IF error THEN expr ELSE expr FI
    (57) expr -> . IF expr THEN error FI
    (58) expr -> . OBJECTID ( parametros )
    (59) expr -> . OBJECTID ( )
    (60) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (61) expr -> . expr . OBJECTID ( parametros )
    (62) expr -> . expr @ TYPEID . OBJECTID ( )
    (63) expr -> . expr . OBJECTID ( )
    (64) expr -> . OBJECTID ASSIGN error
    (65) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 123
    STR_CONST       shift and go to state 46
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 42
    (               shift and go to state 47
    NOT             shift and go to state 48
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NEW             shift and go to state 51
    CASE            shift and go to state 52
    LET             shift and go to state 53
    {               shift and go to state 54
    WHILE           shift and go to state 55
    IF              shift and go to state 56

    expr                           shift and go to state 124

state 95

    (16) caracteristica -> OBJECTID ( formales ) : TYPEID . { error }
    (17) caracteristica -> OBJECTID ( formales ) : TYPEID . { expr }
    {               shift and go to state 125


state 96

    (58) expr -> OBJECTID ( parametros . )
    (66) parametros -> parametros . , expr
    )               shift and go to state 126
    ,               shift and go to state 127


state 97

    (59) expr -> OBJECTID ( ) .
    =               reduce using rule 59 (expr -> OBJECTID ( ) .)
    LE              reduce using rule 59 (expr -> OBJECTID ( ) .)
    <               reduce using rule 59 (expr -> OBJECTID ( ) .)
    /               reduce using rule 59 (expr -> OBJECTID ( ) .)
    *               reduce using rule 59 (expr -> OBJECTID ( ) .)
    -               reduce using rule 59 (expr -> OBJECTID ( ) .)
    +               reduce using rule 59 (expr -> OBJECTID ( ) .)
    @               reduce using rule 59 (expr -> OBJECTID ( ) .)
    .               reduce using rule 59 (expr -> OBJECTID ( ) .)
    ;               reduce using rule 59 (expr -> OBJECTID ( ) .)
    )               reduce using rule 59 (expr -> OBJECTID ( ) .)
    OF              reduce using rule 59 (expr -> OBJECTID ( ) .)
    LOOP            reduce using rule 59 (expr -> OBJECTID ( ) .)
    THEN            reduce using rule 59 (expr -> OBJECTID ( ) .)
    ,               reduce using rule 59 (expr -> OBJECTID ( ) .)
    }               reduce using rule 59 (expr -> OBJECTID ( ) .)
    POOL            reduce using rule 59 (expr -> OBJECTID ( ) .)
    ELSE            reduce using rule 59 (expr -> OBJECTID ( ) .)
    IN              reduce using rule 59 (expr -> OBJECTID ( ) .)
    FI              reduce using rule 59 (expr -> OBJECTID ( ) .)


state 98

    (67) parametros -> expr .
    (30) expr -> expr . = expr
    (31) expr -> expr . LE expr
    (32) expr -> expr . < expr
    (34) expr -> expr . / expr
    (35) expr -> expr . * expr
    (36) expr -> expr . - expr
    (37) expr -> expr . + expr
    (60) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (61) expr -> expr . . OBJECTID ( parametros )
    (62) expr -> expr . @ TYPEID . OBJECTID ( )
    (63) expr -> expr . . OBJECTID ( )
    )               reduce using rule 67 (parametros -> expr .)
    ,               reduce using rule 67 (parametros -> expr .)
    =               shift and go to state 66
    LE              shift and go to state 67
    <               shift and go to state 68
    /               shift and go to state 69
    *               shift and go to state 70
    -               shift and go to state 71
    +               shift and go to state 72
    @               shift and go to state 73
    .               shift and go to state 74


state 99

    (64) expr -> OBJECTID ASSIGN error .
    (23) expr -> error . INT_CONST
    (40) expr -> error . TYPEID
    =               reduce using rule 64 (expr -> OBJECTID ASSIGN error .)
    LE              reduce using rule 64 (expr -> OBJECTID ASSIGN error .)
    <               reduce using rule 64 (expr -> OBJECTID ASSIGN error .)
    /               reduce using rule 64 (expr -> OBJECTID ASSIGN error .)
    *               reduce using rule 64 (expr -> OBJECTID ASSIGN error .)
    -               reduce using rule 64 (expr -> OBJECTID ASSIGN error .)
    +               reduce using rule 64 (expr -> OBJECTID ASSIGN error .)
    @               reduce using rule 64 (expr -> OBJECTID ASSIGN error .)
    .               reduce using rule 64 (expr -> OBJECTID ASSIGN error .)
    ;               reduce using rule 64 (expr -> OBJECTID ASSIGN error .)
    )               reduce using rule 64 (expr -> OBJECTID ASSIGN error .)
    OF              reduce using rule 64 (expr -> OBJECTID ASSIGN error .)
    LOOP            reduce using rule 64 (expr -> OBJECTID ASSIGN error .)
    THEN            reduce using rule 64 (expr -> OBJECTID ASSIGN error .)
    ,               reduce using rule 64 (expr -> OBJECTID ASSIGN error .)
    }               reduce using rule 64 (expr -> OBJECTID ASSIGN error .)
    POOL            reduce using rule 64 (expr -> OBJECTID ASSIGN error .)
    ELSE            reduce using rule 64 (expr -> OBJECTID ASSIGN error .)
    IN              reduce using rule 64 (expr -> OBJECTID ASSIGN error .)
    FI              reduce using rule 64 (expr -> OBJECTID ASSIGN error .)
    INT_CONST       shift and go to state 65
    TYPEID          shift and go to state 64


state 100

    (65) expr -> OBJECTID ASSIGN expr .
    (30) expr -> expr . = expr
    (31) expr -> expr . LE expr
    (32) expr -> expr . < expr
    (34) expr -> expr . / expr
    (35) expr -> expr . * expr
    (36) expr -> expr . - expr
    (37) expr -> expr . + expr
    (60) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (61) expr -> expr . . OBJECTID ( parametros )
    (62) expr -> expr . @ TYPEID . OBJECTID ( )
    (63) expr -> expr . . OBJECTID ( )
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 65 (expr -> OBJECTID ASSIGN expr .)
    )               reduce using rule 65 (expr -> OBJECTID ASSIGN expr .)
    OF              reduce using rule 65 (expr -> OBJECTID ASSIGN expr .)
    LOOP            reduce using rule 65 (expr -> OBJECTID ASSIGN expr .)
    THEN            reduce using rule 65 (expr -> OBJECTID ASSIGN expr .)
    ,               reduce using rule 65 (expr -> OBJECTID ASSIGN expr .)
    }               reduce using rule 65 (expr -> OBJECTID ASSIGN expr .)
    POOL            reduce using rule 65 (expr -> OBJECTID ASSIGN expr .)
    ELSE            reduce using rule 65 (expr -> OBJECTID ASSIGN expr .)
    IN              reduce using rule 65 (expr -> OBJECTID ASSIGN expr .)
    FI              reduce using rule 65 (expr -> OBJECTID ASSIGN expr .)
    =               shift and go to state 66
    LE              shift and go to state 67
    <               shift and go to state 68
    /               shift and go to state 69
    *               shift and go to state 70
    -               shift and go to state 71
    +               shift and go to state 72
    @               shift and go to state 73
    .               shift and go to state 74


state 101

    (30) expr -> expr = expr .
    (30) expr -> expr . = expr
    (31) expr -> expr . LE expr
    (32) expr -> expr . < expr
    (34) expr -> expr . / expr
    (35) expr -> expr . * expr
    (36) expr -> expr . - expr
    (37) expr -> expr . + expr
    (60) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (61) expr -> expr . . OBJECTID ( parametros )
    (62) expr -> expr . @ TYPEID . OBJECTID ( )
    (63) expr -> expr . . OBJECTID ( )
    =               reduce using rule 30 (expr -> expr = expr .)
    LE              reduce using rule 30 (expr -> expr = expr .)
    <               reduce using rule 30 (expr -> expr = expr .)
    ;               reduce using rule 30 (expr -> expr = expr .)
    )               reduce using rule 30 (expr -> expr = expr .)
    OF              reduce using rule 30 (expr -> expr = expr .)
    LOOP            reduce using rule 30 (expr -> expr = expr .)
    THEN            reduce using rule 30 (expr -> expr = expr .)
    ,               reduce using rule 30 (expr -> expr = expr .)
    }               reduce using rule 30 (expr -> expr = expr .)
    POOL            reduce using rule 30 (expr -> expr = expr .)
    ELSE            reduce using rule 30 (expr -> expr = expr .)
    IN              reduce using rule 30 (expr -> expr = expr .)
    FI              reduce using rule 30 (expr -> expr = expr .)
    /               shift and go to state 69
    *               shift and go to state 70
    -               shift and go to state 71
    +               shift and go to state 72
    @               shift and go to state 73
    .               shift and go to state 74


state 102

    (31) expr -> expr LE expr .
    (30) expr -> expr . = expr
    (31) expr -> expr . LE expr
    (32) expr -> expr . < expr
    (34) expr -> expr . / expr
    (35) expr -> expr . * expr
    (36) expr -> expr . - expr
    (37) expr -> expr . + expr
    (60) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (61) expr -> expr . . OBJECTID ( parametros )
    (62) expr -> expr . @ TYPEID . OBJECTID ( )
    (63) expr -> expr . . OBJECTID ( )
    =               reduce using rule 31 (expr -> expr LE expr .)
    LE              reduce using rule 31 (expr -> expr LE expr .)
    <               reduce using rule 31 (expr -> expr LE expr .)
    ;               reduce using rule 31 (expr -> expr LE expr .)
    )               reduce using rule 31 (expr -> expr LE expr .)
    OF              reduce using rule 31 (expr -> expr LE expr .)
    LOOP            reduce using rule 31 (expr -> expr LE expr .)
    THEN            reduce using rule 31 (expr -> expr LE expr .)
    ,               reduce using rule 31 (expr -> expr LE expr .)
    }               reduce using rule 31 (expr -> expr LE expr .)
    POOL            reduce using rule 31 (expr -> expr LE expr .)
    ELSE            reduce using rule 31 (expr -> expr LE expr .)
    IN              reduce using rule 31 (expr -> expr LE expr .)
    FI              reduce using rule 31 (expr -> expr LE expr .)
    /               shift and go to state 69
    *               shift and go to state 70
    -               shift and go to state 71
    +               shift and go to state 72
    @               shift and go to state 73
    .               shift and go to state 74


state 103

    (32) expr -> expr < expr .
    (30) expr -> expr . = expr
    (31) expr -> expr . LE expr
    (32) expr -> expr . < expr
    (34) expr -> expr . / expr
    (35) expr -> expr . * expr
    (36) expr -> expr . - expr
    (37) expr -> expr . + expr
    (60) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (61) expr -> expr . . OBJECTID ( parametros )
    (62) expr -> expr . @ TYPEID . OBJECTID ( )
    (63) expr -> expr . . OBJECTID ( )
    =               reduce using rule 32 (expr -> expr < expr .)
    LE              reduce using rule 32 (expr -> expr < expr .)
    <               reduce using rule 32 (expr -> expr < expr .)
    ;               reduce using rule 32 (expr -> expr < expr .)
    )               reduce using rule 32 (expr -> expr < expr .)
    OF              reduce using rule 32 (expr -> expr < expr .)
    LOOP            reduce using rule 32 (expr -> expr < expr .)
    THEN            reduce using rule 32 (expr -> expr < expr .)
    ,               reduce using rule 32 (expr -> expr < expr .)
    }               reduce using rule 32 (expr -> expr < expr .)
    POOL            reduce using rule 32 (expr -> expr < expr .)
    ELSE            reduce using rule 32 (expr -> expr < expr .)
    IN              reduce using rule 32 (expr -> expr < expr .)
    FI              reduce using rule 32 (expr -> expr < expr .)
    /               shift and go to state 69
    *               shift and go to state 70
    -               shift and go to state 71
    +               shift and go to state 72
    @               shift and go to state 73
    .               shift and go to state 74


state 104

    (34) expr -> expr / expr .
    (30) expr -> expr . = expr
    (31) expr -> expr . LE expr
    (32) expr -> expr . < expr
    (34) expr -> expr . / expr
    (35) expr -> expr . * expr
    (36) expr -> expr . - expr
    (37) expr -> expr . + expr
    (60) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (61) expr -> expr . . OBJECTID ( parametros )
    (62) expr -> expr . @ TYPEID . OBJECTID ( )
    (63) expr -> expr . . OBJECTID ( )
    =               reduce using rule 34 (expr -> expr / expr .)
    LE              reduce using rule 34 (expr -> expr / expr .)
    <               reduce using rule 34 (expr -> expr / expr .)
    /               reduce using rule 34 (expr -> expr / expr .)
    *               reduce using rule 34 (expr -> expr / expr .)
    -               reduce using rule 34 (expr -> expr / expr .)
    +               reduce using rule 34 (expr -> expr / expr .)
    ;               reduce using rule 34 (expr -> expr / expr .)
    )               reduce using rule 34 (expr -> expr / expr .)
    OF              reduce using rule 34 (expr -> expr / expr .)
    LOOP            reduce using rule 34 (expr -> expr / expr .)
    THEN            reduce using rule 34 (expr -> expr / expr .)
    ,               reduce using rule 34 (expr -> expr / expr .)
    }               reduce using rule 34 (expr -> expr / expr .)
    POOL            reduce using rule 34 (expr -> expr / expr .)
    ELSE            reduce using rule 34 (expr -> expr / expr .)
    IN              reduce using rule 34 (expr -> expr / expr .)
    FI              reduce using rule 34 (expr -> expr / expr .)
    @               shift and go to state 73
    .               shift and go to state 74


state 105

    (35) expr -> expr * expr .
    (30) expr -> expr . = expr
    (31) expr -> expr . LE expr
    (32) expr -> expr . < expr
    (34) expr -> expr . / expr
    (35) expr -> expr . * expr
    (36) expr -> expr . - expr
    (37) expr -> expr . + expr
    (60) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (61) expr -> expr . . OBJECTID ( parametros )
    (62) expr -> expr . @ TYPEID . OBJECTID ( )
    (63) expr -> expr . . OBJECTID ( )
    =               reduce using rule 35 (expr -> expr * expr .)
    LE              reduce using rule 35 (expr -> expr * expr .)
    <               reduce using rule 35 (expr -> expr * expr .)
    /               reduce using rule 35 (expr -> expr * expr .)
    *               reduce using rule 35 (expr -> expr * expr .)
    -               reduce using rule 35 (expr -> expr * expr .)
    +               reduce using rule 35 (expr -> expr * expr .)
    ;               reduce using rule 35 (expr -> expr * expr .)
    )               reduce using rule 35 (expr -> expr * expr .)
    OF              reduce using rule 35 (expr -> expr * expr .)
    LOOP            reduce using rule 35 (expr -> expr * expr .)
    THEN            reduce using rule 35 (expr -> expr * expr .)
    ,               reduce using rule 35 (expr -> expr * expr .)
    }               reduce using rule 35 (expr -> expr * expr .)
    POOL            reduce using rule 35 (expr -> expr * expr .)
    ELSE            reduce using rule 35 (expr -> expr * expr .)
    IN              reduce using rule 35 (expr -> expr * expr .)
    FI              reduce using rule 35 (expr -> expr * expr .)
    @               shift and go to state 73
    .               shift and go to state 74


state 106

    (36) expr -> expr - expr .
    (30) expr -> expr . = expr
    (31) expr -> expr . LE expr
    (32) expr -> expr . < expr
    (34) expr -> expr . / expr
    (35) expr -> expr . * expr
    (36) expr -> expr . - expr
    (37) expr -> expr . + expr
    (60) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (61) expr -> expr . . OBJECTID ( parametros )
    (62) expr -> expr . @ TYPEID . OBJECTID ( )
    (63) expr -> expr . . OBJECTID ( )
    =               reduce using rule 36 (expr -> expr - expr .)
    LE              reduce using rule 36 (expr -> expr - expr .)
    <               reduce using rule 36 (expr -> expr - expr .)
    -               reduce using rule 36 (expr -> expr - expr .)
    +               reduce using rule 36 (expr -> expr - expr .)
    ;               reduce using rule 36 (expr -> expr - expr .)
    )               reduce using rule 36 (expr -> expr - expr .)
    OF              reduce using rule 36 (expr -> expr - expr .)
    LOOP            reduce using rule 36 (expr -> expr - expr .)
    THEN            reduce using rule 36 (expr -> expr - expr .)
    ,               reduce using rule 36 (expr -> expr - expr .)
    }               reduce using rule 36 (expr -> expr - expr .)
    POOL            reduce using rule 36 (expr -> expr - expr .)
    ELSE            reduce using rule 36 (expr -> expr - expr .)
    IN              reduce using rule 36 (expr -> expr - expr .)
    FI              reduce using rule 36 (expr -> expr - expr .)
    /               shift and go to state 69
    *               shift and go to state 70
    @               shift and go to state 73
    .               shift and go to state 74


state 107

    (37) expr -> expr + expr .
    (30) expr -> expr . = expr
    (31) expr -> expr . LE expr
    (32) expr -> expr . < expr
    (34) expr -> expr . / expr
    (35) expr -> expr . * expr
    (36) expr -> expr . - expr
    (37) expr -> expr . + expr
    (60) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (61) expr -> expr . . OBJECTID ( parametros )
    (62) expr -> expr . @ TYPEID . OBJECTID ( )
    (63) expr -> expr . . OBJECTID ( )
    =               reduce using rule 37 (expr -> expr + expr .)
    LE              reduce using rule 37 (expr -> expr + expr .)
    <               reduce using rule 37 (expr -> expr + expr .)
    -               reduce using rule 37 (expr -> expr + expr .)
    +               reduce using rule 37 (expr -> expr + expr .)
    ;               reduce using rule 37 (expr -> expr + expr .)
    )               reduce using rule 37 (expr -> expr + expr .)
    OF              reduce using rule 37 (expr -> expr + expr .)
    LOOP            reduce using rule 37 (expr -> expr + expr .)
    THEN            reduce using rule 37 (expr -> expr + expr .)
    ,               reduce using rule 37 (expr -> expr + expr .)
    }               reduce using rule 37 (expr -> expr + expr .)
    POOL            reduce using rule 37 (expr -> expr + expr .)
    ELSE            reduce using rule 37 (expr -> expr + expr .)
    IN              reduce using rule 37 (expr -> expr + expr .)
    FI              reduce using rule 37 (expr -> expr + expr .)
    /               shift and go to state 69
    *               shift and go to state 70
    @               shift and go to state 73
    .               shift and go to state 74


state 108

    (60) expr -> expr @ TYPEID . . OBJECTID ( parametros )
    (62) expr -> expr @ TYPEID . . OBJECTID ( )
    .               shift and go to state 128


state 109

    (61) expr -> expr . OBJECTID . ( parametros )
    (63) expr -> expr . OBJECTID . ( )
    (               shift and go to state 129


state 110

    (27) expr -> ( expr ) .
    =               reduce using rule 27 (expr -> ( expr ) .)
    LE              reduce using rule 27 (expr -> ( expr ) .)
    <               reduce using rule 27 (expr -> ( expr ) .)
    /               reduce using rule 27 (expr -> ( expr ) .)
    *               reduce using rule 27 (expr -> ( expr ) .)
    -               reduce using rule 27 (expr -> ( expr ) .)
    +               reduce using rule 27 (expr -> ( expr ) .)
    @               reduce using rule 27 (expr -> ( expr ) .)
    .               reduce using rule 27 (expr -> ( expr ) .)
    ;               reduce using rule 27 (expr -> ( expr ) .)
    )               reduce using rule 27 (expr -> ( expr ) .)
    OF              reduce using rule 27 (expr -> ( expr ) .)
    LOOP            reduce using rule 27 (expr -> ( expr ) .)
    THEN            reduce using rule 27 (expr -> ( expr ) .)
    ,               reduce using rule 27 (expr -> ( expr ) .)
    }               reduce using rule 27 (expr -> ( expr ) .)
    POOL            reduce using rule 27 (expr -> ( expr ) .)
    ELSE            reduce using rule 27 (expr -> ( expr ) .)
    IN              reduce using rule 27 (expr -> ( expr ) .)
    FI              reduce using rule 27 (expr -> ( expr ) .)


state 111

    (42) expr -> CASE expr OF . darrowlist ESAC
    (43) expr -> CASE expr OF . error ESAC
    (76) darrowlist -> . darrowlist OBJECTID : TYPEID DARROW expr ;
    (77) darrowlist -> . OBJECTID : TYPEID DARROW error ;
    (78) darrowlist -> . OBJECTID : TYPEID DARROW expr ;
    error           shift and go to state 131
    OBJECTID        shift and go to state 132

    darrowlist                     shift and go to state 130

state 112

    (44) expr -> CASE error OF . darrowlist ESAC
    (76) darrowlist -> . darrowlist OBJECTID : TYPEID DARROW expr ;
    (77) darrowlist -> . OBJECTID : TYPEID DARROW error ;
    (78) darrowlist -> . OBJECTID : TYPEID DARROW expr ;
    OBJECTID        shift and go to state 132

    darrowlist                     shift and go to state 133

state 113

    (45) expr -> LET OBJECTID : . TYPEID expr IN error
    (46) expr -> LET OBJECTID : . TYPEID error IN expr
    (47) expr -> LET OBJECTID : . TYPEID tiposlet IN expr
    (48) expr -> LET OBJECTID : . TYPEID ASSIGN expr IN expr
    (49) expr -> LET OBJECTID : . TYPEID IN expr
    TYPEID          shift and go to state 134


state 114

    (50) expr -> { exprs } .
    =               reduce using rule 50 (expr -> { exprs } .)
    LE              reduce using rule 50 (expr -> { exprs } .)
    <               reduce using rule 50 (expr -> { exprs } .)
    /               reduce using rule 50 (expr -> { exprs } .)
    *               reduce using rule 50 (expr -> { exprs } .)
    -               reduce using rule 50 (expr -> { exprs } .)
    +               reduce using rule 50 (expr -> { exprs } .)
    @               reduce using rule 50 (expr -> { exprs } .)
    .               reduce using rule 50 (expr -> { exprs } .)
    ;               reduce using rule 50 (expr -> { exprs } .)
    )               reduce using rule 50 (expr -> { exprs } .)
    OF              reduce using rule 50 (expr -> { exprs } .)
    LOOP            reduce using rule 50 (expr -> { exprs } .)
    THEN            reduce using rule 50 (expr -> { exprs } .)
    ,               reduce using rule 50 (expr -> { exprs } .)
    }               reduce using rule 50 (expr -> { exprs } .)
    POOL            reduce using rule 50 (expr -> { exprs } .)
    ELSE            reduce using rule 50 (expr -> { exprs } .)
    IN              reduce using rule 50 (expr -> { exprs } .)
    FI              reduce using rule 50 (expr -> { exprs } .)


state 115

    (69) exprs -> exprs expr . ;
    (30) expr -> expr . = expr
    (31) expr -> expr . LE expr
    (32) expr -> expr . < expr
    (34) expr -> expr . / expr
    (35) expr -> expr . * expr
    (36) expr -> expr . - expr
    (37) expr -> expr . + expr
    (60) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (61) expr -> expr . . OBJECTID ( parametros )
    (62) expr -> expr . @ TYPEID . OBJECTID ( )
    (63) expr -> expr . . OBJECTID ( )
    ;               shift and go to state 135
    =               shift and go to state 66
    LE              shift and go to state 67
    <               shift and go to state 68
    /               shift and go to state 69
    *               shift and go to state 70
    -               shift and go to state 71
    +               shift and go to state 72
    @               shift and go to state 73
    .               shift and go to state 74


state 116

    (68) exprs -> error ; .
    }               reduce using rule 68 (exprs -> error ; .)
    error           reduce using rule 68 (exprs -> error ; .)
    STR_CONST       reduce using rule 68 (exprs -> error ; .)
    INT_CONST       reduce using rule 68 (exprs -> error ; .)
    OBJECTID        reduce using rule 68 (exprs -> error ; .)
    (               reduce using rule 68 (exprs -> error ; .)
    NOT             reduce using rule 68 (exprs -> error ; .)
    ~               reduce using rule 68 (exprs -> error ; .)
    ISVOID          reduce using rule 68 (exprs -> error ; .)
    NEW             reduce using rule 68 (exprs -> error ; .)
    CASE            reduce using rule 68 (exprs -> error ; .)
    LET             reduce using rule 68 (exprs -> error ; .)
    {               reduce using rule 68 (exprs -> error ; .)
    WHILE           reduce using rule 68 (exprs -> error ; .)
    IF              reduce using rule 68 (exprs -> error ; .)


state 117

    (70) exprs -> expr ; .
    }               reduce using rule 70 (exprs -> expr ; .)
    error           reduce using rule 70 (exprs -> expr ; .)
    STR_CONST       reduce using rule 70 (exprs -> expr ; .)
    INT_CONST       reduce using rule 70 (exprs -> expr ; .)
    OBJECTID        reduce using rule 70 (exprs -> expr ; .)
    (               reduce using rule 70 (exprs -> expr ; .)
    NOT             reduce using rule 70 (exprs -> expr ; .)
    ~               reduce using rule 70 (exprs -> expr ; .)
    ISVOID          reduce using rule 70 (exprs -> expr ; .)
    NEW             reduce using rule 70 (exprs -> expr ; .)
    CASE            reduce using rule 70 (exprs -> expr ; .)
    LET             reduce using rule 70 (exprs -> expr ; .)
    {               reduce using rule 70 (exprs -> expr ; .)
    WHILE           reduce using rule 70 (exprs -> expr ; .)
    IF              reduce using rule 70 (exprs -> expr ; .)


state 118

    (51) expr -> WHILE expr LOOP . error POOL
    (54) expr -> WHILE expr LOOP . expr POOL
    (23) expr -> . error INT_CONST
    (24) expr -> . STR_CONST
    (25) expr -> . INT_CONST
    (26) expr -> . OBJECTID
    (27) expr -> . ( expr )
    (28) expr -> . NOT error
    (29) expr -> . NOT expr
    (30) expr -> . expr = expr
    (31) expr -> . expr LE expr
    (32) expr -> . expr < expr
    (33) expr -> . ~ expr
    (34) expr -> . expr / expr
    (35) expr -> . expr * expr
    (36) expr -> . expr - expr
    (37) expr -> . expr + expr
    (38) expr -> . ISVOID error
    (39) expr -> . ISVOID expr
    (40) expr -> . error TYPEID
    (41) expr -> . NEW TYPEID
    (42) expr -> . CASE expr OF darrowlist ESAC
    (43) expr -> . CASE expr OF error ESAC
    (44) expr -> . CASE error OF darrowlist ESAC
    (45) expr -> . LET OBJECTID : TYPEID expr IN error
    (46) expr -> . LET OBJECTID : TYPEID error IN expr
    (47) expr -> . LET OBJECTID : TYPEID tiposlet IN expr
    (48) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (49) expr -> . LET OBJECTID : TYPEID IN expr
    (50) expr -> . { exprs }
    (51) expr -> . WHILE expr LOOP error POOL
    (52) expr -> . WHILE error LOOP expr POOL
    (53) expr -> . WHILE error LOOP error POOL
    (54) expr -> . WHILE expr LOOP expr POOL
    (55) expr -> . IF expr THEN expr ELSE expr FI
    (56) expr -> . IF error THEN expr ELSE expr FI
    (57) expr -> . IF expr THEN error FI
    (58) expr -> . OBJECTID ( parametros )
    (59) expr -> . OBJECTID ( )
    (60) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (61) expr -> . expr . OBJECTID ( parametros )
    (62) expr -> . expr @ TYPEID . OBJECTID ( )
    (63) expr -> . expr . OBJECTID ( )
    (64) expr -> . OBJECTID ASSIGN error
    (65) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 137
    STR_CONST       shift and go to state 46
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 42
    (               shift and go to state 47
    NOT             shift and go to state 48
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NEW             shift and go to state 51
    CASE            shift and go to state 52
    LET             shift and go to state 53
    {               shift and go to state 54
    WHILE           shift and go to state 55
    IF              shift and go to state 56

    expr                           shift and go to state 136

state 119

    (52) expr -> WHILE error LOOP . expr POOL
    (53) expr -> WHILE error LOOP . error POOL
    (23) expr -> . error INT_CONST
    (24) expr -> . STR_CONST
    (25) expr -> . INT_CONST
    (26) expr -> . OBJECTID
    (27) expr -> . ( expr )
    (28) expr -> . NOT error
    (29) expr -> . NOT expr
    (30) expr -> . expr = expr
    (31) expr -> . expr LE expr
    (32) expr -> . expr < expr
    (33) expr -> . ~ expr
    (34) expr -> . expr / expr
    (35) expr -> . expr * expr
    (36) expr -> . expr - expr
    (37) expr -> . expr + expr
    (38) expr -> . ISVOID error
    (39) expr -> . ISVOID expr
    (40) expr -> . error TYPEID
    (41) expr -> . NEW TYPEID
    (42) expr -> . CASE expr OF darrowlist ESAC
    (43) expr -> . CASE expr OF error ESAC
    (44) expr -> . CASE error OF darrowlist ESAC
    (45) expr -> . LET OBJECTID : TYPEID expr IN error
    (46) expr -> . LET OBJECTID : TYPEID error IN expr
    (47) expr -> . LET OBJECTID : TYPEID tiposlet IN expr
    (48) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (49) expr -> . LET OBJECTID : TYPEID IN expr
    (50) expr -> . { exprs }
    (51) expr -> . WHILE expr LOOP error POOL
    (52) expr -> . WHILE error LOOP expr POOL
    (53) expr -> . WHILE error LOOP error POOL
    (54) expr -> . WHILE expr LOOP expr POOL
    (55) expr -> . IF expr THEN expr ELSE expr FI
    (56) expr -> . IF error THEN expr ELSE expr FI
    (57) expr -> . IF expr THEN error FI
    (58) expr -> . OBJECTID ( parametros )
    (59) expr -> . OBJECTID ( )
    (60) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (61) expr -> . expr . OBJECTID ( parametros )
    (62) expr -> . expr @ TYPEID . OBJECTID ( )
    (63) expr -> . expr . OBJECTID ( )
    (64) expr -> . OBJECTID ASSIGN error
    (65) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 138
    STR_CONST       shift and go to state 46
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 42
    (               shift and go to state 47
    NOT             shift and go to state 48
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NEW             shift and go to state 51
    CASE            shift and go to state 52
    LET             shift and go to state 53
    {               shift and go to state 54
    WHILE           shift and go to state 55
    IF              shift and go to state 56

    expr                           shift and go to state 139

state 120

    (55) expr -> IF expr THEN . expr ELSE expr FI
    (57) expr -> IF expr THEN . error FI
    (23) expr -> . error INT_CONST
    (24) expr -> . STR_CONST
    (25) expr -> . INT_CONST
    (26) expr -> . OBJECTID
    (27) expr -> . ( expr )
    (28) expr -> . NOT error
    (29) expr -> . NOT expr
    (30) expr -> . expr = expr
    (31) expr -> . expr LE expr
    (32) expr -> . expr < expr
    (33) expr -> . ~ expr
    (34) expr -> . expr / expr
    (35) expr -> . expr * expr
    (36) expr -> . expr - expr
    (37) expr -> . expr + expr
    (38) expr -> . ISVOID error
    (39) expr -> . ISVOID expr
    (40) expr -> . error TYPEID
    (41) expr -> . NEW TYPEID
    (42) expr -> . CASE expr OF darrowlist ESAC
    (43) expr -> . CASE expr OF error ESAC
    (44) expr -> . CASE error OF darrowlist ESAC
    (45) expr -> . LET OBJECTID : TYPEID expr IN error
    (46) expr -> . LET OBJECTID : TYPEID error IN expr
    (47) expr -> . LET OBJECTID : TYPEID tiposlet IN expr
    (48) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (49) expr -> . LET OBJECTID : TYPEID IN expr
    (50) expr -> . { exprs }
    (51) expr -> . WHILE expr LOOP error POOL
    (52) expr -> . WHILE error LOOP expr POOL
    (53) expr -> . WHILE error LOOP error POOL
    (54) expr -> . WHILE expr LOOP expr POOL
    (55) expr -> . IF expr THEN expr ELSE expr FI
    (56) expr -> . IF error THEN expr ELSE expr FI
    (57) expr -> . IF expr THEN error FI
    (58) expr -> . OBJECTID ( parametros )
    (59) expr -> . OBJECTID ( )
    (60) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (61) expr -> . expr . OBJECTID ( parametros )
    (62) expr -> . expr @ TYPEID . OBJECTID ( )
    (63) expr -> . expr . OBJECTID ( )
    (64) expr -> . OBJECTID ASSIGN error
    (65) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 141
    STR_CONST       shift and go to state 46
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 42
    (               shift and go to state 47
    NOT             shift and go to state 48
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NEW             shift and go to state 51
    CASE            shift and go to state 52
    LET             shift and go to state 53
    {               shift and go to state 54
    WHILE           shift and go to state 55
    IF              shift and go to state 56

    expr                           shift and go to state 140

state 121

    (56) expr -> IF error THEN . expr ELSE expr FI
    (23) expr -> . error INT_CONST
    (24) expr -> . STR_CONST
    (25) expr -> . INT_CONST
    (26) expr -> . OBJECTID
    (27) expr -> . ( expr )
    (28) expr -> . NOT error
    (29) expr -> . NOT expr
    (30) expr -> . expr = expr
    (31) expr -> . expr LE expr
    (32) expr -> . expr < expr
    (33) expr -> . ~ expr
    (34) expr -> . expr / expr
    (35) expr -> . expr * expr
    (36) expr -> . expr - expr
    (37) expr -> . expr + expr
    (38) expr -> . ISVOID error
    (39) expr -> . ISVOID expr
    (40) expr -> . error TYPEID
    (41) expr -> . NEW TYPEID
    (42) expr -> . CASE expr OF darrowlist ESAC
    (43) expr -> . CASE expr OF error ESAC
    (44) expr -> . CASE error OF darrowlist ESAC
    (45) expr -> . LET OBJECTID : TYPEID expr IN error
    (46) expr -> . LET OBJECTID : TYPEID error IN expr
    (47) expr -> . LET OBJECTID : TYPEID tiposlet IN expr
    (48) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (49) expr -> . LET OBJECTID : TYPEID IN expr
    (50) expr -> . { exprs }
    (51) expr -> . WHILE expr LOOP error POOL
    (52) expr -> . WHILE error LOOP expr POOL
    (53) expr -> . WHILE error LOOP error POOL
    (54) expr -> . WHILE expr LOOP expr POOL
    (55) expr -> . IF expr THEN expr ELSE expr FI
    (56) expr -> . IF error THEN expr ELSE expr FI
    (57) expr -> . IF expr THEN error FI
    (58) expr -> . OBJECTID ( parametros )
    (59) expr -> . OBJECTID ( )
    (60) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (61) expr -> . expr . OBJECTID ( parametros )
    (62) expr -> . expr @ TYPEID . OBJECTID ( )
    (63) expr -> . expr . OBJECTID ( )
    (64) expr -> . OBJECTID ASSIGN error
    (65) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 76
    STR_CONST       shift and go to state 46
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 42
    (               shift and go to state 47
    NOT             shift and go to state 48
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NEW             shift and go to state 51
    CASE            shift and go to state 52
    LET             shift and go to state 53
    {               shift and go to state 54
    WHILE           shift and go to state 55
    IF              shift and go to state 56

    expr                           shift and go to state 142

state 122

    (15) caracteristica -> OBJECTID ( error ) : TYPEID { . expr }
    (23) expr -> . error INT_CONST
    (24) expr -> . STR_CONST
    (25) expr -> . INT_CONST
    (26) expr -> . OBJECTID
    (27) expr -> . ( expr )
    (28) expr -> . NOT error
    (29) expr -> . NOT expr
    (30) expr -> . expr = expr
    (31) expr -> . expr LE expr
    (32) expr -> . expr < expr
    (33) expr -> . ~ expr
    (34) expr -> . expr / expr
    (35) expr -> . expr * expr
    (36) expr -> . expr - expr
    (37) expr -> . expr + expr
    (38) expr -> . ISVOID error
    (39) expr -> . ISVOID expr
    (40) expr -> . error TYPEID
    (41) expr -> . NEW TYPEID
    (42) expr -> . CASE expr OF darrowlist ESAC
    (43) expr -> . CASE expr OF error ESAC
    (44) expr -> . CASE error OF darrowlist ESAC
    (45) expr -> . LET OBJECTID : TYPEID expr IN error
    (46) expr -> . LET OBJECTID : TYPEID error IN expr
    (47) expr -> . LET OBJECTID : TYPEID tiposlet IN expr
    (48) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (49) expr -> . LET OBJECTID : TYPEID IN expr
    (50) expr -> . { exprs }
    (51) expr -> . WHILE expr LOOP error POOL
    (52) expr -> . WHILE error LOOP expr POOL
    (53) expr -> . WHILE error LOOP error POOL
    (54) expr -> . WHILE expr LOOP expr POOL
    (55) expr -> . IF expr THEN expr ELSE expr FI
    (56) expr -> . IF error THEN expr ELSE expr FI
    (57) expr -> . IF expr THEN error FI
    (58) expr -> . OBJECTID ( parametros )
    (59) expr -> . OBJECTID ( )
    (60) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (61) expr -> . expr . OBJECTID ( parametros )
    (62) expr -> . expr @ TYPEID . OBJECTID ( )
    (63) expr -> . expr . OBJECTID ( )
    (64) expr -> . OBJECTID ASSIGN error
    (65) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 76
    STR_CONST       shift and go to state 46
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 42
    (               shift and go to state 47
    NOT             shift and go to state 48
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NEW             shift and go to state 51
    CASE            shift and go to state 52
    LET             shift and go to state 53
    {               shift and go to state 54
    WHILE           shift and go to state 55
    IF              shift and go to state 56

    expr                           shift and go to state 143

state 123

    (18) caracteristica -> OBJECTID ( ) : TYPEID { error . }
    (23) expr -> error . INT_CONST
    (40) expr -> error . TYPEID
    }               shift and go to state 144
    INT_CONST       shift and go to state 65
    TYPEID          shift and go to state 64


state 124

    (19) caracteristica -> OBJECTID ( ) : TYPEID { expr . }
    (30) expr -> expr . = expr
    (31) expr -> expr . LE expr
    (32) expr -> expr . < expr
    (34) expr -> expr . / expr
    (35) expr -> expr . * expr
    (36) expr -> expr . - expr
    (37) expr -> expr . + expr
    (60) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (61) expr -> expr . . OBJECTID ( parametros )
    (62) expr -> expr . @ TYPEID . OBJECTID ( )
    (63) expr -> expr . . OBJECTID ( )
    }               shift and go to state 145
    =               shift and go to state 66
    LE              shift and go to state 67
    <               shift and go to state 68
    /               shift and go to state 69
    *               shift and go to state 70
    -               shift and go to state 71
    +               shift and go to state 72
    @               shift and go to state 73
    .               shift and go to state 74


state 125

    (16) caracteristica -> OBJECTID ( formales ) : TYPEID { . error }
    (17) caracteristica -> OBJECTID ( formales ) : TYPEID { . expr }
    (23) expr -> . error INT_CONST
    (24) expr -> . STR_CONST
    (25) expr -> . INT_CONST
    (26) expr -> . OBJECTID
    (27) expr -> . ( expr )
    (28) expr -> . NOT error
    (29) expr -> . NOT expr
    (30) expr -> . expr = expr
    (31) expr -> . expr LE expr
    (32) expr -> . expr < expr
    (33) expr -> . ~ expr
    (34) expr -> . expr / expr
    (35) expr -> . expr * expr
    (36) expr -> . expr - expr
    (37) expr -> . expr + expr
    (38) expr -> . ISVOID error
    (39) expr -> . ISVOID expr
    (40) expr -> . error TYPEID
    (41) expr -> . NEW TYPEID
    (42) expr -> . CASE expr OF darrowlist ESAC
    (43) expr -> . CASE expr OF error ESAC
    (44) expr -> . CASE error OF darrowlist ESAC
    (45) expr -> . LET OBJECTID : TYPEID expr IN error
    (46) expr -> . LET OBJECTID : TYPEID error IN expr
    (47) expr -> . LET OBJECTID : TYPEID tiposlet IN expr
    (48) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (49) expr -> . LET OBJECTID : TYPEID IN expr
    (50) expr -> . { exprs }
    (51) expr -> . WHILE expr LOOP error POOL
    (52) expr -> . WHILE error LOOP expr POOL
    (53) expr -> . WHILE error LOOP error POOL
    (54) expr -> . WHILE expr LOOP expr POOL
    (55) expr -> . IF expr THEN expr ELSE expr FI
    (56) expr -> . IF error THEN expr ELSE expr FI
    (57) expr -> . IF expr THEN error FI
    (58) expr -> . OBJECTID ( parametros )
    (59) expr -> . OBJECTID ( )
    (60) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (61) expr -> . expr . OBJECTID ( parametros )
    (62) expr -> . expr @ TYPEID . OBJECTID ( )
    (63) expr -> . expr . OBJECTID ( )
    (64) expr -> . OBJECTID ASSIGN error
    (65) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 146
    STR_CONST       shift and go to state 46
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 42
    (               shift and go to state 47
    NOT             shift and go to state 48
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NEW             shift and go to state 51
    CASE            shift and go to state 52
    LET             shift and go to state 53
    {               shift and go to state 54
    WHILE           shift and go to state 55
    IF              shift and go to state 56

    expr                           shift and go to state 147

state 126

    (58) expr -> OBJECTID ( parametros ) .
    =               reduce using rule 58 (expr -> OBJECTID ( parametros ) .)
    LE              reduce using rule 58 (expr -> OBJECTID ( parametros ) .)
    <               reduce using rule 58 (expr -> OBJECTID ( parametros ) .)
    /               reduce using rule 58 (expr -> OBJECTID ( parametros ) .)
    *               reduce using rule 58 (expr -> OBJECTID ( parametros ) .)
    -               reduce using rule 58 (expr -> OBJECTID ( parametros ) .)
    +               reduce using rule 58 (expr -> OBJECTID ( parametros ) .)
    @               reduce using rule 58 (expr -> OBJECTID ( parametros ) .)
    .               reduce using rule 58 (expr -> OBJECTID ( parametros ) .)
    ;               reduce using rule 58 (expr -> OBJECTID ( parametros ) .)
    )               reduce using rule 58 (expr -> OBJECTID ( parametros ) .)
    OF              reduce using rule 58 (expr -> OBJECTID ( parametros ) .)
    LOOP            reduce using rule 58 (expr -> OBJECTID ( parametros ) .)
    THEN            reduce using rule 58 (expr -> OBJECTID ( parametros ) .)
    ,               reduce using rule 58 (expr -> OBJECTID ( parametros ) .)
    }               reduce using rule 58 (expr -> OBJECTID ( parametros ) .)
    POOL            reduce using rule 58 (expr -> OBJECTID ( parametros ) .)
    ELSE            reduce using rule 58 (expr -> OBJECTID ( parametros ) .)
    IN              reduce using rule 58 (expr -> OBJECTID ( parametros ) .)
    FI              reduce using rule 58 (expr -> OBJECTID ( parametros ) .)


state 127

    (66) parametros -> parametros , . expr
    (23) expr -> . error INT_CONST
    (24) expr -> . STR_CONST
    (25) expr -> . INT_CONST
    (26) expr -> . OBJECTID
    (27) expr -> . ( expr )
    (28) expr -> . NOT error
    (29) expr -> . NOT expr
    (30) expr -> . expr = expr
    (31) expr -> . expr LE expr
    (32) expr -> . expr < expr
    (33) expr -> . ~ expr
    (34) expr -> . expr / expr
    (35) expr -> . expr * expr
    (36) expr -> . expr - expr
    (37) expr -> . expr + expr
    (38) expr -> . ISVOID error
    (39) expr -> . ISVOID expr
    (40) expr -> . error TYPEID
    (41) expr -> . NEW TYPEID
    (42) expr -> . CASE expr OF darrowlist ESAC
    (43) expr -> . CASE expr OF error ESAC
    (44) expr -> . CASE error OF darrowlist ESAC
    (45) expr -> . LET OBJECTID : TYPEID expr IN error
    (46) expr -> . LET OBJECTID : TYPEID error IN expr
    (47) expr -> . LET OBJECTID : TYPEID tiposlet IN expr
    (48) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (49) expr -> . LET OBJECTID : TYPEID IN expr
    (50) expr -> . { exprs }
    (51) expr -> . WHILE expr LOOP error POOL
    (52) expr -> . WHILE error LOOP expr POOL
    (53) expr -> . WHILE error LOOP error POOL
    (54) expr -> . WHILE expr LOOP expr POOL
    (55) expr -> . IF expr THEN expr ELSE expr FI
    (56) expr -> . IF error THEN expr ELSE expr FI
    (57) expr -> . IF expr THEN error FI
    (58) expr -> . OBJECTID ( parametros )
    (59) expr -> . OBJECTID ( )
    (60) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (61) expr -> . expr . OBJECTID ( parametros )
    (62) expr -> . expr @ TYPEID . OBJECTID ( )
    (63) expr -> . expr . OBJECTID ( )
    (64) expr -> . OBJECTID ASSIGN error
    (65) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 76
    STR_CONST       shift and go to state 46
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 42
    (               shift and go to state 47
    NOT             shift and go to state 48
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NEW             shift and go to state 51
    CASE            shift and go to state 52
    LET             shift and go to state 53
    {               shift and go to state 54
    WHILE           shift and go to state 55
    IF              shift and go to state 56

    expr                           shift and go to state 148

state 128

    (60) expr -> expr @ TYPEID . . OBJECTID ( parametros )
    (62) expr -> expr @ TYPEID . . OBJECTID ( )
    OBJECTID        shift and go to state 149


state 129

    (61) expr -> expr . OBJECTID ( . parametros )
    (63) expr -> expr . OBJECTID ( . )
    (66) parametros -> . parametros , expr
    (67) parametros -> . expr
    (23) expr -> . error INT_CONST
    (24) expr -> . STR_CONST
    (25) expr -> . INT_CONST
    (26) expr -> . OBJECTID
    (27) expr -> . ( expr )
    (28) expr -> . NOT error
    (29) expr -> . NOT expr
    (30) expr -> . expr = expr
    (31) expr -> . expr LE expr
    (32) expr -> . expr < expr
    (33) expr -> . ~ expr
    (34) expr -> . expr / expr
    (35) expr -> . expr * expr
    (36) expr -> . expr - expr
    (37) expr -> . expr + expr
    (38) expr -> . ISVOID error
    (39) expr -> . ISVOID expr
    (40) expr -> . error TYPEID
    (41) expr -> . NEW TYPEID
    (42) expr -> . CASE expr OF darrowlist ESAC
    (43) expr -> . CASE expr OF error ESAC
    (44) expr -> . CASE error OF darrowlist ESAC
    (45) expr -> . LET OBJECTID : TYPEID expr IN error
    (46) expr -> . LET OBJECTID : TYPEID error IN expr
    (47) expr -> . LET OBJECTID : TYPEID tiposlet IN expr
    (48) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (49) expr -> . LET OBJECTID : TYPEID IN expr
    (50) expr -> . { exprs }
    (51) expr -> . WHILE expr LOOP error POOL
    (52) expr -> . WHILE error LOOP expr POOL
    (53) expr -> . WHILE error LOOP error POOL
    (54) expr -> . WHILE expr LOOP expr POOL
    (55) expr -> . IF expr THEN expr ELSE expr FI
    (56) expr -> . IF error THEN expr ELSE expr FI
    (57) expr -> . IF expr THEN error FI
    (58) expr -> . OBJECTID ( parametros )
    (59) expr -> . OBJECTID ( )
    (60) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (61) expr -> . expr . OBJECTID ( parametros )
    (62) expr -> . expr @ TYPEID . OBJECTID ( )
    (63) expr -> . expr . OBJECTID ( )
    (64) expr -> . OBJECTID ASSIGN error
    (65) expr -> . OBJECTID ASSIGN expr
    )               shift and go to state 151
    error           shift and go to state 76
    STR_CONST       shift and go to state 46
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 42
    (               shift and go to state 47
    NOT             shift and go to state 48
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NEW             shift and go to state 51
    CASE            shift and go to state 52
    LET             shift and go to state 53
    {               shift and go to state 54
    WHILE           shift and go to state 55
    IF              shift and go to state 56

    expr                           shift and go to state 98
    parametros                     shift and go to state 150

state 130

    (42) expr -> CASE expr OF darrowlist . ESAC
    (76) darrowlist -> darrowlist . OBJECTID : TYPEID DARROW expr ;
    ESAC            shift and go to state 152
    OBJECTID        shift and go to state 153


state 131

    (43) expr -> CASE expr OF error . ESAC
    ESAC            shift and go to state 154


state 132

    (77) darrowlist -> OBJECTID . : TYPEID DARROW error ;
    (78) darrowlist -> OBJECTID . : TYPEID DARROW expr ;
    :               shift and go to state 155


state 133

    (44) expr -> CASE error OF darrowlist . ESAC
    (76) darrowlist -> darrowlist . OBJECTID : TYPEID DARROW expr ;
    ESAC            shift and go to state 156
    OBJECTID        shift and go to state 153


state 134

    (45) expr -> LET OBJECTID : TYPEID . expr IN error
    (46) expr -> LET OBJECTID : TYPEID . error IN expr
    (47) expr -> LET OBJECTID : TYPEID . tiposlet IN expr
    (48) expr -> LET OBJECTID : TYPEID . ASSIGN expr IN expr
    (49) expr -> LET OBJECTID : TYPEID . IN expr
    (23) expr -> . error INT_CONST
    (24) expr -> . STR_CONST
    (25) expr -> . INT_CONST
    (26) expr -> . OBJECTID
    (27) expr -> . ( expr )
    (28) expr -> . NOT error
    (29) expr -> . NOT expr
    (30) expr -> . expr = expr
    (31) expr -> . expr LE expr
    (32) expr -> . expr < expr
    (33) expr -> . ~ expr
    (34) expr -> . expr / expr
    (35) expr -> . expr * expr
    (36) expr -> . expr - expr
    (37) expr -> . expr + expr
    (38) expr -> . ISVOID error
    (39) expr -> . ISVOID expr
    (40) expr -> . error TYPEID
    (41) expr -> . NEW TYPEID
    (42) expr -> . CASE expr OF darrowlist ESAC
    (43) expr -> . CASE expr OF error ESAC
    (44) expr -> . CASE error OF darrowlist ESAC
    (45) expr -> . LET OBJECTID : TYPEID expr IN error
    (46) expr -> . LET OBJECTID : TYPEID error IN expr
    (47) expr -> . LET OBJECTID : TYPEID tiposlet IN expr
    (48) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (49) expr -> . LET OBJECTID : TYPEID IN expr
    (50) expr -> . { exprs }
    (51) expr -> . WHILE expr LOOP error POOL
    (52) expr -> . WHILE error LOOP expr POOL
    (53) expr -> . WHILE error LOOP error POOL
    (54) expr -> . WHILE expr LOOP expr POOL
    (55) expr -> . IF expr THEN expr ELSE expr FI
    (56) expr -> . IF error THEN expr ELSE expr FI
    (57) expr -> . IF expr THEN error FI
    (58) expr -> . OBJECTID ( parametros )
    (59) expr -> . OBJECTID ( )
    (60) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (61) expr -> . expr . OBJECTID ( parametros )
    (62) expr -> . expr @ TYPEID . OBJECTID ( )
    (63) expr -> . expr . OBJECTID ( )
    (64) expr -> . OBJECTID ASSIGN error
    (65) expr -> . OBJECTID ASSIGN expr
    (71) tiposlet -> . , tipolet
    error           shift and go to state 159
    ASSIGN          shift and go to state 161
    IN              shift and go to state 158
    STR_CONST       shift and go to state 46
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 42
    (               shift and go to state 47
    NOT             shift and go to state 48
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NEW             shift and go to state 51
    CASE            shift and go to state 52
    LET             shift and go to state 53
    {               shift and go to state 54
    WHILE           shift and go to state 55
    IF              shift and go to state 56
    ,               shift and go to state 162

    expr                           shift and go to state 157
    tiposlet                       shift and go to state 160

state 135

    (69) exprs -> exprs expr ; .
    }               reduce using rule 69 (exprs -> exprs expr ; .)
    error           reduce using rule 69 (exprs -> exprs expr ; .)
    STR_CONST       reduce using rule 69 (exprs -> exprs expr ; .)
    INT_CONST       reduce using rule 69 (exprs -> exprs expr ; .)
    OBJECTID        reduce using rule 69 (exprs -> exprs expr ; .)
    (               reduce using rule 69 (exprs -> exprs expr ; .)
    NOT             reduce using rule 69 (exprs -> exprs expr ; .)
    ~               reduce using rule 69 (exprs -> exprs expr ; .)
    ISVOID          reduce using rule 69 (exprs -> exprs expr ; .)
    NEW             reduce using rule 69 (exprs -> exprs expr ; .)
    CASE            reduce using rule 69 (exprs -> exprs expr ; .)
    LET             reduce using rule 69 (exprs -> exprs expr ; .)
    {               reduce using rule 69 (exprs -> exprs expr ; .)
    WHILE           reduce using rule 69 (exprs -> exprs expr ; .)
    IF              reduce using rule 69 (exprs -> exprs expr ; .)


state 136

    (54) expr -> WHILE expr LOOP expr . POOL
    (30) expr -> expr . = expr
    (31) expr -> expr . LE expr
    (32) expr -> expr . < expr
    (34) expr -> expr . / expr
    (35) expr -> expr . * expr
    (36) expr -> expr . - expr
    (37) expr -> expr . + expr
    (60) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (61) expr -> expr . . OBJECTID ( parametros )
    (62) expr -> expr . @ TYPEID . OBJECTID ( )
    (63) expr -> expr . . OBJECTID ( )
    POOL            shift and go to state 163
    =               shift and go to state 66
    LE              shift and go to state 67
    <               shift and go to state 68
    /               shift and go to state 69
    *               shift and go to state 70
    -               shift and go to state 71
    +               shift and go to state 72
    @               shift and go to state 73
    .               shift and go to state 74


state 137

    (51) expr -> WHILE expr LOOP error . POOL
    (23) expr -> error . INT_CONST
    (40) expr -> error . TYPEID
    POOL            shift and go to state 164
    INT_CONST       shift and go to state 65
    TYPEID          shift and go to state 64


state 138

    (53) expr -> WHILE error LOOP error . POOL
    (23) expr -> error . INT_CONST
    (40) expr -> error . TYPEID
    POOL            shift and go to state 165
    INT_CONST       shift and go to state 65
    TYPEID          shift and go to state 64


state 139

    (52) expr -> WHILE error LOOP expr . POOL
    (30) expr -> expr . = expr
    (31) expr -> expr . LE expr
    (32) expr -> expr . < expr
    (34) expr -> expr . / expr
    (35) expr -> expr . * expr
    (36) expr -> expr . - expr
    (37) expr -> expr . + expr
    (60) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (61) expr -> expr . . OBJECTID ( parametros )
    (62) expr -> expr . @ TYPEID . OBJECTID ( )
    (63) expr -> expr . . OBJECTID ( )
    POOL            shift and go to state 166
    =               shift and go to state 66
    LE              shift and go to state 67
    <               shift and go to state 68
    /               shift and go to state 69
    *               shift and go to state 70
    -               shift and go to state 71
    +               shift and go to state 72
    @               shift and go to state 73
    .               shift and go to state 74


state 140

    (55) expr -> IF expr THEN expr . ELSE expr FI
    (30) expr -> expr . = expr
    (31) expr -> expr . LE expr
    (32) expr -> expr . < expr
    (34) expr -> expr . / expr
    (35) expr -> expr . * expr
    (36) expr -> expr . - expr
    (37) expr -> expr . + expr
    (60) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (61) expr -> expr . . OBJECTID ( parametros )
    (62) expr -> expr . @ TYPEID . OBJECTID ( )
    (63) expr -> expr . . OBJECTID ( )
    ELSE            shift and go to state 167
    =               shift and go to state 66
    LE              shift and go to state 67
    <               shift and go to state 68
    /               shift and go to state 69
    *               shift and go to state 70
    -               shift and go to state 71
    +               shift and go to state 72
    @               shift and go to state 73
    .               shift and go to state 74


state 141

    (57) expr -> IF expr THEN error . FI
    (23) expr -> error . INT_CONST
    (40) expr -> error . TYPEID
    FI              shift and go to state 168
    INT_CONST       shift and go to state 65
    TYPEID          shift and go to state 64


state 142

    (56) expr -> IF error THEN expr . ELSE expr FI
    (30) expr -> expr . = expr
    (31) expr -> expr . LE expr
    (32) expr -> expr . < expr
    (34) expr -> expr . / expr
    (35) expr -> expr . * expr
    (36) expr -> expr . - expr
    (37) expr -> expr . + expr
    (60) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (61) expr -> expr . . OBJECTID ( parametros )
    (62) expr -> expr . @ TYPEID . OBJECTID ( )
    (63) expr -> expr . . OBJECTID ( )
    ELSE            shift and go to state 169
    =               shift and go to state 66
    LE              shift and go to state 67
    <               shift and go to state 68
    /               shift and go to state 69
    *               shift and go to state 70
    -               shift and go to state 71
    +               shift and go to state 72
    @               shift and go to state 73
    .               shift and go to state 74


state 143

    (15) caracteristica -> OBJECTID ( error ) : TYPEID { expr . }
    (30) expr -> expr . = expr
    (31) expr -> expr . LE expr
    (32) expr -> expr . < expr
    (34) expr -> expr . / expr
    (35) expr -> expr . * expr
    (36) expr -> expr . - expr
    (37) expr -> expr . + expr
    (60) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (61) expr -> expr . . OBJECTID ( parametros )
    (62) expr -> expr . @ TYPEID . OBJECTID ( )
    (63) expr -> expr . . OBJECTID ( )
    }               shift and go to state 170
    =               shift and go to state 66
    LE              shift and go to state 67
    <               shift and go to state 68
    /               shift and go to state 69
    *               shift and go to state 70
    -               shift and go to state 71
    +               shift and go to state 72
    @               shift and go to state 73
    .               shift and go to state 74


state 144

    (18) caracteristica -> OBJECTID ( ) : TYPEID { error } .
    ;               reduce using rule 18 (caracteristica -> OBJECTID ( ) : TYPEID { error } .)


state 145

    (19) caracteristica -> OBJECTID ( ) : TYPEID { expr } .
    ;               reduce using rule 19 (caracteristica -> OBJECTID ( ) : TYPEID { expr } .)


state 146

    (16) caracteristica -> OBJECTID ( formales ) : TYPEID { error . }
    (23) expr -> error . INT_CONST
    (40) expr -> error . TYPEID
    }               shift and go to state 171
    INT_CONST       shift and go to state 65
    TYPEID          shift and go to state 64


state 147

    (17) caracteristica -> OBJECTID ( formales ) : TYPEID { expr . }
    (30) expr -> expr . = expr
    (31) expr -> expr . LE expr
    (32) expr -> expr . < expr
    (34) expr -> expr . / expr
    (35) expr -> expr . * expr
    (36) expr -> expr . - expr
    (37) expr -> expr . + expr
    (60) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (61) expr -> expr . . OBJECTID ( parametros )
    (62) expr -> expr . @ TYPEID . OBJECTID ( )
    (63) expr -> expr . . OBJECTID ( )
    }               shift and go to state 172
    =               shift and go to state 66
    LE              shift and go to state 67
    <               shift and go to state 68
    /               shift and go to state 69
    *               shift and go to state 70
    -               shift and go to state 71
    +               shift and go to state 72
    @               shift and go to state 73
    .               shift and go to state 74


state 148

    (66) parametros -> parametros , expr .
    (30) expr -> expr . = expr
    (31) expr -> expr . LE expr
    (32) expr -> expr . < expr
    (34) expr -> expr . / expr
    (35) expr -> expr . * expr
    (36) expr -> expr . - expr
    (37) expr -> expr . + expr
    (60) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (61) expr -> expr . . OBJECTID ( parametros )
    (62) expr -> expr . @ TYPEID . OBJECTID ( )
    (63) expr -> expr . . OBJECTID ( )
    )               reduce using rule 66 (parametros -> parametros , expr .)
    ,               reduce using rule 66 (parametros -> parametros , expr .)
    =               shift and go to state 66
    LE              shift and go to state 67
    <               shift and go to state 68
    /               shift and go to state 69
    *               shift and go to state 70
    -               shift and go to state 71
    +               shift and go to state 72
    @               shift and go to state 73
    .               shift and go to state 74


state 149

    (60) expr -> expr @ TYPEID . OBJECTID . ( parametros )
    (62) expr -> expr @ TYPEID . OBJECTID . ( )
    (               shift and go to state 173


state 150

    (61) expr -> expr . OBJECTID ( parametros . )
    (66) parametros -> parametros . , expr
    )               shift and go to state 174
    ,               shift and go to state 127


state 151

    (63) expr -> expr . OBJECTID ( ) .
    =               reduce using rule 63 (expr -> expr . OBJECTID ( ) .)
    LE              reduce using rule 63 (expr -> expr . OBJECTID ( ) .)
    <               reduce using rule 63 (expr -> expr . OBJECTID ( ) .)
    /               reduce using rule 63 (expr -> expr . OBJECTID ( ) .)
    *               reduce using rule 63 (expr -> expr . OBJECTID ( ) .)
    -               reduce using rule 63 (expr -> expr . OBJECTID ( ) .)
    +               reduce using rule 63 (expr -> expr . OBJECTID ( ) .)
    @               reduce using rule 63 (expr -> expr . OBJECTID ( ) .)
    .               reduce using rule 63 (expr -> expr . OBJECTID ( ) .)
    ;               reduce using rule 63 (expr -> expr . OBJECTID ( ) .)
    )               reduce using rule 63 (expr -> expr . OBJECTID ( ) .)
    OF              reduce using rule 63 (expr -> expr . OBJECTID ( ) .)
    LOOP            reduce using rule 63 (expr -> expr . OBJECTID ( ) .)
    THEN            reduce using rule 63 (expr -> expr . OBJECTID ( ) .)
    ,               reduce using rule 63 (expr -> expr . OBJECTID ( ) .)
    }               reduce using rule 63 (expr -> expr . OBJECTID ( ) .)
    POOL            reduce using rule 63 (expr -> expr . OBJECTID ( ) .)
    ELSE            reduce using rule 63 (expr -> expr . OBJECTID ( ) .)
    IN              reduce using rule 63 (expr -> expr . OBJECTID ( ) .)
    FI              reduce using rule 63 (expr -> expr . OBJECTID ( ) .)


state 152

    (42) expr -> CASE expr OF darrowlist ESAC .
    =               reduce using rule 42 (expr -> CASE expr OF darrowlist ESAC .)
    LE              reduce using rule 42 (expr -> CASE expr OF darrowlist ESAC .)
    <               reduce using rule 42 (expr -> CASE expr OF darrowlist ESAC .)
    /               reduce using rule 42 (expr -> CASE expr OF darrowlist ESAC .)
    *               reduce using rule 42 (expr -> CASE expr OF darrowlist ESAC .)
    -               reduce using rule 42 (expr -> CASE expr OF darrowlist ESAC .)
    +               reduce using rule 42 (expr -> CASE expr OF darrowlist ESAC .)
    @               reduce using rule 42 (expr -> CASE expr OF darrowlist ESAC .)
    .               reduce using rule 42 (expr -> CASE expr OF darrowlist ESAC .)
    ;               reduce using rule 42 (expr -> CASE expr OF darrowlist ESAC .)
    )               reduce using rule 42 (expr -> CASE expr OF darrowlist ESAC .)
    OF              reduce using rule 42 (expr -> CASE expr OF darrowlist ESAC .)
    LOOP            reduce using rule 42 (expr -> CASE expr OF darrowlist ESAC .)
    THEN            reduce using rule 42 (expr -> CASE expr OF darrowlist ESAC .)
    ,               reduce using rule 42 (expr -> CASE expr OF darrowlist ESAC .)
    }               reduce using rule 42 (expr -> CASE expr OF darrowlist ESAC .)
    POOL            reduce using rule 42 (expr -> CASE expr OF darrowlist ESAC .)
    ELSE            reduce using rule 42 (expr -> CASE expr OF darrowlist ESAC .)
    IN              reduce using rule 42 (expr -> CASE expr OF darrowlist ESAC .)
    FI              reduce using rule 42 (expr -> CASE expr OF darrowlist ESAC .)


state 153

    (76) darrowlist -> darrowlist OBJECTID . : TYPEID DARROW expr ;
    :               shift and go to state 175


state 154

    (43) expr -> CASE expr OF error ESAC .
    =               reduce using rule 43 (expr -> CASE expr OF error ESAC .)
    LE              reduce using rule 43 (expr -> CASE expr OF error ESAC .)
    <               reduce using rule 43 (expr -> CASE expr OF error ESAC .)
    /               reduce using rule 43 (expr -> CASE expr OF error ESAC .)
    *               reduce using rule 43 (expr -> CASE expr OF error ESAC .)
    -               reduce using rule 43 (expr -> CASE expr OF error ESAC .)
    +               reduce using rule 43 (expr -> CASE expr OF error ESAC .)
    @               reduce using rule 43 (expr -> CASE expr OF error ESAC .)
    .               reduce using rule 43 (expr -> CASE expr OF error ESAC .)
    ;               reduce using rule 43 (expr -> CASE expr OF error ESAC .)
    )               reduce using rule 43 (expr -> CASE expr OF error ESAC .)
    OF              reduce using rule 43 (expr -> CASE expr OF error ESAC .)
    LOOP            reduce using rule 43 (expr -> CASE expr OF error ESAC .)
    THEN            reduce using rule 43 (expr -> CASE expr OF error ESAC .)
    ,               reduce using rule 43 (expr -> CASE expr OF error ESAC .)
    }               reduce using rule 43 (expr -> CASE expr OF error ESAC .)
    POOL            reduce using rule 43 (expr -> CASE expr OF error ESAC .)
    ELSE            reduce using rule 43 (expr -> CASE expr OF error ESAC .)
    IN              reduce using rule 43 (expr -> CASE expr OF error ESAC .)
    FI              reduce using rule 43 (expr -> CASE expr OF error ESAC .)


state 155

    (77) darrowlist -> OBJECTID : . TYPEID DARROW error ;
    (78) darrowlist -> OBJECTID : . TYPEID DARROW expr ;
    TYPEID          shift and go to state 176


state 156

    (44) expr -> CASE error OF darrowlist ESAC .
    =               reduce using rule 44 (expr -> CASE error OF darrowlist ESAC .)
    LE              reduce using rule 44 (expr -> CASE error OF darrowlist ESAC .)
    <               reduce using rule 44 (expr -> CASE error OF darrowlist ESAC .)
    /               reduce using rule 44 (expr -> CASE error OF darrowlist ESAC .)
    *               reduce using rule 44 (expr -> CASE error OF darrowlist ESAC .)
    -               reduce using rule 44 (expr -> CASE error OF darrowlist ESAC .)
    +               reduce using rule 44 (expr -> CASE error OF darrowlist ESAC .)
    @               reduce using rule 44 (expr -> CASE error OF darrowlist ESAC .)
    .               reduce using rule 44 (expr -> CASE error OF darrowlist ESAC .)
    ;               reduce using rule 44 (expr -> CASE error OF darrowlist ESAC .)
    )               reduce using rule 44 (expr -> CASE error OF darrowlist ESAC .)
    OF              reduce using rule 44 (expr -> CASE error OF darrowlist ESAC .)
    LOOP            reduce using rule 44 (expr -> CASE error OF darrowlist ESAC .)
    THEN            reduce using rule 44 (expr -> CASE error OF darrowlist ESAC .)
    ,               reduce using rule 44 (expr -> CASE error OF darrowlist ESAC .)
    }               reduce using rule 44 (expr -> CASE error OF darrowlist ESAC .)
    POOL            reduce using rule 44 (expr -> CASE error OF darrowlist ESAC .)
    ELSE            reduce using rule 44 (expr -> CASE error OF darrowlist ESAC .)
    IN              reduce using rule 44 (expr -> CASE error OF darrowlist ESAC .)
    FI              reduce using rule 44 (expr -> CASE error OF darrowlist ESAC .)


state 157

    (45) expr -> LET OBJECTID : TYPEID expr . IN error
    (30) expr -> expr . = expr
    (31) expr -> expr . LE expr
    (32) expr -> expr . < expr
    (34) expr -> expr . / expr
    (35) expr -> expr . * expr
    (36) expr -> expr . - expr
    (37) expr -> expr . + expr
    (60) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (61) expr -> expr . . OBJECTID ( parametros )
    (62) expr -> expr . @ TYPEID . OBJECTID ( )
    (63) expr -> expr . . OBJECTID ( )
    IN              shift and go to state 177
    =               shift and go to state 66
    LE              shift and go to state 67
    <               shift and go to state 68
    /               shift and go to state 69
    *               shift and go to state 70
    -               shift and go to state 71
    +               shift and go to state 72
    @               shift and go to state 73
    .               shift and go to state 74


state 158

    (49) expr -> LET OBJECTID : TYPEID IN . expr
    (23) expr -> . error INT_CONST
    (24) expr -> . STR_CONST
    (25) expr -> . INT_CONST
    (26) expr -> . OBJECTID
    (27) expr -> . ( expr )
    (28) expr -> . NOT error
    (29) expr -> . NOT expr
    (30) expr -> . expr = expr
    (31) expr -> . expr LE expr
    (32) expr -> . expr < expr
    (33) expr -> . ~ expr
    (34) expr -> . expr / expr
    (35) expr -> . expr * expr
    (36) expr -> . expr - expr
    (37) expr -> . expr + expr
    (38) expr -> . ISVOID error
    (39) expr -> . ISVOID expr
    (40) expr -> . error TYPEID
    (41) expr -> . NEW TYPEID
    (42) expr -> . CASE expr OF darrowlist ESAC
    (43) expr -> . CASE expr OF error ESAC
    (44) expr -> . CASE error OF darrowlist ESAC
    (45) expr -> . LET OBJECTID : TYPEID expr IN error
    (46) expr -> . LET OBJECTID : TYPEID error IN expr
    (47) expr -> . LET OBJECTID : TYPEID tiposlet IN expr
    (48) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (49) expr -> . LET OBJECTID : TYPEID IN expr
    (50) expr -> . { exprs }
    (51) expr -> . WHILE expr LOOP error POOL
    (52) expr -> . WHILE error LOOP expr POOL
    (53) expr -> . WHILE error LOOP error POOL
    (54) expr -> . WHILE expr LOOP expr POOL
    (55) expr -> . IF expr THEN expr ELSE expr FI
    (56) expr -> . IF error THEN expr ELSE expr FI
    (57) expr -> . IF expr THEN error FI
    (58) expr -> . OBJECTID ( parametros )
    (59) expr -> . OBJECTID ( )
    (60) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (61) expr -> . expr . OBJECTID ( parametros )
    (62) expr -> . expr @ TYPEID . OBJECTID ( )
    (63) expr -> . expr . OBJECTID ( )
    (64) expr -> . OBJECTID ASSIGN error
    (65) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 76
    STR_CONST       shift and go to state 46
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 42
    (               shift and go to state 47
    NOT             shift and go to state 48
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NEW             shift and go to state 51
    CASE            shift and go to state 52
    LET             shift and go to state 53
    {               shift and go to state 54
    WHILE           shift and go to state 55
    IF              shift and go to state 56

    expr                           shift and go to state 178

state 159

    (46) expr -> LET OBJECTID : TYPEID error . IN expr
    (23) expr -> error . INT_CONST
    (40) expr -> error . TYPEID
    IN              shift and go to state 179
    INT_CONST       shift and go to state 65
    TYPEID          shift and go to state 64


state 160

    (47) expr -> LET OBJECTID : TYPEID tiposlet . IN expr
    IN              shift and go to state 180


state 161

    (48) expr -> LET OBJECTID : TYPEID ASSIGN . expr IN expr
    (23) expr -> . error INT_CONST
    (24) expr -> . STR_CONST
    (25) expr -> . INT_CONST
    (26) expr -> . OBJECTID
    (27) expr -> . ( expr )
    (28) expr -> . NOT error
    (29) expr -> . NOT expr
    (30) expr -> . expr = expr
    (31) expr -> . expr LE expr
    (32) expr -> . expr < expr
    (33) expr -> . ~ expr
    (34) expr -> . expr / expr
    (35) expr -> . expr * expr
    (36) expr -> . expr - expr
    (37) expr -> . expr + expr
    (38) expr -> . ISVOID error
    (39) expr -> . ISVOID expr
    (40) expr -> . error TYPEID
    (41) expr -> . NEW TYPEID
    (42) expr -> . CASE expr OF darrowlist ESAC
    (43) expr -> . CASE expr OF error ESAC
    (44) expr -> . CASE error OF darrowlist ESAC
    (45) expr -> . LET OBJECTID : TYPEID expr IN error
    (46) expr -> . LET OBJECTID : TYPEID error IN expr
    (47) expr -> . LET OBJECTID : TYPEID tiposlet IN expr
    (48) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (49) expr -> . LET OBJECTID : TYPEID IN expr
    (50) expr -> . { exprs }
    (51) expr -> . WHILE expr LOOP error POOL
    (52) expr -> . WHILE error LOOP expr POOL
    (53) expr -> . WHILE error LOOP error POOL
    (54) expr -> . WHILE expr LOOP expr POOL
    (55) expr -> . IF expr THEN expr ELSE expr FI
    (56) expr -> . IF error THEN expr ELSE expr FI
    (57) expr -> . IF expr THEN error FI
    (58) expr -> . OBJECTID ( parametros )
    (59) expr -> . OBJECTID ( )
    (60) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (61) expr -> . expr . OBJECTID ( parametros )
    (62) expr -> . expr @ TYPEID . OBJECTID ( )
    (63) expr -> . expr . OBJECTID ( )
    (64) expr -> . OBJECTID ASSIGN error
    (65) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 76
    STR_CONST       shift and go to state 46
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 42
    (               shift and go to state 47
    NOT             shift and go to state 48
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NEW             shift and go to state 51
    CASE            shift and go to state 52
    LET             shift and go to state 53
    {               shift and go to state 54
    WHILE           shift and go to state 55
    IF              shift and go to state 56

    expr                           shift and go to state 181

state 162

    (71) tiposlet -> , . tipolet
    (73) tipolet -> . OBJECTID : TYPEID ASSIGN error
    (74) tipolet -> . OBJECTID : TYPEID ASSIGN expr
    OBJECTID        shift and go to state 183

    tipolet                        shift and go to state 182

state 163

    (54) expr -> WHILE expr LOOP expr POOL .
    =               reduce using rule 54 (expr -> WHILE expr LOOP expr POOL .)
    LE              reduce using rule 54 (expr -> WHILE expr LOOP expr POOL .)
    <               reduce using rule 54 (expr -> WHILE expr LOOP expr POOL .)
    /               reduce using rule 54 (expr -> WHILE expr LOOP expr POOL .)
    *               reduce using rule 54 (expr -> WHILE expr LOOP expr POOL .)
    -               reduce using rule 54 (expr -> WHILE expr LOOP expr POOL .)
    +               reduce using rule 54 (expr -> WHILE expr LOOP expr POOL .)
    @               reduce using rule 54 (expr -> WHILE expr LOOP expr POOL .)
    .               reduce using rule 54 (expr -> WHILE expr LOOP expr POOL .)
    ;               reduce using rule 54 (expr -> WHILE expr LOOP expr POOL .)
    )               reduce using rule 54 (expr -> WHILE expr LOOP expr POOL .)
    OF              reduce using rule 54 (expr -> WHILE expr LOOP expr POOL .)
    LOOP            reduce using rule 54 (expr -> WHILE expr LOOP expr POOL .)
    THEN            reduce using rule 54 (expr -> WHILE expr LOOP expr POOL .)
    ,               reduce using rule 54 (expr -> WHILE expr LOOP expr POOL .)
    }               reduce using rule 54 (expr -> WHILE expr LOOP expr POOL .)
    POOL            reduce using rule 54 (expr -> WHILE expr LOOP expr POOL .)
    ELSE            reduce using rule 54 (expr -> WHILE expr LOOP expr POOL .)
    IN              reduce using rule 54 (expr -> WHILE expr LOOP expr POOL .)
    FI              reduce using rule 54 (expr -> WHILE expr LOOP expr POOL .)


state 164

    (51) expr -> WHILE expr LOOP error POOL .
    =               reduce using rule 51 (expr -> WHILE expr LOOP error POOL .)
    LE              reduce using rule 51 (expr -> WHILE expr LOOP error POOL .)
    <               reduce using rule 51 (expr -> WHILE expr LOOP error POOL .)
    /               reduce using rule 51 (expr -> WHILE expr LOOP error POOL .)
    *               reduce using rule 51 (expr -> WHILE expr LOOP error POOL .)
    -               reduce using rule 51 (expr -> WHILE expr LOOP error POOL .)
    +               reduce using rule 51 (expr -> WHILE expr LOOP error POOL .)
    @               reduce using rule 51 (expr -> WHILE expr LOOP error POOL .)
    .               reduce using rule 51 (expr -> WHILE expr LOOP error POOL .)
    ;               reduce using rule 51 (expr -> WHILE expr LOOP error POOL .)
    )               reduce using rule 51 (expr -> WHILE expr LOOP error POOL .)
    OF              reduce using rule 51 (expr -> WHILE expr LOOP error POOL .)
    LOOP            reduce using rule 51 (expr -> WHILE expr LOOP error POOL .)
    THEN            reduce using rule 51 (expr -> WHILE expr LOOP error POOL .)
    ,               reduce using rule 51 (expr -> WHILE expr LOOP error POOL .)
    }               reduce using rule 51 (expr -> WHILE expr LOOP error POOL .)
    POOL            reduce using rule 51 (expr -> WHILE expr LOOP error POOL .)
    ELSE            reduce using rule 51 (expr -> WHILE expr LOOP error POOL .)
    IN              reduce using rule 51 (expr -> WHILE expr LOOP error POOL .)
    FI              reduce using rule 51 (expr -> WHILE expr LOOP error POOL .)


state 165

    (53) expr -> WHILE error LOOP error POOL .
    =               reduce using rule 53 (expr -> WHILE error LOOP error POOL .)
    LE              reduce using rule 53 (expr -> WHILE error LOOP error POOL .)
    <               reduce using rule 53 (expr -> WHILE error LOOP error POOL .)
    /               reduce using rule 53 (expr -> WHILE error LOOP error POOL .)
    *               reduce using rule 53 (expr -> WHILE error LOOP error POOL .)
    -               reduce using rule 53 (expr -> WHILE error LOOP error POOL .)
    +               reduce using rule 53 (expr -> WHILE error LOOP error POOL .)
    @               reduce using rule 53 (expr -> WHILE error LOOP error POOL .)
    .               reduce using rule 53 (expr -> WHILE error LOOP error POOL .)
    ;               reduce using rule 53 (expr -> WHILE error LOOP error POOL .)
    )               reduce using rule 53 (expr -> WHILE error LOOP error POOL .)
    OF              reduce using rule 53 (expr -> WHILE error LOOP error POOL .)
    LOOP            reduce using rule 53 (expr -> WHILE error LOOP error POOL .)
    THEN            reduce using rule 53 (expr -> WHILE error LOOP error POOL .)
    ,               reduce using rule 53 (expr -> WHILE error LOOP error POOL .)
    }               reduce using rule 53 (expr -> WHILE error LOOP error POOL .)
    POOL            reduce using rule 53 (expr -> WHILE error LOOP error POOL .)
    ELSE            reduce using rule 53 (expr -> WHILE error LOOP error POOL .)
    IN              reduce using rule 53 (expr -> WHILE error LOOP error POOL .)
    FI              reduce using rule 53 (expr -> WHILE error LOOP error POOL .)


state 166

    (52) expr -> WHILE error LOOP expr POOL .
    =               reduce using rule 52 (expr -> WHILE error LOOP expr POOL .)
    LE              reduce using rule 52 (expr -> WHILE error LOOP expr POOL .)
    <               reduce using rule 52 (expr -> WHILE error LOOP expr POOL .)
    /               reduce using rule 52 (expr -> WHILE error LOOP expr POOL .)
    *               reduce using rule 52 (expr -> WHILE error LOOP expr POOL .)
    -               reduce using rule 52 (expr -> WHILE error LOOP expr POOL .)
    +               reduce using rule 52 (expr -> WHILE error LOOP expr POOL .)
    @               reduce using rule 52 (expr -> WHILE error LOOP expr POOL .)
    .               reduce using rule 52 (expr -> WHILE error LOOP expr POOL .)
    ;               reduce using rule 52 (expr -> WHILE error LOOP expr POOL .)
    )               reduce using rule 52 (expr -> WHILE error LOOP expr POOL .)
    OF              reduce using rule 52 (expr -> WHILE error LOOP expr POOL .)
    LOOP            reduce using rule 52 (expr -> WHILE error LOOP expr POOL .)
    THEN            reduce using rule 52 (expr -> WHILE error LOOP expr POOL .)
    ,               reduce using rule 52 (expr -> WHILE error LOOP expr POOL .)
    }               reduce using rule 52 (expr -> WHILE error LOOP expr POOL .)
    POOL            reduce using rule 52 (expr -> WHILE error LOOP expr POOL .)
    ELSE            reduce using rule 52 (expr -> WHILE error LOOP expr POOL .)
    IN              reduce using rule 52 (expr -> WHILE error LOOP expr POOL .)
    FI              reduce using rule 52 (expr -> WHILE error LOOP expr POOL .)


state 167

    (55) expr -> IF expr THEN expr ELSE . expr FI
    (23) expr -> . error INT_CONST
    (24) expr -> . STR_CONST
    (25) expr -> . INT_CONST
    (26) expr -> . OBJECTID
    (27) expr -> . ( expr )
    (28) expr -> . NOT error
    (29) expr -> . NOT expr
    (30) expr -> . expr = expr
    (31) expr -> . expr LE expr
    (32) expr -> . expr < expr
    (33) expr -> . ~ expr
    (34) expr -> . expr / expr
    (35) expr -> . expr * expr
    (36) expr -> . expr - expr
    (37) expr -> . expr + expr
    (38) expr -> . ISVOID error
    (39) expr -> . ISVOID expr
    (40) expr -> . error TYPEID
    (41) expr -> . NEW TYPEID
    (42) expr -> . CASE expr OF darrowlist ESAC
    (43) expr -> . CASE expr OF error ESAC
    (44) expr -> . CASE error OF darrowlist ESAC
    (45) expr -> . LET OBJECTID : TYPEID expr IN error
    (46) expr -> . LET OBJECTID : TYPEID error IN expr
    (47) expr -> . LET OBJECTID : TYPEID tiposlet IN expr
    (48) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (49) expr -> . LET OBJECTID : TYPEID IN expr
    (50) expr -> . { exprs }
    (51) expr -> . WHILE expr LOOP error POOL
    (52) expr -> . WHILE error LOOP expr POOL
    (53) expr -> . WHILE error LOOP error POOL
    (54) expr -> . WHILE expr LOOP expr POOL
    (55) expr -> . IF expr THEN expr ELSE expr FI
    (56) expr -> . IF error THEN expr ELSE expr FI
    (57) expr -> . IF expr THEN error FI
    (58) expr -> . OBJECTID ( parametros )
    (59) expr -> . OBJECTID ( )
    (60) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (61) expr -> . expr . OBJECTID ( parametros )
    (62) expr -> . expr @ TYPEID . OBJECTID ( )
    (63) expr -> . expr . OBJECTID ( )
    (64) expr -> . OBJECTID ASSIGN error
    (65) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 76
    STR_CONST       shift and go to state 46
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 42
    (               shift and go to state 47
    NOT             shift and go to state 48
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NEW             shift and go to state 51
    CASE            shift and go to state 52
    LET             shift and go to state 53
    {               shift and go to state 54
    WHILE           shift and go to state 55
    IF              shift and go to state 56

    expr                           shift and go to state 184

state 168

    (57) expr -> IF expr THEN error FI .
    =               reduce using rule 57 (expr -> IF expr THEN error FI .)
    LE              reduce using rule 57 (expr -> IF expr THEN error FI .)
    <               reduce using rule 57 (expr -> IF expr THEN error FI .)
    /               reduce using rule 57 (expr -> IF expr THEN error FI .)
    *               reduce using rule 57 (expr -> IF expr THEN error FI .)
    -               reduce using rule 57 (expr -> IF expr THEN error FI .)
    +               reduce using rule 57 (expr -> IF expr THEN error FI .)
    @               reduce using rule 57 (expr -> IF expr THEN error FI .)
    .               reduce using rule 57 (expr -> IF expr THEN error FI .)
    ;               reduce using rule 57 (expr -> IF expr THEN error FI .)
    )               reduce using rule 57 (expr -> IF expr THEN error FI .)
    OF              reduce using rule 57 (expr -> IF expr THEN error FI .)
    LOOP            reduce using rule 57 (expr -> IF expr THEN error FI .)
    THEN            reduce using rule 57 (expr -> IF expr THEN error FI .)
    ,               reduce using rule 57 (expr -> IF expr THEN error FI .)
    }               reduce using rule 57 (expr -> IF expr THEN error FI .)
    POOL            reduce using rule 57 (expr -> IF expr THEN error FI .)
    ELSE            reduce using rule 57 (expr -> IF expr THEN error FI .)
    IN              reduce using rule 57 (expr -> IF expr THEN error FI .)
    FI              reduce using rule 57 (expr -> IF expr THEN error FI .)


state 169

    (56) expr -> IF error THEN expr ELSE . expr FI
    (23) expr -> . error INT_CONST
    (24) expr -> . STR_CONST
    (25) expr -> . INT_CONST
    (26) expr -> . OBJECTID
    (27) expr -> . ( expr )
    (28) expr -> . NOT error
    (29) expr -> . NOT expr
    (30) expr -> . expr = expr
    (31) expr -> . expr LE expr
    (32) expr -> . expr < expr
    (33) expr -> . ~ expr
    (34) expr -> . expr / expr
    (35) expr -> . expr * expr
    (36) expr -> . expr - expr
    (37) expr -> . expr + expr
    (38) expr -> . ISVOID error
    (39) expr -> . ISVOID expr
    (40) expr -> . error TYPEID
    (41) expr -> . NEW TYPEID
    (42) expr -> . CASE expr OF darrowlist ESAC
    (43) expr -> . CASE expr OF error ESAC
    (44) expr -> . CASE error OF darrowlist ESAC
    (45) expr -> . LET OBJECTID : TYPEID expr IN error
    (46) expr -> . LET OBJECTID : TYPEID error IN expr
    (47) expr -> . LET OBJECTID : TYPEID tiposlet IN expr
    (48) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (49) expr -> . LET OBJECTID : TYPEID IN expr
    (50) expr -> . { exprs }
    (51) expr -> . WHILE expr LOOP error POOL
    (52) expr -> . WHILE error LOOP expr POOL
    (53) expr -> . WHILE error LOOP error POOL
    (54) expr -> . WHILE expr LOOP expr POOL
    (55) expr -> . IF expr THEN expr ELSE expr FI
    (56) expr -> . IF error THEN expr ELSE expr FI
    (57) expr -> . IF expr THEN error FI
    (58) expr -> . OBJECTID ( parametros )
    (59) expr -> . OBJECTID ( )
    (60) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (61) expr -> . expr . OBJECTID ( parametros )
    (62) expr -> . expr @ TYPEID . OBJECTID ( )
    (63) expr -> . expr . OBJECTID ( )
    (64) expr -> . OBJECTID ASSIGN error
    (65) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 76
    STR_CONST       shift and go to state 46
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 42
    (               shift and go to state 47
    NOT             shift and go to state 48
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NEW             shift and go to state 51
    CASE            shift and go to state 52
    LET             shift and go to state 53
    {               shift and go to state 54
    WHILE           shift and go to state 55
    IF              shift and go to state 56

    expr                           shift and go to state 185

state 170

    (15) caracteristica -> OBJECTID ( error ) : TYPEID { expr } .
    ;               reduce using rule 15 (caracteristica -> OBJECTID ( error ) : TYPEID { expr } .)


state 171

    (16) caracteristica -> OBJECTID ( formales ) : TYPEID { error } .
    ;               reduce using rule 16 (caracteristica -> OBJECTID ( formales ) : TYPEID { error } .)


state 172

    (17) caracteristica -> OBJECTID ( formales ) : TYPEID { expr } .
    ;               reduce using rule 17 (caracteristica -> OBJECTID ( formales ) : TYPEID { expr } .)


state 173

    (60) expr -> expr @ TYPEID . OBJECTID ( . parametros )
    (62) expr -> expr @ TYPEID . OBJECTID ( . )
    (66) parametros -> . parametros , expr
    (67) parametros -> . expr
    (23) expr -> . error INT_CONST
    (24) expr -> . STR_CONST
    (25) expr -> . INT_CONST
    (26) expr -> . OBJECTID
    (27) expr -> . ( expr )
    (28) expr -> . NOT error
    (29) expr -> . NOT expr
    (30) expr -> . expr = expr
    (31) expr -> . expr LE expr
    (32) expr -> . expr < expr
    (33) expr -> . ~ expr
    (34) expr -> . expr / expr
    (35) expr -> . expr * expr
    (36) expr -> . expr - expr
    (37) expr -> . expr + expr
    (38) expr -> . ISVOID error
    (39) expr -> . ISVOID expr
    (40) expr -> . error TYPEID
    (41) expr -> . NEW TYPEID
    (42) expr -> . CASE expr OF darrowlist ESAC
    (43) expr -> . CASE expr OF error ESAC
    (44) expr -> . CASE error OF darrowlist ESAC
    (45) expr -> . LET OBJECTID : TYPEID expr IN error
    (46) expr -> . LET OBJECTID : TYPEID error IN expr
    (47) expr -> . LET OBJECTID : TYPEID tiposlet IN expr
    (48) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (49) expr -> . LET OBJECTID : TYPEID IN expr
    (50) expr -> . { exprs }
    (51) expr -> . WHILE expr LOOP error POOL
    (52) expr -> . WHILE error LOOP expr POOL
    (53) expr -> . WHILE error LOOP error POOL
    (54) expr -> . WHILE expr LOOP expr POOL
    (55) expr -> . IF expr THEN expr ELSE expr FI
    (56) expr -> . IF error THEN expr ELSE expr FI
    (57) expr -> . IF expr THEN error FI
    (58) expr -> . OBJECTID ( parametros )
    (59) expr -> . OBJECTID ( )
    (60) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (61) expr -> . expr . OBJECTID ( parametros )
    (62) expr -> . expr @ TYPEID . OBJECTID ( )
    (63) expr -> . expr . OBJECTID ( )
    (64) expr -> . OBJECTID ASSIGN error
    (65) expr -> . OBJECTID ASSIGN expr
    )               shift and go to state 187
    error           shift and go to state 76
    STR_CONST       shift and go to state 46
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 42
    (               shift and go to state 47
    NOT             shift and go to state 48
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NEW             shift and go to state 51
    CASE            shift and go to state 52
    LET             shift and go to state 53
    {               shift and go to state 54
    WHILE           shift and go to state 55
    IF              shift and go to state 56

    expr                           shift and go to state 98
    parametros                     shift and go to state 186

state 174

    (61) expr -> expr . OBJECTID ( parametros ) .
    =               reduce using rule 61 (expr -> expr . OBJECTID ( parametros ) .)
    LE              reduce using rule 61 (expr -> expr . OBJECTID ( parametros ) .)
    <               reduce using rule 61 (expr -> expr . OBJECTID ( parametros ) .)
    /               reduce using rule 61 (expr -> expr . OBJECTID ( parametros ) .)
    *               reduce using rule 61 (expr -> expr . OBJECTID ( parametros ) .)
    -               reduce using rule 61 (expr -> expr . OBJECTID ( parametros ) .)
    +               reduce using rule 61 (expr -> expr . OBJECTID ( parametros ) .)
    @               reduce using rule 61 (expr -> expr . OBJECTID ( parametros ) .)
    .               reduce using rule 61 (expr -> expr . OBJECTID ( parametros ) .)
    ;               reduce using rule 61 (expr -> expr . OBJECTID ( parametros ) .)
    )               reduce using rule 61 (expr -> expr . OBJECTID ( parametros ) .)
    OF              reduce using rule 61 (expr -> expr . OBJECTID ( parametros ) .)
    LOOP            reduce using rule 61 (expr -> expr . OBJECTID ( parametros ) .)
    THEN            reduce using rule 61 (expr -> expr . OBJECTID ( parametros ) .)
    ,               reduce using rule 61 (expr -> expr . OBJECTID ( parametros ) .)
    }               reduce using rule 61 (expr -> expr . OBJECTID ( parametros ) .)
    POOL            reduce using rule 61 (expr -> expr . OBJECTID ( parametros ) .)
    ELSE            reduce using rule 61 (expr -> expr . OBJECTID ( parametros ) .)
    IN              reduce using rule 61 (expr -> expr . OBJECTID ( parametros ) .)
    FI              reduce using rule 61 (expr -> expr . OBJECTID ( parametros ) .)


state 175

    (76) darrowlist -> darrowlist OBJECTID : . TYPEID DARROW expr ;
    TYPEID          shift and go to state 188


state 176

    (77) darrowlist -> OBJECTID : TYPEID . DARROW error ;
    (78) darrowlist -> OBJECTID : TYPEID . DARROW expr ;
    DARROW          shift and go to state 189


state 177

    (45) expr -> LET OBJECTID : TYPEID expr IN . error
    error           shift and go to state 190


state 178

    (49) expr -> LET OBJECTID : TYPEID IN expr .
    (30) expr -> expr . = expr
    (31) expr -> expr . LE expr
    (32) expr -> expr . < expr
    (34) expr -> expr . / expr
    (35) expr -> expr . * expr
    (36) expr -> expr . - expr
    (37) expr -> expr . + expr
    (60) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (61) expr -> expr . . OBJECTID ( parametros )
    (62) expr -> expr . @ TYPEID . OBJECTID ( )
    (63) expr -> expr . . OBJECTID ( )
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 49 (expr -> LET OBJECTID : TYPEID IN expr .)
    )               reduce using rule 49 (expr -> LET OBJECTID : TYPEID IN expr .)
    OF              reduce using rule 49 (expr -> LET OBJECTID : TYPEID IN expr .)
    LOOP            reduce using rule 49 (expr -> LET OBJECTID : TYPEID IN expr .)
    THEN            reduce using rule 49 (expr -> LET OBJECTID : TYPEID IN expr .)
    ,               reduce using rule 49 (expr -> LET OBJECTID : TYPEID IN expr .)
    }               reduce using rule 49 (expr -> LET OBJECTID : TYPEID IN expr .)
    POOL            reduce using rule 49 (expr -> LET OBJECTID : TYPEID IN expr .)
    ELSE            reduce using rule 49 (expr -> LET OBJECTID : TYPEID IN expr .)
    IN              reduce using rule 49 (expr -> LET OBJECTID : TYPEID IN expr .)
    FI              reduce using rule 49 (expr -> LET OBJECTID : TYPEID IN expr .)
    =               shift and go to state 66
    LE              shift and go to state 67
    <               shift and go to state 68
    /               shift and go to state 69
    *               shift and go to state 70
    -               shift and go to state 71
    +               shift and go to state 72
    @               shift and go to state 73
    .               shift and go to state 74


state 179

    (46) expr -> LET OBJECTID : TYPEID error IN . expr
    (23) expr -> . error INT_CONST
    (24) expr -> . STR_CONST
    (25) expr -> . INT_CONST
    (26) expr -> . OBJECTID
    (27) expr -> . ( expr )
    (28) expr -> . NOT error
    (29) expr -> . NOT expr
    (30) expr -> . expr = expr
    (31) expr -> . expr LE expr
    (32) expr -> . expr < expr
    (33) expr -> . ~ expr
    (34) expr -> . expr / expr
    (35) expr -> . expr * expr
    (36) expr -> . expr - expr
    (37) expr -> . expr + expr
    (38) expr -> . ISVOID error
    (39) expr -> . ISVOID expr
    (40) expr -> . error TYPEID
    (41) expr -> . NEW TYPEID
    (42) expr -> . CASE expr OF darrowlist ESAC
    (43) expr -> . CASE expr OF error ESAC
    (44) expr -> . CASE error OF darrowlist ESAC
    (45) expr -> . LET OBJECTID : TYPEID expr IN error
    (46) expr -> . LET OBJECTID : TYPEID error IN expr
    (47) expr -> . LET OBJECTID : TYPEID tiposlet IN expr
    (48) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (49) expr -> . LET OBJECTID : TYPEID IN expr
    (50) expr -> . { exprs }
    (51) expr -> . WHILE expr LOOP error POOL
    (52) expr -> . WHILE error LOOP expr POOL
    (53) expr -> . WHILE error LOOP error POOL
    (54) expr -> . WHILE expr LOOP expr POOL
    (55) expr -> . IF expr THEN expr ELSE expr FI
    (56) expr -> . IF error THEN expr ELSE expr FI
    (57) expr -> . IF expr THEN error FI
    (58) expr -> . OBJECTID ( parametros )
    (59) expr -> . OBJECTID ( )
    (60) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (61) expr -> . expr . OBJECTID ( parametros )
    (62) expr -> . expr @ TYPEID . OBJECTID ( )
    (63) expr -> . expr . OBJECTID ( )
    (64) expr -> . OBJECTID ASSIGN error
    (65) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 76
    STR_CONST       shift and go to state 46
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 42
    (               shift and go to state 47
    NOT             shift and go to state 48
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NEW             shift and go to state 51
    CASE            shift and go to state 52
    LET             shift and go to state 53
    {               shift and go to state 54
    WHILE           shift and go to state 55
    IF              shift and go to state 56

    expr                           shift and go to state 191

state 180

    (47) expr -> LET OBJECTID : TYPEID tiposlet IN . expr
    (23) expr -> . error INT_CONST
    (24) expr -> . STR_CONST
    (25) expr -> . INT_CONST
    (26) expr -> . OBJECTID
    (27) expr -> . ( expr )
    (28) expr -> . NOT error
    (29) expr -> . NOT expr
    (30) expr -> . expr = expr
    (31) expr -> . expr LE expr
    (32) expr -> . expr < expr
    (33) expr -> . ~ expr
    (34) expr -> . expr / expr
    (35) expr -> . expr * expr
    (36) expr -> . expr - expr
    (37) expr -> . expr + expr
    (38) expr -> . ISVOID error
    (39) expr -> . ISVOID expr
    (40) expr -> . error TYPEID
    (41) expr -> . NEW TYPEID
    (42) expr -> . CASE expr OF darrowlist ESAC
    (43) expr -> . CASE expr OF error ESAC
    (44) expr -> . CASE error OF darrowlist ESAC
    (45) expr -> . LET OBJECTID : TYPEID expr IN error
    (46) expr -> . LET OBJECTID : TYPEID error IN expr
    (47) expr -> . LET OBJECTID : TYPEID tiposlet IN expr
    (48) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (49) expr -> . LET OBJECTID : TYPEID IN expr
    (50) expr -> . { exprs }
    (51) expr -> . WHILE expr LOOP error POOL
    (52) expr -> . WHILE error LOOP expr POOL
    (53) expr -> . WHILE error LOOP error POOL
    (54) expr -> . WHILE expr LOOP expr POOL
    (55) expr -> . IF expr THEN expr ELSE expr FI
    (56) expr -> . IF error THEN expr ELSE expr FI
    (57) expr -> . IF expr THEN error FI
    (58) expr -> . OBJECTID ( parametros )
    (59) expr -> . OBJECTID ( )
    (60) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (61) expr -> . expr . OBJECTID ( parametros )
    (62) expr -> . expr @ TYPEID . OBJECTID ( )
    (63) expr -> . expr . OBJECTID ( )
    (64) expr -> . OBJECTID ASSIGN error
    (65) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 76
    STR_CONST       shift and go to state 46
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 42
    (               shift and go to state 47
    NOT             shift and go to state 48
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NEW             shift and go to state 51
    CASE            shift and go to state 52
    LET             shift and go to state 53
    {               shift and go to state 54
    WHILE           shift and go to state 55
    IF              shift and go to state 56

    expr                           shift and go to state 192

state 181

    (48) expr -> LET OBJECTID : TYPEID ASSIGN expr . IN expr
    (30) expr -> expr . = expr
    (31) expr -> expr . LE expr
    (32) expr -> expr . < expr
    (34) expr -> expr . / expr
    (35) expr -> expr . * expr
    (36) expr -> expr . - expr
    (37) expr -> expr . + expr
    (60) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (61) expr -> expr . . OBJECTID ( parametros )
    (62) expr -> expr . @ TYPEID . OBJECTID ( )
    (63) expr -> expr . . OBJECTID ( )
    IN              shift and go to state 193
    =               shift and go to state 66
    LE              shift and go to state 67
    <               shift and go to state 68
    /               shift and go to state 69
    *               shift and go to state 70
    -               shift and go to state 71
    +               shift and go to state 72
    @               shift and go to state 73
    .               shift and go to state 74


state 182

    (71) tiposlet -> , tipolet .
    IN              reduce using rule 71 (tiposlet -> , tipolet .)


state 183

    (73) tipolet -> OBJECTID . : TYPEID ASSIGN error
    (74) tipolet -> OBJECTID . : TYPEID ASSIGN expr
    :               shift and go to state 194


state 184

    (55) expr -> IF expr THEN expr ELSE expr . FI
    (30) expr -> expr . = expr
    (31) expr -> expr . LE expr
    (32) expr -> expr . < expr
    (34) expr -> expr . / expr
    (35) expr -> expr . * expr
    (36) expr -> expr . - expr
    (37) expr -> expr . + expr
    (60) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (61) expr -> expr . . OBJECTID ( parametros )
    (62) expr -> expr . @ TYPEID . OBJECTID ( )
    (63) expr -> expr . . OBJECTID ( )
    FI              shift and go to state 195
    =               shift and go to state 66
    LE              shift and go to state 67
    <               shift and go to state 68
    /               shift and go to state 69
    *               shift and go to state 70
    -               shift and go to state 71
    +               shift and go to state 72
    @               shift and go to state 73
    .               shift and go to state 74


state 185

    (56) expr -> IF error THEN expr ELSE expr . FI
    (30) expr -> expr . = expr
    (31) expr -> expr . LE expr
    (32) expr -> expr . < expr
    (34) expr -> expr . / expr
    (35) expr -> expr . * expr
    (36) expr -> expr . - expr
    (37) expr -> expr . + expr
    (60) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (61) expr -> expr . . OBJECTID ( parametros )
    (62) expr -> expr . @ TYPEID . OBJECTID ( )
    (63) expr -> expr . . OBJECTID ( )
    FI              shift and go to state 196
    =               shift and go to state 66
    LE              shift and go to state 67
    <               shift and go to state 68
    /               shift and go to state 69
    *               shift and go to state 70
    -               shift and go to state 71
    +               shift and go to state 72
    @               shift and go to state 73
    .               shift and go to state 74


state 186

    (60) expr -> expr @ TYPEID . OBJECTID ( parametros . )
    (66) parametros -> parametros . , expr
    )               shift and go to state 197
    ,               shift and go to state 127


state 187

    (62) expr -> expr @ TYPEID . OBJECTID ( ) .
    =               reduce using rule 62 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    LE              reduce using rule 62 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    <               reduce using rule 62 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    /               reduce using rule 62 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    *               reduce using rule 62 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    -               reduce using rule 62 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    +               reduce using rule 62 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    @               reduce using rule 62 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    .               reduce using rule 62 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    ;               reduce using rule 62 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    )               reduce using rule 62 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    OF              reduce using rule 62 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    LOOP            reduce using rule 62 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    THEN            reduce using rule 62 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    ,               reduce using rule 62 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    }               reduce using rule 62 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    POOL            reduce using rule 62 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    ELSE            reduce using rule 62 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    IN              reduce using rule 62 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    FI              reduce using rule 62 (expr -> expr @ TYPEID . OBJECTID ( ) .)


state 188

    (76) darrowlist -> darrowlist OBJECTID : TYPEID . DARROW expr ;
    DARROW          shift and go to state 198


state 189

    (77) darrowlist -> OBJECTID : TYPEID DARROW . error ;
    (78) darrowlist -> OBJECTID : TYPEID DARROW . expr ;
    (23) expr -> . error INT_CONST
    (24) expr -> . STR_CONST
    (25) expr -> . INT_CONST
    (26) expr -> . OBJECTID
    (27) expr -> . ( expr )
    (28) expr -> . NOT error
    (29) expr -> . NOT expr
    (30) expr -> . expr = expr
    (31) expr -> . expr LE expr
    (32) expr -> . expr < expr
    (33) expr -> . ~ expr
    (34) expr -> . expr / expr
    (35) expr -> . expr * expr
    (36) expr -> . expr - expr
    (37) expr -> . expr + expr
    (38) expr -> . ISVOID error
    (39) expr -> . ISVOID expr
    (40) expr -> . error TYPEID
    (41) expr -> . NEW TYPEID
    (42) expr -> . CASE expr OF darrowlist ESAC
    (43) expr -> . CASE expr OF error ESAC
    (44) expr -> . CASE error OF darrowlist ESAC
    (45) expr -> . LET OBJECTID : TYPEID expr IN error
    (46) expr -> . LET OBJECTID : TYPEID error IN expr
    (47) expr -> . LET OBJECTID : TYPEID tiposlet IN expr
    (48) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (49) expr -> . LET OBJECTID : TYPEID IN expr
    (50) expr -> . { exprs }
    (51) expr -> . WHILE expr LOOP error POOL
    (52) expr -> . WHILE error LOOP expr POOL
    (53) expr -> . WHILE error LOOP error POOL
    (54) expr -> . WHILE expr LOOP expr POOL
    (55) expr -> . IF expr THEN expr ELSE expr FI
    (56) expr -> . IF error THEN expr ELSE expr FI
    (57) expr -> . IF expr THEN error FI
    (58) expr -> . OBJECTID ( parametros )
    (59) expr -> . OBJECTID ( )
    (60) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (61) expr -> . expr . OBJECTID ( parametros )
    (62) expr -> . expr @ TYPEID . OBJECTID ( )
    (63) expr -> . expr . OBJECTID ( )
    (64) expr -> . OBJECTID ASSIGN error
    (65) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 199
    STR_CONST       shift and go to state 46
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 42
    (               shift and go to state 47
    NOT             shift and go to state 48
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NEW             shift and go to state 51
    CASE            shift and go to state 52
    LET             shift and go to state 53
    {               shift and go to state 54
    WHILE           shift and go to state 55
    IF              shift and go to state 56

    expr                           shift and go to state 200

state 190

    (45) expr -> LET OBJECTID : TYPEID expr IN error .
    =               reduce using rule 45 (expr -> LET OBJECTID : TYPEID expr IN error .)
    LE              reduce using rule 45 (expr -> LET OBJECTID : TYPEID expr IN error .)
    <               reduce using rule 45 (expr -> LET OBJECTID : TYPEID expr IN error .)
    /               reduce using rule 45 (expr -> LET OBJECTID : TYPEID expr IN error .)
    *               reduce using rule 45 (expr -> LET OBJECTID : TYPEID expr IN error .)
    -               reduce using rule 45 (expr -> LET OBJECTID : TYPEID expr IN error .)
    +               reduce using rule 45 (expr -> LET OBJECTID : TYPEID expr IN error .)
    @               reduce using rule 45 (expr -> LET OBJECTID : TYPEID expr IN error .)
    .               reduce using rule 45 (expr -> LET OBJECTID : TYPEID expr IN error .)
    ;               reduce using rule 45 (expr -> LET OBJECTID : TYPEID expr IN error .)
    )               reduce using rule 45 (expr -> LET OBJECTID : TYPEID expr IN error .)
    OF              reduce using rule 45 (expr -> LET OBJECTID : TYPEID expr IN error .)
    LOOP            reduce using rule 45 (expr -> LET OBJECTID : TYPEID expr IN error .)
    THEN            reduce using rule 45 (expr -> LET OBJECTID : TYPEID expr IN error .)
    ,               reduce using rule 45 (expr -> LET OBJECTID : TYPEID expr IN error .)
    }               reduce using rule 45 (expr -> LET OBJECTID : TYPEID expr IN error .)
    POOL            reduce using rule 45 (expr -> LET OBJECTID : TYPEID expr IN error .)
    ELSE            reduce using rule 45 (expr -> LET OBJECTID : TYPEID expr IN error .)
    IN              reduce using rule 45 (expr -> LET OBJECTID : TYPEID expr IN error .)
    FI              reduce using rule 45 (expr -> LET OBJECTID : TYPEID expr IN error .)


state 191

    (46) expr -> LET OBJECTID : TYPEID error IN expr .
    (30) expr -> expr . = expr
    (31) expr -> expr . LE expr
    (32) expr -> expr . < expr
    (34) expr -> expr . / expr
    (35) expr -> expr . * expr
    (36) expr -> expr . - expr
    (37) expr -> expr . + expr
    (60) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (61) expr -> expr . . OBJECTID ( parametros )
    (62) expr -> expr . @ TYPEID . OBJECTID ( )
    (63) expr -> expr . . OBJECTID ( )
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 46 (expr -> LET OBJECTID : TYPEID error IN expr .)
    )               reduce using rule 46 (expr -> LET OBJECTID : TYPEID error IN expr .)
    OF              reduce using rule 46 (expr -> LET OBJECTID : TYPEID error IN expr .)
    LOOP            reduce using rule 46 (expr -> LET OBJECTID : TYPEID error IN expr .)
    THEN            reduce using rule 46 (expr -> LET OBJECTID : TYPEID error IN expr .)
    ,               reduce using rule 46 (expr -> LET OBJECTID : TYPEID error IN expr .)
    }               reduce using rule 46 (expr -> LET OBJECTID : TYPEID error IN expr .)
    POOL            reduce using rule 46 (expr -> LET OBJECTID : TYPEID error IN expr .)
    ELSE            reduce using rule 46 (expr -> LET OBJECTID : TYPEID error IN expr .)
    IN              reduce using rule 46 (expr -> LET OBJECTID : TYPEID error IN expr .)
    FI              reduce using rule 46 (expr -> LET OBJECTID : TYPEID error IN expr .)
    =               shift and go to state 66
    LE              shift and go to state 67
    <               shift and go to state 68
    /               shift and go to state 69
    *               shift and go to state 70
    -               shift and go to state 71
    +               shift and go to state 72
    @               shift and go to state 73
    .               shift and go to state 74


state 192

    (47) expr -> LET OBJECTID : TYPEID tiposlet IN expr .
    (30) expr -> expr . = expr
    (31) expr -> expr . LE expr
    (32) expr -> expr . < expr
    (34) expr -> expr . / expr
    (35) expr -> expr . * expr
    (36) expr -> expr . - expr
    (37) expr -> expr . + expr
    (60) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (61) expr -> expr . . OBJECTID ( parametros )
    (62) expr -> expr . @ TYPEID . OBJECTID ( )
    (63) expr -> expr . . OBJECTID ( )
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 47 (expr -> LET OBJECTID : TYPEID tiposlet IN expr .)
    )               reduce using rule 47 (expr -> LET OBJECTID : TYPEID tiposlet IN expr .)
    OF              reduce using rule 47 (expr -> LET OBJECTID : TYPEID tiposlet IN expr .)
    LOOP            reduce using rule 47 (expr -> LET OBJECTID : TYPEID tiposlet IN expr .)
    THEN            reduce using rule 47 (expr -> LET OBJECTID : TYPEID tiposlet IN expr .)
    ,               reduce using rule 47 (expr -> LET OBJECTID : TYPEID tiposlet IN expr .)
    }               reduce using rule 47 (expr -> LET OBJECTID : TYPEID tiposlet IN expr .)
    POOL            reduce using rule 47 (expr -> LET OBJECTID : TYPEID tiposlet IN expr .)
    ELSE            reduce using rule 47 (expr -> LET OBJECTID : TYPEID tiposlet IN expr .)
    IN              reduce using rule 47 (expr -> LET OBJECTID : TYPEID tiposlet IN expr .)
    FI              reduce using rule 47 (expr -> LET OBJECTID : TYPEID tiposlet IN expr .)
    =               shift and go to state 66
    LE              shift and go to state 67
    <               shift and go to state 68
    /               shift and go to state 69
    *               shift and go to state 70
    -               shift and go to state 71
    +               shift and go to state 72
    @               shift and go to state 73
    .               shift and go to state 74


state 193

    (48) expr -> LET OBJECTID : TYPEID ASSIGN expr IN . expr
    (23) expr -> . error INT_CONST
    (24) expr -> . STR_CONST
    (25) expr -> . INT_CONST
    (26) expr -> . OBJECTID
    (27) expr -> . ( expr )
    (28) expr -> . NOT error
    (29) expr -> . NOT expr
    (30) expr -> . expr = expr
    (31) expr -> . expr LE expr
    (32) expr -> . expr < expr
    (33) expr -> . ~ expr
    (34) expr -> . expr / expr
    (35) expr -> . expr * expr
    (36) expr -> . expr - expr
    (37) expr -> . expr + expr
    (38) expr -> . ISVOID error
    (39) expr -> . ISVOID expr
    (40) expr -> . error TYPEID
    (41) expr -> . NEW TYPEID
    (42) expr -> . CASE expr OF darrowlist ESAC
    (43) expr -> . CASE expr OF error ESAC
    (44) expr -> . CASE error OF darrowlist ESAC
    (45) expr -> . LET OBJECTID : TYPEID expr IN error
    (46) expr -> . LET OBJECTID : TYPEID error IN expr
    (47) expr -> . LET OBJECTID : TYPEID tiposlet IN expr
    (48) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (49) expr -> . LET OBJECTID : TYPEID IN expr
    (50) expr -> . { exprs }
    (51) expr -> . WHILE expr LOOP error POOL
    (52) expr -> . WHILE error LOOP expr POOL
    (53) expr -> . WHILE error LOOP error POOL
    (54) expr -> . WHILE expr LOOP expr POOL
    (55) expr -> . IF expr THEN expr ELSE expr FI
    (56) expr -> . IF error THEN expr ELSE expr FI
    (57) expr -> . IF expr THEN error FI
    (58) expr -> . OBJECTID ( parametros )
    (59) expr -> . OBJECTID ( )
    (60) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (61) expr -> . expr . OBJECTID ( parametros )
    (62) expr -> . expr @ TYPEID . OBJECTID ( )
    (63) expr -> . expr . OBJECTID ( )
    (64) expr -> . OBJECTID ASSIGN error
    (65) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 76
    STR_CONST       shift and go to state 46
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 42
    (               shift and go to state 47
    NOT             shift and go to state 48
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NEW             shift and go to state 51
    CASE            shift and go to state 52
    LET             shift and go to state 53
    {               shift and go to state 54
    WHILE           shift and go to state 55
    IF              shift and go to state 56

    expr                           shift and go to state 201

state 194

    (73) tipolet -> OBJECTID : . TYPEID ASSIGN error
    (74) tipolet -> OBJECTID : . TYPEID ASSIGN expr
    TYPEID          shift and go to state 202


state 195

    (55) expr -> IF expr THEN expr ELSE expr FI .
    =               reduce using rule 55 (expr -> IF expr THEN expr ELSE expr FI .)
    LE              reduce using rule 55 (expr -> IF expr THEN expr ELSE expr FI .)
    <               reduce using rule 55 (expr -> IF expr THEN expr ELSE expr FI .)
    /               reduce using rule 55 (expr -> IF expr THEN expr ELSE expr FI .)
    *               reduce using rule 55 (expr -> IF expr THEN expr ELSE expr FI .)
    -               reduce using rule 55 (expr -> IF expr THEN expr ELSE expr FI .)
    +               reduce using rule 55 (expr -> IF expr THEN expr ELSE expr FI .)
    @               reduce using rule 55 (expr -> IF expr THEN expr ELSE expr FI .)
    .               reduce using rule 55 (expr -> IF expr THEN expr ELSE expr FI .)
    ;               reduce using rule 55 (expr -> IF expr THEN expr ELSE expr FI .)
    )               reduce using rule 55 (expr -> IF expr THEN expr ELSE expr FI .)
    OF              reduce using rule 55 (expr -> IF expr THEN expr ELSE expr FI .)
    LOOP            reduce using rule 55 (expr -> IF expr THEN expr ELSE expr FI .)
    THEN            reduce using rule 55 (expr -> IF expr THEN expr ELSE expr FI .)
    ,               reduce using rule 55 (expr -> IF expr THEN expr ELSE expr FI .)
    }               reduce using rule 55 (expr -> IF expr THEN expr ELSE expr FI .)
    POOL            reduce using rule 55 (expr -> IF expr THEN expr ELSE expr FI .)
    ELSE            reduce using rule 55 (expr -> IF expr THEN expr ELSE expr FI .)
    IN              reduce using rule 55 (expr -> IF expr THEN expr ELSE expr FI .)
    FI              reduce using rule 55 (expr -> IF expr THEN expr ELSE expr FI .)


state 196

    (56) expr -> IF error THEN expr ELSE expr FI .
    =               reduce using rule 56 (expr -> IF error THEN expr ELSE expr FI .)
    LE              reduce using rule 56 (expr -> IF error THEN expr ELSE expr FI .)
    <               reduce using rule 56 (expr -> IF error THEN expr ELSE expr FI .)
    /               reduce using rule 56 (expr -> IF error THEN expr ELSE expr FI .)
    *               reduce using rule 56 (expr -> IF error THEN expr ELSE expr FI .)
    -               reduce using rule 56 (expr -> IF error THEN expr ELSE expr FI .)
    +               reduce using rule 56 (expr -> IF error THEN expr ELSE expr FI .)
    @               reduce using rule 56 (expr -> IF error THEN expr ELSE expr FI .)
    .               reduce using rule 56 (expr -> IF error THEN expr ELSE expr FI .)
    ;               reduce using rule 56 (expr -> IF error THEN expr ELSE expr FI .)
    )               reduce using rule 56 (expr -> IF error THEN expr ELSE expr FI .)
    OF              reduce using rule 56 (expr -> IF error THEN expr ELSE expr FI .)
    LOOP            reduce using rule 56 (expr -> IF error THEN expr ELSE expr FI .)
    THEN            reduce using rule 56 (expr -> IF error THEN expr ELSE expr FI .)
    ,               reduce using rule 56 (expr -> IF error THEN expr ELSE expr FI .)
    }               reduce using rule 56 (expr -> IF error THEN expr ELSE expr FI .)
    POOL            reduce using rule 56 (expr -> IF error THEN expr ELSE expr FI .)
    ELSE            reduce using rule 56 (expr -> IF error THEN expr ELSE expr FI .)
    IN              reduce using rule 56 (expr -> IF error THEN expr ELSE expr FI .)
    FI              reduce using rule 56 (expr -> IF error THEN expr ELSE expr FI .)


state 197

    (60) expr -> expr @ TYPEID . OBJECTID ( parametros ) .
    =               reduce using rule 60 (expr -> expr @ TYPEID . OBJECTID ( parametros ) .)
    LE              reduce using rule 60 (expr -> expr @ TYPEID . OBJECTID ( parametros ) .)
    <               reduce using rule 60 (expr -> expr @ TYPEID . OBJECTID ( parametros ) .)
    /               reduce using rule 60 (expr -> expr @ TYPEID . OBJECTID ( parametros ) .)
    *               reduce using rule 60 (expr -> expr @ TYPEID . OBJECTID ( parametros ) .)
    -               reduce using rule 60 (expr -> expr @ TYPEID . OBJECTID ( parametros ) .)
    +               reduce using rule 60 (expr -> expr @ TYPEID . OBJECTID ( parametros ) .)
    @               reduce using rule 60 (expr -> expr @ TYPEID . OBJECTID ( parametros ) .)
    .               reduce using rule 60 (expr -> expr @ TYPEID . OBJECTID ( parametros ) .)
    ;               reduce using rule 60 (expr -> expr @ TYPEID . OBJECTID ( parametros ) .)
    )               reduce using rule 60 (expr -> expr @ TYPEID . OBJECTID ( parametros ) .)
    OF              reduce using rule 60 (expr -> expr @ TYPEID . OBJECTID ( parametros ) .)
    LOOP            reduce using rule 60 (expr -> expr @ TYPEID . OBJECTID ( parametros ) .)
    THEN            reduce using rule 60 (expr -> expr @ TYPEID . OBJECTID ( parametros ) .)
    ,               reduce using rule 60 (expr -> expr @ TYPEID . OBJECTID ( parametros ) .)
    }               reduce using rule 60 (expr -> expr @ TYPEID . OBJECTID ( parametros ) .)
    POOL            reduce using rule 60 (expr -> expr @ TYPEID . OBJECTID ( parametros ) .)
    ELSE            reduce using rule 60 (expr -> expr @ TYPEID . OBJECTID ( parametros ) .)
    IN              reduce using rule 60 (expr -> expr @ TYPEID . OBJECTID ( parametros ) .)
    FI              reduce using rule 60 (expr -> expr @ TYPEID . OBJECTID ( parametros ) .)


state 198

    (76) darrowlist -> darrowlist OBJECTID : TYPEID DARROW . expr ;
    (23) expr -> . error INT_CONST
    (24) expr -> . STR_CONST
    (25) expr -> . INT_CONST
    (26) expr -> . OBJECTID
    (27) expr -> . ( expr )
    (28) expr -> . NOT error
    (29) expr -> . NOT expr
    (30) expr -> . expr = expr
    (31) expr -> . expr LE expr
    (32) expr -> . expr < expr
    (33) expr -> . ~ expr
    (34) expr -> . expr / expr
    (35) expr -> . expr * expr
    (36) expr -> . expr - expr
    (37) expr -> . expr + expr
    (38) expr -> . ISVOID error
    (39) expr -> . ISVOID expr
    (40) expr -> . error TYPEID
    (41) expr -> . NEW TYPEID
    (42) expr -> . CASE expr OF darrowlist ESAC
    (43) expr -> . CASE expr OF error ESAC
    (44) expr -> . CASE error OF darrowlist ESAC
    (45) expr -> . LET OBJECTID : TYPEID expr IN error
    (46) expr -> . LET OBJECTID : TYPEID error IN expr
    (47) expr -> . LET OBJECTID : TYPEID tiposlet IN expr
    (48) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (49) expr -> . LET OBJECTID : TYPEID IN expr
    (50) expr -> . { exprs }
    (51) expr -> . WHILE expr LOOP error POOL
    (52) expr -> . WHILE error LOOP expr POOL
    (53) expr -> . WHILE error LOOP error POOL
    (54) expr -> . WHILE expr LOOP expr POOL
    (55) expr -> . IF expr THEN expr ELSE expr FI
    (56) expr -> . IF error THEN expr ELSE expr FI
    (57) expr -> . IF expr THEN error FI
    (58) expr -> . OBJECTID ( parametros )
    (59) expr -> . OBJECTID ( )
    (60) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (61) expr -> . expr . OBJECTID ( parametros )
    (62) expr -> . expr @ TYPEID . OBJECTID ( )
    (63) expr -> . expr . OBJECTID ( )
    (64) expr -> . OBJECTID ASSIGN error
    (65) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 76
    STR_CONST       shift and go to state 46
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 42
    (               shift and go to state 47
    NOT             shift and go to state 48
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NEW             shift and go to state 51
    CASE            shift and go to state 52
    LET             shift and go to state 53
    {               shift and go to state 54
    WHILE           shift and go to state 55
    IF              shift and go to state 56

    expr                           shift and go to state 203

state 199

    (77) darrowlist -> OBJECTID : TYPEID DARROW error . ;
    (23) expr -> error . INT_CONST
    (40) expr -> error . TYPEID
    ;               shift and go to state 204
    INT_CONST       shift and go to state 65
    TYPEID          shift and go to state 64


state 200

    (78) darrowlist -> OBJECTID : TYPEID DARROW expr . ;
    (30) expr -> expr . = expr
    (31) expr -> expr . LE expr
    (32) expr -> expr . < expr
    (34) expr -> expr . / expr
    (35) expr -> expr . * expr
    (36) expr -> expr . - expr
    (37) expr -> expr . + expr
    (60) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (61) expr -> expr . . OBJECTID ( parametros )
    (62) expr -> expr . @ TYPEID . OBJECTID ( )
    (63) expr -> expr . . OBJECTID ( )
    ;               shift and go to state 205
    =               shift and go to state 66
    LE              shift and go to state 67
    <               shift and go to state 68
    /               shift and go to state 69
    *               shift and go to state 70
    -               shift and go to state 71
    +               shift and go to state 72
    @               shift and go to state 73
    .               shift and go to state 74


state 201

    (48) expr -> LET OBJECTID : TYPEID ASSIGN expr IN expr .
    (30) expr -> expr . = expr
    (31) expr -> expr . LE expr
    (32) expr -> expr . < expr
    (34) expr -> expr . / expr
    (35) expr -> expr . * expr
    (36) expr -> expr . - expr
    (37) expr -> expr . + expr
    (60) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (61) expr -> expr . . OBJECTID ( parametros )
    (62) expr -> expr . @ TYPEID . OBJECTID ( )
    (63) expr -> expr . . OBJECTID ( )
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 48 (expr -> LET OBJECTID : TYPEID ASSIGN expr IN expr .)
    )               reduce using rule 48 (expr -> LET OBJECTID : TYPEID ASSIGN expr IN expr .)
    OF              reduce using rule 48 (expr -> LET OBJECTID : TYPEID ASSIGN expr IN expr .)
    LOOP            reduce using rule 48 (expr -> LET OBJECTID : TYPEID ASSIGN expr IN expr .)
    THEN            reduce using rule 48 (expr -> LET OBJECTID : TYPEID ASSIGN expr IN expr .)
    ,               reduce using rule 48 (expr -> LET OBJECTID : TYPEID ASSIGN expr IN expr .)
    }               reduce using rule 48 (expr -> LET OBJECTID : TYPEID ASSIGN expr IN expr .)
    POOL            reduce using rule 48 (expr -> LET OBJECTID : TYPEID ASSIGN expr IN expr .)
    ELSE            reduce using rule 48 (expr -> LET OBJECTID : TYPEID ASSIGN expr IN expr .)
    IN              reduce using rule 48 (expr -> LET OBJECTID : TYPEID ASSIGN expr IN expr .)
    FI              reduce using rule 48 (expr -> LET OBJECTID : TYPEID ASSIGN expr IN expr .)
    =               shift and go to state 66
    LE              shift and go to state 67
    <               shift and go to state 68
    /               shift and go to state 69
    *               shift and go to state 70
    -               shift and go to state 71
    +               shift and go to state 72
    @               shift and go to state 73
    .               shift and go to state 74


state 202

    (73) tipolet -> OBJECTID : TYPEID . ASSIGN error
    (74) tipolet -> OBJECTID : TYPEID . ASSIGN expr
    ASSIGN          shift and go to state 206


state 203

    (76) darrowlist -> darrowlist OBJECTID : TYPEID DARROW expr . ;
    (30) expr -> expr . = expr
    (31) expr -> expr . LE expr
    (32) expr -> expr . < expr
    (34) expr -> expr . / expr
    (35) expr -> expr . * expr
    (36) expr -> expr . - expr
    (37) expr -> expr . + expr
    (60) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (61) expr -> expr . . OBJECTID ( parametros )
    (62) expr -> expr . @ TYPEID . OBJECTID ( )
    (63) expr -> expr . . OBJECTID ( )
    ;               shift and go to state 207
    =               shift and go to state 66
    LE              shift and go to state 67
    <               shift and go to state 68
    /               shift and go to state 69
    *               shift and go to state 70
    -               shift and go to state 71
    +               shift and go to state 72
    @               shift and go to state 73
    .               shift and go to state 74


state 204

    (77) darrowlist -> OBJECTID : TYPEID DARROW error ; .
    ESAC            reduce using rule 77 (darrowlist -> OBJECTID : TYPEID DARROW error ; .)
    OBJECTID        reduce using rule 77 (darrowlist -> OBJECTID : TYPEID DARROW error ; .)


state 205

    (78) darrowlist -> OBJECTID : TYPEID DARROW expr ; .
    ESAC            reduce using rule 78 (darrowlist -> OBJECTID : TYPEID DARROW expr ; .)
    OBJECTID        reduce using rule 78 (darrowlist -> OBJECTID : TYPEID DARROW expr ; .)


state 206

    (73) tipolet -> OBJECTID : TYPEID ASSIGN . error
    (74) tipolet -> OBJECTID : TYPEID ASSIGN . expr
    (23) expr -> . error INT_CONST
    (24) expr -> . STR_CONST
    (25) expr -> . INT_CONST
    (26) expr -> . OBJECTID
    (27) expr -> . ( expr )
    (28) expr -> . NOT error
    (29) expr -> . NOT expr
    (30) expr -> . expr = expr
    (31) expr -> . expr LE expr
    (32) expr -> . expr < expr
    (33) expr -> . ~ expr
    (34) expr -> . expr / expr
    (35) expr -> . expr * expr
    (36) expr -> . expr - expr
    (37) expr -> . expr + expr
    (38) expr -> . ISVOID error
    (39) expr -> . ISVOID expr
    (40) expr -> . error TYPEID
    (41) expr -> . NEW TYPEID
    (42) expr -> . CASE expr OF darrowlist ESAC
    (43) expr -> . CASE expr OF error ESAC
    (44) expr -> . CASE error OF darrowlist ESAC
    (45) expr -> . LET OBJECTID : TYPEID expr IN error
    (46) expr -> . LET OBJECTID : TYPEID error IN expr
    (47) expr -> . LET OBJECTID : TYPEID tiposlet IN expr
    (48) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (49) expr -> . LET OBJECTID : TYPEID IN expr
    (50) expr -> . { exprs }
    (51) expr -> . WHILE expr LOOP error POOL
    (52) expr -> . WHILE error LOOP expr POOL
    (53) expr -> . WHILE error LOOP error POOL
    (54) expr -> . WHILE expr LOOP expr POOL
    (55) expr -> . IF expr THEN expr ELSE expr FI
    (56) expr -> . IF error THEN expr ELSE expr FI
    (57) expr -> . IF expr THEN error FI
    (58) expr -> . OBJECTID ( parametros )
    (59) expr -> . OBJECTID ( )
    (60) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (61) expr -> . expr . OBJECTID ( parametros )
    (62) expr -> . expr @ TYPEID . OBJECTID ( )
    (63) expr -> . expr . OBJECTID ( )
    (64) expr -> . OBJECTID ASSIGN error
    (65) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 208
    STR_CONST       shift and go to state 46
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 42
    (               shift and go to state 47
    NOT             shift and go to state 48
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NEW             shift and go to state 51
    CASE            shift and go to state 52
    LET             shift and go to state 53
    {               shift and go to state 54
    WHILE           shift and go to state 55
    IF              shift and go to state 56

    expr                           shift and go to state 209

state 207

    (76) darrowlist -> darrowlist OBJECTID : TYPEID DARROW expr ; .
    ESAC            reduce using rule 76 (darrowlist -> darrowlist OBJECTID : TYPEID DARROW expr ; .)
    OBJECTID        reduce using rule 76 (darrowlist -> darrowlist OBJECTID : TYPEID DARROW expr ; .)


state 208

    (73) tipolet -> OBJECTID : TYPEID ASSIGN error .
    (23) expr -> error . INT_CONST
    (40) expr -> error . TYPEID
    IN              reduce using rule 73 (tipolet -> OBJECTID : TYPEID ASSIGN error .)
    INT_CONST       shift and go to state 65
    TYPEID          shift and go to state 64


state 209

    (74) tipolet -> OBJECTID : TYPEID ASSIGN expr .
    (30) expr -> expr . = expr
    (31) expr -> expr . LE expr
    (32) expr -> expr . < expr
    (34) expr -> expr . / expr
    (35) expr -> expr . * expr
    (36) expr -> expr . - expr
    (37) expr -> expr . + expr
    (60) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (61) expr -> expr . . OBJECTID ( parametros )
    (62) expr -> expr . @ TYPEID . OBJECTID ( )
    (63) expr -> expr . . OBJECTID ( )
    IN              reduce using rule 74 (tipolet -> OBJECTID : TYPEID ASSIGN expr .)
    =               shift and go to state 66
    LE              shift and go to state 67
    <               shift and go to state 68
    /               shift and go to state 69
    *               shift and go to state 70
    -               shift and go to state 71
    +               shift and go to state 72
    @               shift and go to state 73
    .               shift and go to state 74


Conflicts:

shift/reduce conflict for = in state 100 resolved as shift
shift/reduce conflict for LE in state 100 resolved as shift
shift/reduce conflict for < in state 100 resolved as shift
shift/reduce conflict for / in state 100 resolved as shift
shift/reduce conflict for * in state 100 resolved as shift
shift/reduce conflict for - in state 100 resolved as shift
shift/reduce conflict for + in state 100 resolved as shift
shift/reduce conflict for @ in state 100 resolved as shift
shift/reduce conflict for . in state 100 resolved as shift
shift/reduce conflict for = in state 178 resolved as shift
shift/reduce conflict for LE in state 178 resolved as shift
shift/reduce conflict for < in state 178 resolved as shift
shift/reduce conflict for / in state 178 resolved as shift
shift/reduce conflict for * in state 178 resolved as shift
shift/reduce conflict for - in state 178 resolved as shift
shift/reduce conflict for + in state 178 resolved as shift
shift/reduce conflict for @ in state 178 resolved as shift
shift/reduce conflict for . in state 178 resolved as shift
shift/reduce conflict for = in state 191 resolved as shift
shift/reduce conflict for LE in state 191 resolved as shift
shift/reduce conflict for < in state 191 resolved as shift
shift/reduce conflict for / in state 191 resolved as shift
shift/reduce conflict for * in state 191 resolved as shift
shift/reduce conflict for - in state 191 resolved as shift
shift/reduce conflict for + in state 191 resolved as shift
shift/reduce conflict for @ in state 191 resolved as shift
shift/reduce conflict for . in state 191 resolved as shift
shift/reduce conflict for = in state 192 resolved as shift
shift/reduce conflict for LE in state 192 resolved as shift
shift/reduce conflict for < in state 192 resolved as shift
shift/reduce conflict for / in state 192 resolved as shift
shift/reduce conflict for * in state 192 resolved as shift
shift/reduce conflict for - in state 192 resolved as shift
shift/reduce conflict for + in state 192 resolved as shift
shift/reduce conflict for @ in state 192 resolved as shift
shift/reduce conflict for . in state 192 resolved as shift
shift/reduce conflict for = in state 201 resolved as shift
shift/reduce conflict for LE in state 201 resolved as shift
shift/reduce conflict for < in state 201 resolved as shift
shift/reduce conflict for / in state 201 resolved as shift
shift/reduce conflict for * in state 201 resolved as shift
shift/reduce conflict for - in state 201 resolved as shift
shift/reduce conflict for + in state 201 resolved as shift
shift/reduce conflict for @ in state 201 resolved as shift
shift/reduce conflict for . in state 201 resolved as shift